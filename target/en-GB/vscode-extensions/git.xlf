<?xml version="1.0" encoding="utf-8"?>
<xliff version="1.2" xmlns="urn:oasis:names:tc:xliff:document:1.2">
  <file original="extensions/git/package" source-language="en" target-language="en-gb" datatype="plaintext">
    <body>
      <trans-unit id="displayName">
        <source xml:lang="en">Git</source>
        <target state="translated">Git</target>
      </trans-unit>
      <trans-unit id="description">
        <source xml:lang="en">Git SCM Integration</source>
        <target state="translated">Git SCM Integration</target>
      </trans-unit>
      <trans-unit id="command.setLogLevel">
        <source xml:lang="en">Set Log Level...</source>
        <target state="translated">Set Log Level...</target>
      </trans-unit>
      <trans-unit id="command.clone">
        <source xml:lang="en">Clone</source>
        <target state="translated">Clone</target>
      </trans-unit>
      <trans-unit id="command.init">
        <source xml:lang="en">Initialize Repository</source>
        <target state="translated">Initialise Repository</target>
      </trans-unit>
      <trans-unit id="command.openRepository">
        <source xml:lang="en">Open Repository</source>
        <target state="translated">Open Repository</target>
      </trans-unit>
      <trans-unit id="command.close">
        <source xml:lang="en">Close Repository</source>
        <target state="translated">Close Repository</target>
      </trans-unit>
      <trans-unit id="command.refresh">
        <source xml:lang="en">Refresh</source>
        <target state="translated">Refresh</target>
      </trans-unit>
      <trans-unit id="command.openChange">
        <source xml:lang="en">Open Changes</source>
        <target state="translated">Open Changes</target>
      </trans-unit>
      <trans-unit id="command.openFile">
        <source xml:lang="en">Open File</source>
        <target state="translated">Open File</target>
      </trans-unit>
      <trans-unit id="command.openHEADFile">
        <source xml:lang="en">Open File (HEAD)</source>
        <target state="translated">Open File (HEAD)</target>
      </trans-unit>
      <trans-unit id="command.stage">
        <source xml:lang="en">Stage Changes</source>
        <target state="translated">Stage Changes</target>
      </trans-unit>
      <trans-unit id="command.stageAll">
        <source xml:lang="en">Stage All Changes</source>
        <target state="translated">Stage All Changes</target>
      </trans-unit>
      <trans-unit id="command.stageAllTracked">
        <source xml:lang="en">Stage All Tracked Changes</source>
        <target state="new">Stage All Tracked Changes</target>
      </trans-unit>
      <trans-unit id="command.stageAllUntracked">
        <source xml:lang="en">Stage All Untracked Changes</source>
        <target state="new">Stage All Untracked Changes</target>
      </trans-unit>
      <trans-unit id="command.stageSelectedRanges">
        <source xml:lang="en">Stage Selected Ranges</source>
        <target state="translated">Stage Selected Ranges</target>
      </trans-unit>
      <trans-unit id="command.revertSelectedRanges">
        <source xml:lang="en">Revert Selected Ranges</source>
        <target state="translated">Revert Selected Ranges</target>
      </trans-unit>
      <trans-unit id="command.stageChange">
        <source xml:lang="en">Stage Change</source>
        <target state="translated">Stage Change</target>
      </trans-unit>
      <trans-unit id="command.revertChange">
        <source xml:lang="en">Revert Change</source>
        <target state="translated">Revert Change</target>
      </trans-unit>
      <trans-unit id="command.unstage">
        <source xml:lang="en">Unstage Changes</source>
        <target state="translated">Unstage Changes</target>
      </trans-unit>
      <trans-unit id="command.unstageAll">
        <source xml:lang="en">Unstage All Changes</source>
        <target state="translated">Unstage All Changes</target>
      </trans-unit>
      <trans-unit id="command.unstageSelectedRanges">
        <source xml:lang="en">Unstage Selected Ranges</source>
        <target state="translated">Unstage Selected Ranges</target>
      </trans-unit>
      <trans-unit id="command.clean">
        <source xml:lang="en">Discard Changes</source>
        <target state="translated">Discard Changes</target>
      </trans-unit>
      <trans-unit id="command.cleanAll">
        <source xml:lang="en">Discard All Changes</source>
        <target state="translated">Discard All Changes</target>
      </trans-unit>
      <trans-unit id="command.cleanAllTracked">
        <source xml:lang="en">Discard All Tracked Changes</source>
        <target state="new">Discard All Tracked Changes</target>
      </trans-unit>
      <trans-unit id="command.cleanAllUntracked">
        <source xml:lang="en">Discard All Untracked Changes</source>
        <target state="new">Discard All Untracked Changes</target>
      </trans-unit>
      <trans-unit id="command.commit">
        <source xml:lang="en">Commit</source>
        <target state="translated">Commit</target>
      </trans-unit>
      <trans-unit id="command.commitStaged">
        <source xml:lang="en">Commit Staged</source>
        <target state="translated">Commit Staged</target>
      </trans-unit>
      <trans-unit id="command.commitEmpty">
        <source xml:lang="en">Commit Empty</source>
        <target state="new">Commit Empty</target>
      </trans-unit>
      <trans-unit id="command.commitStagedSigned">
        <source xml:lang="en">Commit Staged (Signed Off)</source>
        <target state="translated">Commit Staged (Signed Off)</target>
      </trans-unit>
      <trans-unit id="command.commitStagedAmend">
        <source xml:lang="en">Commit Staged (Amend)</source>
        <target state="translated">Commit Staged (Amend)</target>
      </trans-unit>
      <trans-unit id="command.commitAll">
        <source xml:lang="en">Commit All</source>
        <target state="translated">Commit All</target>
      </trans-unit>
      <trans-unit id="command.commitAllSigned">
        <source xml:lang="en">Commit All (Signed Off)</source>
        <target state="translated">Commit All (Signed Off)</target>
      </trans-unit>
      <trans-unit id="command.commitAllAmend">
        <source xml:lang="en">Commit All (Amend)</source>
        <target state="translated">Commit All (Amend)</target>
      </trans-unit>
      <trans-unit id="command.restoreCommitTemplate">
        <source xml:lang="en">Restore Commit Template</source>
        <target state="new">Restore Commit Template</target>
      </trans-unit>
      <trans-unit id="command.undoCommit">
        <source xml:lang="en">Undo Last Commit</source>
        <target state="translated">Undo Last Commit</target>
      </trans-unit>
      <trans-unit id="command.checkout">
        <source xml:lang="en">Checkout to...</source>
        <target state="translated">Checkout to...</target>
      </trans-unit>
      <trans-unit id="command.branch">
        <source xml:lang="en">Create Branch...</source>
        <target state="translated">Create Branch...</target>
      </trans-unit>
      <trans-unit id="command.branchFrom">
        <source xml:lang="en">Create Branch From...</source>
        <target state="new">Create Branch From...</target>
      </trans-unit>
      <trans-unit id="command.deleteBranch">
        <source xml:lang="en">Delete Branch...</source>
        <target state="translated">Delete Branch...</target>
      </trans-unit>
      <trans-unit id="command.renameBranch">
        <source xml:lang="en">Rename Branch...</source>
        <target state="translated">Rename Branch...</target>
      </trans-unit>
      <trans-unit id="command.merge">
        <source xml:lang="en">Merge Branch...</source>
        <target state="translated">Merge Branch...</target>
      </trans-unit>
      <trans-unit id="command.createTag">
        <source xml:lang="en">Create Tag</source>
        <target state="translated">Create Tag</target>
      </trans-unit>
      <trans-unit id="command.deleteTag">
        <source xml:lang="en">Delete Tag</source>
        <target state="new">Delete Tag</target>
      </trans-unit>
      <trans-unit id="command.fetch">
        <source xml:lang="en">Fetch</source>
        <target state="translated">Fetch</target>
      </trans-unit>
      <trans-unit id="command.fetchPrune">
        <source xml:lang="en">Fetch (Prune)</source>
        <target state="new">Fetch (Prune)</target>
      </trans-unit>
      <trans-unit id="command.fetchAll">
        <source xml:lang="en">Fetch From All Remotes</source>
        <target state="new">Fetch From All Remotes</target>
      </trans-unit>
      <trans-unit id="command.pull">
        <source xml:lang="en">Pull</source>
        <target state="translated">Pull</target>
      </trans-unit>
      <trans-unit id="command.pullRebase">
        <source xml:lang="en">Pull (Rebase)</source>
        <target state="translated">Pull (Rebase)</target>
      </trans-unit>
      <trans-unit id="command.pullFrom">
        <source xml:lang="en">Pull from...</source>
        <target state="translated">Pull from...</target>
      </trans-unit>
      <trans-unit id="command.push">
        <source xml:lang="en">Push</source>
        <target state="translated">Push</target>
      </trans-unit>
      <trans-unit id="command.pushForce">
        <source xml:lang="en">Push (Force)</source>
        <target state="new">Push (Force)</target>
      </trans-unit>
      <trans-unit id="command.pushTo">
        <source xml:lang="en">Push to...</source>
        <target state="translated">Push to...</target>
      </trans-unit>
      <trans-unit id="command.pushToForce">
        <source xml:lang="en">Push to... (Force)</source>
        <target state="new">Push to... (Force)</target>
      </trans-unit>
      <trans-unit id="command.pushFollowTags">
        <source xml:lang="en">Push (Follow Tags)</source>
        <target state="new">Push (Follow Tags)</target>
      </trans-unit>
      <trans-unit id="command.pushFollowTagsForce">
        <source xml:lang="en">Push (Follow Tags, Force)</source>
        <target state="translated">Push (Follow Tags, Force)</target>
      </trans-unit>
      <trans-unit id="command.addRemote">
        <source xml:lang="en">Add Remote</source>
        <target state="translated">Add Remote</target>
      </trans-unit>
      <trans-unit id="command.removeRemote">
        <source xml:lang="en">Remove Remote</source>
        <target state="new">Remove Remote</target>
      </trans-unit>
      <trans-unit id="command.sync">
        <source xml:lang="en">Sync</source>
        <target state="translated">Sync</target>
      </trans-unit>
      <trans-unit id="command.syncRebase">
        <source xml:lang="en">Sync (Rebase)</source>
        <target state="translated">Sync (Rebase)</target>
      </trans-unit>
      <trans-unit id="command.publish">
        <source xml:lang="en">Publish Branch...</source>
        <target state="new">Publish Branch...</target>
      </trans-unit>
      <trans-unit id="command.showOutput">
        <source xml:lang="en">Show Git Output</source>
        <target state="translated">Show Git Output</target>
      </trans-unit>
      <trans-unit id="command.ignore">
        <source xml:lang="en">Add to .gitignore</source>
        <target state="new">Add to .gitignore</target>
      </trans-unit>
      <trans-unit id="command.revealInExplorer">
        <source xml:lang="en">Reveal in Side Bar</source>
        <target state="translated">Reveal in Side Bar</target>
      </trans-unit>
      <trans-unit id="command.stashIncludeUntracked">
        <source xml:lang="en">Stash (Include Untracked)</source>
        <target state="translated">Stash (Include Untracked)</target>
      </trans-unit>
      <trans-unit id="command.stash">
        <source xml:lang="en">Stash</source>
        <target state="translated">Stash</target>
      </trans-unit>
      <trans-unit id="command.stashPop">
        <source xml:lang="en">Pop Stash...</source>
        <target state="translated">Pop Stash...</target>
      </trans-unit>
      <trans-unit id="command.stashPopLatest">
        <source xml:lang="en">Pop Latest Stash</source>
        <target state="translated">Pop Latest Stash</target>
      </trans-unit>
      <trans-unit id="command.stashApply">
        <source xml:lang="en">Apply Stash...</source>
        <target state="new">Apply Stash...</target>
      </trans-unit>
      <trans-unit id="command.stashApplyLatest">
        <source xml:lang="en">Apply Latest Stash</source>
        <target state="new">Apply Latest Stash</target>
      </trans-unit>
      <trans-unit id="command.stashDrop">
        <source xml:lang="en">Drop Stash...</source>
        <target state="new">Drop Stash...</target>
      </trans-unit>
      <trans-unit id="command.timelineOpenDiff">
        <source xml:lang="en">Open Changes</source>
        <target state="translated">Open Changes</target>
      </trans-unit>
      <trans-unit id="command.timelineCopyCommitId">
        <source xml:lang="en">Copy Commit ID</source>
        <target state="new">Copy Commit ID</target>
      </trans-unit>
      <trans-unit id="command.timelineCopyCommitMessage">
        <source xml:lang="en">Copy Commit Message</source>
        <target state="new">Copy Commit Message</target>
      </trans-unit>
      <trans-unit id="config.enabled">
        <source xml:lang="en">Whether git is enabled.</source>
        <target state="new">Whether git is enabled.</target>
      </trans-unit>
      <trans-unit id="config.path">
        <source xml:lang="en">Path and filename of the git executable, e.g. `C:\Program Files\Git\bin\git.exe` (Windows).</source>
        <target state="translated">Path and filename of the git executable, e.g. `C:\Program Files\Git\bin\git.exe` (Windows).</target>
      </trans-unit>
      <trans-unit id="config.autoRepositoryDetection">
        <source xml:lang="en">Configures when repositories should be automatically detected.</source>
        <target state="new">Configures when repositories should be automatically detected.</target>
      </trans-unit>
      <trans-unit id="config.autoRepositoryDetection.true">
        <source xml:lang="en">Scan for both subfolders of the current opened folder and parent folders of open files.</source>
        <target state="translated">Scan for both subfolders of the current opened folder and parent folders of open files.</target>
      </trans-unit>
      <trans-unit id="config.autoRepositoryDetection.false">
        <source xml:lang="en">Disable automatic repository scanning.</source>
        <target state="new">Disable automatic repository scanning.</target>
      </trans-unit>
      <trans-unit id="config.autoRepositoryDetection.subFolders">
        <source xml:lang="en">Scan for subfolders of the currently opened folder.</source>
        <target state="new">Scan for subfolders of the currently opened folder.</target>
      </trans-unit>
      <trans-unit id="config.autoRepositoryDetection.openEditors">
        <source xml:lang="en">Scan for parent folders of open files.</source>
        <target state="new">Scan for parent folders of open files.</target>
      </trans-unit>
      <trans-unit id="config.autorefresh">
        <source xml:lang="en">Whether auto refreshing is enabled.</source>
        <target state="new">Whether auto refreshing is enabled.</target>
      </trans-unit>
      <trans-unit id="config.autofetch">
        <source xml:lang="en">When enabled, commits will automatically be fetched from the default remote of the current Git repository.</source>
        <target state="new">When enabled, commits will automatically be fetched from the default remote of the current Git repository.</target>
      </trans-unit>
      <trans-unit id="config.autofetchPeriod">
        <source xml:lang="en">Duration in seconds between each automatic git fetch, when `git.autofetch` is enabled.</source>
        <target state="new">Duration in seconds between each automatic git fetch, when `git.autofetch` is enabled.</target>
      </trans-unit>
      <trans-unit id="config.confirmSync">
        <source xml:lang="en">Confirm before synchronizing git repositories.</source>
        <target state="new">Confirm before synchronizing git repositories.</target>
      </trans-unit>
      <trans-unit id="config.countBadge">
        <source xml:lang="en">Controls the Git count badge.</source>
        <target state="new">Controls the Git count badge.</target>
      </trans-unit>
      <trans-unit id="config.countBadge.all">
        <source xml:lang="en">Count all changes.</source>
        <target state="new">Count all changes.</target>
      </trans-unit>
      <trans-unit id="config.countBadge.tracked">
        <source xml:lang="en">Count only tracked changes.</source>
        <target state="translated">Count only tracked changes.</target>
      </trans-unit>
      <trans-unit id="config.countBadge.off">
        <source xml:lang="en">Turn off counter.</source>
        <target state="new">Turn off counter.</target>
      </trans-unit>
      <trans-unit id="config.checkoutType">
        <source xml:lang="en">Controls what type of branches are listed when running `Checkout to...`.</source>
        <target state="new">Controls what type of branches are listed when running `Checkout to...`.</target>
      </trans-unit>
      <trans-unit id="config.checkoutType.all">
        <source xml:lang="en">Show all references.</source>
        <target state="new">Show all references.</target>
      </trans-unit>
      <trans-unit id="config.checkoutType.local">
        <source xml:lang="en">Show only local branches.</source>
        <target state="new">Show only local branches.</target>
      </trans-unit>
      <trans-unit id="config.checkoutType.tags">
        <source xml:lang="en">Show only tags.</source>
        <target state="new">Show only tags.</target>
      </trans-unit>
      <trans-unit id="config.checkoutType.remote">
        <source xml:lang="en">Show only remote branches.</source>
        <target state="new">Show only remote branches.</target>
      </trans-unit>
      <trans-unit id="config.branchValidationRegex">
        <source xml:lang="en">A regular expression to validate new branch names.</source>
        <target state="new">A regular expression to validate new branch names.</target>
      </trans-unit>
      <trans-unit id="config.branchWhitespaceChar">
        <source xml:lang="en">The character to replace whitespace in new branch names.</source>
        <target state="new">The character to replace whitespace in new branch names.</target>
      </trans-unit>
      <trans-unit id="config.ignoreLegacyWarning">
        <source xml:lang="en">Ignores the legacy Git warning.</source>
        <target state="new">Ignores the legacy Git warning.</target>
      </trans-unit>
      <trans-unit id="config.ignoreMissingGitWarning">
        <source xml:lang="en">Ignores the warning when Git is missing.</source>
        <target state="new">Ignores the warning when Git is missing.</target>
      </trans-unit>
      <trans-unit id="config.ignoreLimitWarning">
        <source xml:lang="en">Ignores the warning when there are too many changes in a repository.</source>
        <target state="new">Ignores the warning when there are too many changes in a repository.</target>
      </trans-unit>
      <trans-unit id="config.defaultCloneDirectory">
        <source xml:lang="en">The default location to clone a git repository.</source>
        <target state="translated">The default location to clone a git repository.</target>
      </trans-unit>
      <trans-unit id="config.enableSmartCommit">
        <source xml:lang="en">Commit all changes when there are no staged changes.</source>
        <target state="translated">Commit all changes when there are no staged changes.</target>
      </trans-unit>
      <trans-unit id="config.smartCommitChanges">
        <source xml:lang="en">Control which changes are automatically staged by Smart Commit.</source>
        <target state="new">Control which changes are automatically staged by Smart Commit.</target>
      </trans-unit>
      <trans-unit id="config.smartCommitChanges.all">
        <source xml:lang="en">Automatically stage all changes.</source>
        <target state="new">Automatically stage all changes.</target>
      </trans-unit>
      <trans-unit id="config.smartCommitChanges.tracked">
        <source xml:lang="en">Automatically staged tracked changes only.</source>
        <target state="new">Automatically staged tracked changes only.</target>
      </trans-unit>
      <trans-unit id="config.suggestSmartCommit">
        <source xml:lang="en">Suggests to enable smart commit (commit all changes when there are no staged changes).</source>
        <target state="new">Suggests to enable smart commit (commit all changes when there are no staged changes).</target>
      </trans-unit>
      <trans-unit id="config.enableCommitSigning">
        <source xml:lang="en">Enables commit signing with GPG.</source>
        <target state="translated">Enables commit signing with GPG.</target>
      </trans-unit>
      <trans-unit id="config.discardAllScope">
        <source xml:lang="en">Controls what changes are discarded by the `Discard all changes` command. `all` discards all changes. `tracked` discards only tracked files. `prompt` shows a prompt dialog every time the action is run.</source>
        <target state="translated">Controls what changes are discarded by the `Discard all changes` command. `all` discards all changes. `tracked` discards only tracked files. `prompt` shows a prompt dialog every time the action is run.</target>
      </trans-unit>
      <trans-unit id="config.decorations.enabled">
        <source xml:lang="en">Controls whether Git contributes colors and badges to the explorer and the open editors view.</source>
        <target state="translated">Controls whether Git contributes colours and badges to the explorer and the open editors view.</target>
      </trans-unit>
      <trans-unit id="config.enableStatusBarSync">
        <source xml:lang="en">Controls whether the Git Sync command appears in the status bar.</source>
        <target state="new">Controls whether the Git Sync command appears in the status bar.</target>
      </trans-unit>
      <trans-unit id="config.promptToSaveFilesBeforeCommit">
        <source xml:lang="en">Controls whether Git should check for unsaved files before committing.</source>
        <target state="translated">Controls whether Git should check for unsaved files before committing.</target>
      </trans-unit>
      <trans-unit id="config.promptToSaveFilesBeforeCommit.always">
        <source xml:lang="en">Check for any unsaved files.</source>
        <target state="new">Check for any unsaved files.</target>
      </trans-unit>
      <trans-unit id="config.promptToSaveFilesBeforeCommit.staged">
        <source xml:lang="en">Check only for unsaved staged files.</source>
        <target state="new">Check only for unsaved staged files.</target>
      </trans-unit>
      <trans-unit id="config.promptToSaveFilesBeforeCommit.never">
        <source xml:lang="en">Disable this check.</source>
        <target state="new">Disable this check.</target>
      </trans-unit>
      <trans-unit id="config.postCommitCommand">
        <source xml:lang="en">Runs a git command after a successful commit.</source>
        <target state="new">Runs a git command after a successful commit.</target>
      </trans-unit>
      <trans-unit id="config.postCommitCommand.none">
        <source xml:lang="en">Don't run any command after a commit.</source>
        <target state="new">Don't run any command after a commit.</target>
      </trans-unit>
      <trans-unit id="config.postCommitCommand.push">
        <source xml:lang="en">Run 'Git Push' after a successful commit.</source>
        <target state="new">Run 'Git Push' after a successful commit.</target>
      </trans-unit>
      <trans-unit id="config.postCommitCommand.sync">
        <source xml:lang="en">Run 'Git Sync' after a successful commit.</source>
        <target state="new">Run 'Git Sync' after a successful commit.</target>
      </trans-unit>
      <trans-unit id="config.showInlineOpenFileAction">
        <source xml:lang="en">Controls whether to show an inline Open File action in the Git changes view.</source>
        <target state="translated">Controls whether to show an inline Open File action in the Git changes view.</target>
      </trans-unit>
      <trans-unit id="config.showPushSuccessNotification">
        <source xml:lang="en">Controls whether to show a notification when a push is successful.</source>
        <target state="new">Controls whether to show a notification when a push is successful.</target>
      </trans-unit>
      <trans-unit id="config.inputValidation">
        <source xml:lang="en">Controls when to show commit message input validation.</source>
        <target state="translated">Controls when to show commit message input validation.</target>
      </trans-unit>
      <trans-unit id="config.inputValidationLength">
        <source xml:lang="en">Controls the commit message length threshold for showing a warning.</source>
        <target state="translated">Controls the commit message length threshold for showing a warning.</target>
      </trans-unit>
      <trans-unit id="config.inputValidationSubjectLength">
        <source xml:lang="en">Controls the commit message subject length threshold for showing a warning. Unset it to inherit the value of `config.inputValidationLength`.</source>
        <target state="translated">Controls the commit message subject length threshold for showing a warning. Unset it to inherit the value of `config.inputValidationLength`.</target>
      </trans-unit>
      <trans-unit id="config.detectSubmodules">
        <source xml:lang="en">Controls whether to automatically detect git submodules.</source>
        <target state="translated">Controls whether to automatically detect git submodules.</target>
      </trans-unit>
      <trans-unit id="config.detectSubmodulesLimit">
        <source xml:lang="en">Controls the limit of git submodules detected.</source>
        <target state="translated">Controls the limit of git submodules detected.</target>
      </trans-unit>
      <trans-unit id="config.alwaysShowStagedChangesResourceGroup">
        <source xml:lang="en">Always show the Staged Changes resource group.</source>
        <target state="new">Always show the Staged Changes resource group.</target>
      </trans-unit>
      <trans-unit id="config.alwaysSignOff">
        <source xml:lang="en">Controls the signoff flag for all commits.</source>
        <target state="new">Controls the signoff flag for all commits.</target>
      </trans-unit>
      <trans-unit id="config.ignoredRepositories">
        <source xml:lang="en">List of git repositories to ignore.</source>
        <target state="new">List of git repositories to ignore.</target>
      </trans-unit>
      <trans-unit id="config.scanRepositories">
        <source xml:lang="en">List of paths to search for git repositories in.</source>
        <target state="new">List of paths to search for git repositories in.</target>
      </trans-unit>
      <trans-unit id="config.showProgress">
        <source xml:lang="en">Controls whether git actions should show progress.</source>
        <target state="translated">Controls whether Git actions should show progress.</target>
      </trans-unit>
      <trans-unit id="config.rebaseWhenSync">
        <source xml:lang="en">Force git to use rebase when running the sync command.</source>
        <target state="new">Force git to use rebase when running the sync command.</target>
      </trans-unit>
      <trans-unit id="config.confirmEmptyCommits">
        <source xml:lang="en">Always confirm the creation of empty commits for the 'Git: Commit Empty' command.</source>
        <target state="new">Always confirm the creation of empty commits for the 'Git: Commit Empty' command.</target>
      </trans-unit>
      <trans-unit id="config.fetchOnPull">
        <source xml:lang="en">When enabled, fetch all branches when pulling. Otherwise, fetch just the current one.</source>
        <target state="new">When enabled, fetch all branches when pulling. Otherwise, fetch just the current one.</target>
      </trans-unit>
      <trans-unit id="config.pullTags">
        <source xml:lang="en">Fetch all tags when pulling.</source>
        <target state="new">Fetch all tags when pulling.</target>
      </trans-unit>
      <trans-unit id="config.autoStash">
        <source xml:lang="en">Stash any changes before pulling and restore them after successful pull.</source>
        <target state="new">Stash any changes before pulling and restore them after successful pull.</target>
      </trans-unit>
      <trans-unit id="config.allowForcePush">
        <source xml:lang="en">Controls whether force push (with or without lease) is enabled.</source>
        <target state="new">Controls whether force push (with or without lease) is enabled.</target>
      </trans-unit>
      <trans-unit id="config.useForcePushWithLease">
        <source xml:lang="en">Controls whether force pushing uses the safer force-with-lease variant.</source>
        <target state="new">Controls whether force pushing uses the safer force-with-lease variant.</target>
      </trans-unit>
      <trans-unit id="config.confirmForcePush">
        <source xml:lang="en">Controls whether to ask for confirmation before force-pushing.</source>
        <target state="new">Controls whether to ask for confirmation before force-pushing.</target>
      </trans-unit>
      <trans-unit id="config.openDiffOnClick">
        <source xml:lang="en">Controls whether the diff editor should be opened when clicking a change. Otherwise the regular editor will be opened.</source>
        <target state="new">Controls whether the diff editor should be opened when clicking a change. Otherwise the regular editor will be opened.</target>
      </trans-unit>
      <trans-unit id="config.supportCancellation">
        <source xml:lang="en">Controls whether a notification comes up when running the Sync action, which allows the user to cancel the operation.</source>
        <target state="new">Controls whether a notification comes up when running the Sync action, which allows the user to cancel the operation.</target>
      </trans-unit>
      <trans-unit id="config.branchSortOrder">
        <source xml:lang="en">Controls the sort order for branches.</source>
        <target state="new">Controls the sort order for branches.</target>
      </trans-unit>
      <trans-unit id="config.untrackedChanges">
        <source xml:lang="en">Controls how untracked changes behave.</source>
        <target state="new">Controls how untracked changes behave.</target>
      </trans-unit>
      <trans-unit id="config.untrackedChanges.mixed">
        <source xml:lang="en">All changes, tracked and untracked, appear together and behave equally.</source>
        <target state="new">All changes, tracked and untracked, appear together and behave equally.</target>
      </trans-unit>
      <trans-unit id="config.untrackedChanges.separate">
        <source xml:lang="en">Untracked changes appear separately in the Source Control view. They are also excluded from several actions.</source>
        <target state="new">Untracked changes appear separately in the Source Control view. They are also excluded from several actions.</target>
      </trans-unit>
      <trans-unit id="config.untrackedChanges.hidden">
        <source xml:lang="en">Untracked changes are hidden and excluded from several actions.</source>
        <target state="new">Untracked changes are hidden and excluded from several actions.</target>
      </trans-unit>
      <trans-unit id="colors.added">
        <source xml:lang="en">Color for added resources.</source>
        <target state="translated">Colour for added resources.</target>
      </trans-unit>
      <trans-unit id="colors.modified">
        <source xml:lang="en">Color for modified resources.</source>
        <target state="translated">Color for modified resources.</target>
      </trans-unit>
      <trans-unit id="colors.deleted">
        <source xml:lang="en">Color for deleted resources.</source>
        <target state="translated">Color for deleted resources.</target>
      </trans-unit>
      <trans-unit id="colors.untracked">
        <source xml:lang="en">Color for untracked resources.</source>
        <target state="translated">Color for untracked resources.</target>
      </trans-unit>
      <trans-unit id="colors.ignored">
        <source xml:lang="en">Color for ignored resources.</source>
        <target state="translated">Colour for ignored resources.</target>
      </trans-unit>
      <trans-unit id="colors.conflict">
        <source xml:lang="en">Color for resources with conflicts.</source>
        <target state="translated">Color for resources with conflicts.</target>
      </trans-unit>
      <trans-unit id="colors.submodule">
        <source xml:lang="en">Color for submodule resources.</source>
        <target state="translated">Color for submodule resources.</target>
      </trans-unit>
      <trans-unit id="view.workbench.scm.missing">
        <source xml:lang="en">A valid git installation was not detected, more details can be found in the [git output](command:git.showOutput).
Please [install git](https://git-scm.com/), or learn more about how to use git and source control in VS Code in [our docs](https://aka.ms/vscode-scm).
If you're using a different version control system, you can [search the Marketplace](command:workbench.extensions.search?%22%40category%3A%5C%22scm%20providers%5C%22%22) for additional extensions.</source>
        <target state="new">A valid git installation was not detected, more details can be found in the [git output](command:git.showOutput).
Please [install git](https://git-scm.com/), or learn more about how to use git and source control in VS Code in [our docs](https://aka.ms/vscode-scm).
If you're using a different version control system, you can [search the Marketplace](command:workbench.extensions.search?%22%40category%3A%5C%22scm%20providers%5C%22%22) for additional extensions.</target>
      </trans-unit>
      <trans-unit id="view.workbench.scm.disabled">
        <source xml:lang="en">If you would like to use git features, please enable git in your [settings](command:workbench.action.openSettings?%5B%22git.enabled%22%5D).
To learn more about how to use git and source control in VS Code [read our docs](https://aka.ms/vscode-scm).</source>
        <target state="new">If you would like to use git features, please enable git in your [settings](command:workbench.action.openSettings?%5B%22git.enabled%22%5D).
To learn more about how to use git and source control in VS Code [read our docs](https://aka.ms/vscode-scm).</target>
      </trans-unit>
      <trans-unit id="view.workbench.scm.empty">
        <source xml:lang="en">In order to use git features, you can open a folder containing a git repository or clone from a URL.
[Open Folder](command:vscode.openFolder)
[Clone Repository](command:git.clone)
To learn more about how to use git and source control in VS Code [read our docs](https://aka.ms/vscode-scm).</source>
        <target state="new">In order to use git features, you can open a folder containing a git repository or clone from a URL.
[Open Folder](command:vscode.openFolder)
[Clone Repository](command:git.clone)
To learn more about how to use git and source control in VS Code [read our docs](https://aka.ms/vscode-scm).</target>
      </trans-unit>
      <trans-unit id="view.workbench.scm.folder">
        <source xml:lang="en">The folder currently open doesn't have a git repository.
[Initialize Repository](command:git.init?%5Btrue%5D)
To learn more about how to use git and source control in VS Code [read our docs](https://aka.ms/vscode-scm).</source>
        <target state="new">The folder currently open doesn't have a git repository.
[Initialize Repository](command:git.init?%5Btrue%5D)
To learn more about how to use git and source control in VS Code [read our docs](https://aka.ms/vscode-scm).</target>
      </trans-unit>
      <trans-unit id="view.workbench.scm.workspace">
        <source xml:lang="en">The workspace currently open doesn't have any folders containing git repositories.
[Initialize Repository](command:git.init)
To learn more about how to use git and source control in VS Code [read our docs](https://aka.ms/vscode-scm).</source>
        <target state="new">The workspace currently open doesn't have any folders containing git repositories.
[Initialize Repository](command:git.init)
To learn more about how to use git and source control in VS Code [read our docs](https://aka.ms/vscode-scm).</target>
      </trans-unit>
      <trans-unit id="view.workbench.scm.emptyWorkspace">
        <source xml:lang="en">The workspace currently open doesn't have any folders containing git repositories.
[Add Folder to Workspace](command:workbench.action.addRootFolder)
To learn more about how to use git and source control in VS Code [read our docs](https://aka.ms/vscode-scm).</source>
        <target state="new">The workspace currently open doesn't have any folders containing git repositories.
[Add Folder to Workspace](command:workbench.action.addRootFolder)
To learn more about how to use git and source control in VS Code [read our docs](https://aka.ms/vscode-scm).</target>
      </trans-unit>
      <trans-unit id="view.workbench.cloneRepository">
        <source xml:lang="en">You can also clone a repository from a URL. To learn more about how to use git and source control in VS Code [read our docs](https://aka.ms/vscode-scm).
[Clone Repository](command:git.clone)</source>
        <target state="new">You can also clone a repository from a URL. To learn more about how to use git and source control in VS Code [read our docs](https://aka.ms/vscode-scm).
[Clone Repository](command:git.clone)</target>
      </trans-unit>
    </body>
  </file>
  <file original="extensions/git/dist/repository" source-language="en" target-language="en-gb" datatype="plaintext">
    <body>
      <trans-unit id="index modified">
        <source xml:lang="en">Index Modified</source>
        <target state="translated">Index Modified</target>
      </trans-unit>
      <trans-unit id="modified">
        <source xml:lang="en">Modified</source>
        <target state="translated">Modified</target>
      </trans-unit>
      <trans-unit id="index added">
        <source xml:lang="en">Index Added</source>
        <target state="translated">Index Added</target>
      </trans-unit>
      <trans-unit id="index deleted">
        <source xml:lang="en">Index Deleted</source>
        <target state="translated">Index Deleted</target>
      </trans-unit>
      <trans-unit id="deleted">
        <source xml:lang="en">Deleted</source>
        <target state="translated">Deleted</target>
      </trans-unit>
      <trans-unit id="index renamed">
        <source xml:lang="en">Index Renamed</source>
        <target state="translated">Index Renamed</target>
      </trans-unit>
      <trans-unit id="index copied">
        <source xml:lang="en">Index Copied</source>
        <target state="translated">Index Copied</target>
      </trans-unit>
      <trans-unit id="untracked">
        <source xml:lang="en">Untracked</source>
        <target state="translated">Untracked</target>
      </trans-unit>
      <trans-unit id="ignored">
        <source xml:lang="en">Ignored</source>
        <target state="translated">Ignored</target>
      </trans-unit>
      <trans-unit id="intent to add">
        <source xml:lang="en">Intent to Add</source>
        <target state="new">Intent to Add</target>
      </trans-unit>
      <trans-unit id="both deleted">
        <source xml:lang="en">Both Deleted</source>
        <target state="translated">Both Deleted</target>
      </trans-unit>
      <trans-unit id="added by us">
        <source xml:lang="en">Added By Us</source>
        <target state="translated">Added By Us</target>
      </trans-unit>
      <trans-unit id="deleted by them">
        <source xml:lang="en">Deleted By Them</source>
        <target state="translated">Deleted By Them</target>
      </trans-unit>
      <trans-unit id="added by them">
        <source xml:lang="en">Added By Them</source>
        <target state="translated">Added By Them</target>
      </trans-unit>
      <trans-unit id="deleted by us">
        <source xml:lang="en">Deleted By Us</source>
        <target state="translated">Deleted By Us</target>
      </trans-unit>
      <trans-unit id="both added">
        <source xml:lang="en">Both Added</source>
        <target state="translated">Both Added</target>
      </trans-unit>
      <trans-unit id="both modified">
        <source xml:lang="en">Both Modified</source>
        <target state="translated">Both Modified</target>
      </trans-unit>
      <trans-unit id="open">
        <source xml:lang="en">Open</source>
        <target state="translated">Open</target>
      </trans-unit>
      <trans-unit id="commit">
        <source xml:lang="en">Commit</source>
        <target state="translated">Commit</target>
      </trans-unit>
      <trans-unit id="merge changes">
        <source xml:lang="en">MERGE CHANGES</source>
        <target state="translated">Merge Changes</target>
      </trans-unit>
      <trans-unit id="staged changes">
        <source xml:lang="en">STAGED CHANGES</source>
        <target state="translated">Staged Changes</target>
      </trans-unit>
      <trans-unit id="changes">
        <source xml:lang="en">CHANGES</source>
        <target state="translated">Changes</target>
      </trans-unit>
      <trans-unit id="untracked changes">
        <source xml:lang="en">UNTRACKED CHANGES</source>
        <target state="new">UNTRACKED CHANGES</target>
      </trans-unit>
      <trans-unit id="push success">
        <source xml:lang="en">Successfully pushed.</source>
        <target state="new">Successfully pushed.</target>
      </trans-unit>
      <trans-unit id="commit in rebase">
        <source xml:lang="en">It's not possible to change the commit message in the middle of a rebase. Please complete the rebase operation and use interactive rebase instead.</source>
        <target state="new">It's not possible to change the commit message in the middle of a rebase. Please complete the rebase operation and use interactive rebase instead.</target>
      </trans-unit>
      <trans-unit id="commitMessageWhitespacesOnlyWarning">
        <source xml:lang="en">Current commit message only contains whitespace characters</source>
        <target state="translated">Current commit message only contains whitespace characters</target>
      </trans-unit>
      <trans-unit id="commitMessageCountdown">
        <source xml:lang="en">{0} characters left in current line</source>
        <target state="translated">{0} characters left in current line</target>
      </trans-unit>
      <trans-unit id="commitMessageWarning">
        <source xml:lang="en">{0} characters over {1} in current line</source>
        <target state="translated">{0} characters over {1} in current line</target>
      </trans-unit>
      <trans-unit id="sync is unpredictable">
        <source xml:lang="en">Syncing. Cancelling may cause serious damages to the repository</source>
        <target state="new">Syncing. Cancelling may cause serious damages to the repository</target>
      </trans-unit>
      <trans-unit id="huge">
        <source xml:lang="en">The git repository at '{0}' has too many active changes, only a subset of Git features will be enabled.</source>
        <target state="new">The git repository at '{0}' has too many active changes, only a subset of Git features will be enabled.</target>
      </trans-unit>
      <trans-unit id="neveragain">
        <source xml:lang="en">Don't Show Again</source>
        <target state="translated">Don't Show Again</target>
      </trans-unit>
      <trans-unit id="add known">
        <source xml:lang="en">Would you like to add '{0}' to .gitignore?</source>
        <target state="new">Would you like to add '{0}' to .gitignore?</target>
      </trans-unit>
      <trans-unit id="yes">
        <source xml:lang="en">Yes</source>
        <target state="translated">Yes</target>
      </trans-unit>
      <trans-unit id="commitMessageWithHeadLabel">
        <source xml:lang="en">Message ({0} to commit on '{1}')</source>
        <target state="new">Message ({0} to commit on '{1}')</target>
      </trans-unit>
      <trans-unit id="commitMessage">
        <source xml:lang="en">Message ({0} to commit)</source>
        <target state="new">Message ({0} to commit)</target>
      </trans-unit>
    </body>
  </file>
  <file original="extensions/git/dist/timelineProvider" source-language="en" target-language="en-gb" datatype="plaintext">
    <body>
      <trans-unit id="git.timeline.source">
        <source xml:lang="en">Git History</source>
        <target state="new">Git History</target>
      </trans-unit>
      <trans-unit id="git.timeline.you">
        <source xml:lang="en">You</source>
        <target state="new">You</target>
      </trans-unit>
      <trans-unit id="git.timeline.stagedChanges">
        <source xml:lang="en">Staged Changes</source>
        <target state="translated">Staged Changes</target>
      </trans-unit>
      <trans-unit id="git.timeline.detail">
        <source xml:lang="en">{0}  \u2014 {1}
{2}

{3}</source>
        <target state="new">{0}  \u2014 {1}
{2}

{3}</target>
      </trans-unit>
      <trans-unit id="git.index">
        <source xml:lang="en">Index</source>
        <target state="new">Index</target>
      </trans-unit>
      <trans-unit id="git.timeline.uncommitedChanges">
        <source xml:lang="en">Uncommited Changes</source>
        <target state="new">Uncommited Changes</target>
      </trans-unit>
      <trans-unit id="git.workingTree">
        <source xml:lang="en">Working Tree</source>
        <target state="new">Working Tree</target>
      </trans-unit>
    </body>
  </file>
  <file original="extensions/git/dist/main" source-language="en" target-language="en-gb" datatype="plaintext">
    <body>
      <trans-unit id="looking">
        <source xml:lang="en">Looking for git in: {0}</source>
        <target state="translated">Looking for git in: {0}</target>
      </trans-unit>
      <trans-unit id="using git">
        <source xml:lang="en">Using git {0} from {1}</source>
        <target state="translated">Using git {0} from {1}</target>
      </trans-unit>
      <trans-unit id="downloadgit">
        <source xml:lang="en">Download Git</source>
        <target state="translated">Download Git</target>
      </trans-unit>
      <trans-unit id="neverShowAgain">
        <source xml:lang="en">Don't Show Again</source>
        <target state="translated">Don't Show Again</target>
      </trans-unit>
      <trans-unit id="notfound">
        <source xml:lang="en">Git not found. Install it or configure it using the 'git.path' setting.</source>
        <target state="translated">Git not found. Install it or configure it using the 'git.path' setting.</target>
      </trans-unit>
      <trans-unit id="updateGit">
        <source xml:lang="en">Update Git</source>
        <target state="translated">Update Git</target>
      </trans-unit>
      <trans-unit id="git20">
        <source xml:lang="en">You seem to have git {0} installed. Code works best with git &gt;= 2</source>
        <target state="new">You seem to have git {0} installed. Code works best with git &gt;= 2</target>
      </trans-unit>
    </body>
  </file>
  <file original="extensions/git/dist/model" source-language="en" target-language="en-gb" datatype="plaintext">
    <body>
      <trans-unit id="not supported">
        <source xml:lang="en">Absolute paths not supported in 'git.scanRepositories' setting.</source>
        <target state="new">Absolute paths not supported in 'git.scanRepositories' setting.</target>
      </trans-unit>
      <trans-unit id="too many submodules">
        <source xml:lang="en">The '{0}' repository has {1} submodules which won't be opened automatically. You can still open each one individually by opening a file within.</source>
        <target state="translated">The '{0}' repository has {1} submodules which won't be opened automatically. You can still open each one individually by opening a file within.</target>
      </trans-unit>
      <trans-unit id="no repositories">
        <source xml:lang="en">There are no available repositories</source>
        <target state="translated">There are no available repositories</target>
      </trans-unit>
      <trans-unit id="pick repo">
        <source xml:lang="en">Choose a repository</source>
        <target state="translated">Choose a repository</target>
      </trans-unit>
    </body>
  </file>
  <file original="extensions/git/dist/autofetch" source-language="en" target-language="en-gb" datatype="plaintext">
    <body>
      <trans-unit id="yes">
        <source xml:lang="en">Yes</source>
        <target state="translated">Yes</target>
      </trans-unit>
      <trans-unit id="no">
        <source xml:lang="en">No</source>
        <target state="translated">No</target>
      </trans-unit>
      <trans-unit id="not now">
        <source xml:lang="en">Ask Me Later</source>
        <target state="translated">Ask Me Later</target>
      </trans-unit>
      <trans-unit id="suggest auto fetch">
        <source xml:lang="en">Would you like Code to [periodically run 'git fetch']({0})?</source>
        <target state="translated">Would you like Code to [periodically run 'git fetch']({0})?</target>
      </trans-unit>
    </body>
  </file>
  <file original="extensions/git/dist/statusbar" source-language="en" target-language="en-gb" datatype="plaintext">
    <body>
      <trans-unit id="rebasing">
        <source xml:lang="en">Rebasing</source>
        <target state="new">Rebasing</target>
      </trans-unit>
      <trans-unit id="sync changes">
        <source xml:lang="en">Synchronize Changes</source>
        <target state="translated">Synchronize Changes</target>
      </trans-unit>
      <trans-unit id="publish changes">
        <source xml:lang="en">Publish Changes</source>
        <target state="translated">Publish Changes</target>
      </trans-unit>
      <trans-unit id="syncing changes">
        <source xml:lang="en">Synchronizing Changes...</source>
        <target state="translated">Synchronizing Changes...</target>
      </trans-unit>
    </body>
  </file>
  <file original="extensions/git/dist/commands" source-language="en" target-language="en-gb" datatype="plaintext">
    <body>
      <trans-unit id="tag at">
        <source xml:lang="en">Tag at {0}</source>
        <target state="translated">Tag at {0}</target>
      </trans-unit>
      <trans-unit id="remote branch at">
        <source xml:lang="en">Remote branch at {0}</source>
        <target state="translated">Remote branch at {0}</target>
      </trans-unit>
      <trans-unit id="create branch">
        <source xml:lang="en">Create new branch...</source>
        <target state="new">Create new branch...</target>
      </trans-unit>
      <trans-unit id="create branch from">
        <source xml:lang="en">Create new branch from...</source>
        <target state="new">Create new branch from...</target>
      </trans-unit>
      <trans-unit id="add remote">
        <source xml:lang="en">Add a new remote...</source>
        <target state="new">Add a new remote...</target>
      </trans-unit>
      <trans-unit id="current">
        <source xml:lang="en">Current</source>
        <target state="translated">Current</target>
      </trans-unit>
      <trans-unit id="select log level">
        <source xml:lang="en">Select log level</source>
        <target state="translated">Select log level</target>
      </trans-unit>
      <trans-unit id="changed">
        <source xml:lang="en">Log level changed to: {0}</source>
        <target state="new">Log level changed to: {0}</target>
      </trans-unit>
      <trans-unit id="git.title.index">
        <source xml:lang="en">{0} (Index)</source>
        <target state="new">{0} (Index)</target>
      </trans-unit>
      <trans-unit id="git.title.workingTree">
        <source xml:lang="en">{0} (Working Tree)</source>
        <target state="new">{0} (Working Tree)</target>
      </trans-unit>
      <trans-unit id="git.title.theirs">
        <source xml:lang="en">{0} (Theirs)</source>
        <target state="new">{0} (Theirs)</target>
      </trans-unit>
      <trans-unit id="git.title.ours">
        <source xml:lang="en">{0} (Ours)</source>
        <target state="new">{0} (Ours)</target>
      </trans-unit>
      <trans-unit id="git.title.untracked">
        <source xml:lang="en">{0} (Untracked)</source>
        <target state="new">{0} (Untracked)</target>
      </trans-unit>
      <trans-unit id="repourl">
        <source xml:lang="en">Repository URL</source>
        <target state="translated">Repository URL</target>
      </trans-unit>
      <trans-unit id="selectFolder">
        <source xml:lang="en">Select Repository Location</source>
        <target state="translated">Select Repository Location</target>
      </trans-unit>
      <trans-unit id="cloning">
        <source xml:lang="en">Cloning git repository '{0}'...</source>
        <target state="translated">Cloning git repository '{0}'...</target>
      </trans-unit>
      <trans-unit id="proposeopen">
        <source xml:lang="en">Would you like to open the cloned repository?</source>
        <target state="translated">Would you like to open the cloned repository?</target>
      </trans-unit>
      <trans-unit id="openrepo">
        <source xml:lang="en">Open</source>
        <target state="translated">Open</target>
      </trans-unit>
      <trans-unit id="openreponew">
        <source xml:lang="en">Open in New Window</source>
        <target state="new">Open in New Window</target>
      </trans-unit>
      <trans-unit id="add">
        <source xml:lang="en">Add to Workspace</source>
        <target state="translated">Add to Workspace</target>
      </trans-unit>
      <trans-unit id="proposeopen2">
        <source xml:lang="en">Would you like to open the cloned repository, or add it to the current workspace?</source>
        <target state="new">Would you like to open the cloned repository, or add it to the current workspace?</target>
      </trans-unit>
      <trans-unit id="init">
        <source xml:lang="en">Pick workspace folder to initialize git repo in</source>
        <target state="translated">Pick workspace folder to initialize git repo in</target>
      </trans-unit>
      <trans-unit id="choose">
        <source xml:lang="en">Choose Folder...</source>
        <target state="new">Choose Folder...</target>
      </trans-unit>
      <trans-unit id="init repo">
        <source xml:lang="en">Initialize Repository</source>
        <target state="translated">Initialise Repository</target>
      </trans-unit>
      <trans-unit id="create repo">
        <source xml:lang="en">Initialize Repository</source>
        <target state="translated">Initialise Repository</target>
      </trans-unit>
      <trans-unit id="are you sure">
        <source xml:lang="en">This will create a Git repository in '{0}'. Are you sure you want to continue?</source>
        <target state="translated">This will create a Git repository in '{0}'. Are you sure you want to continue?</target>
      </trans-unit>
      <trans-unit id="proposeopen init">
        <source xml:lang="en">Would you like to open the initialized repository?</source>
        <target state="translated">Would you like to open the initialised repository?</target>
      </trans-unit>
      <trans-unit id="proposeopen2 init">
        <source xml:lang="en">Would you like to open the initialized repository, or add it to the current workspace?</source>
        <target state="new">Would you like to open the initialized repository, or add it to the current workspace?</target>
      </trans-unit>
      <trans-unit id="open repo">
        <source xml:lang="en">Open Repository</source>
        <target state="translated">Open Repository</target>
      </trans-unit>
      <trans-unit id="HEAD not available">
        <source xml:lang="en">HEAD version of '{0}' is not available.</source>
        <target state="translated">HEAD version of '{0}' is not available.</target>
      </trans-unit>
      <trans-unit id="confirm stage files with merge conflicts">
        <source xml:lang="en">Are you sure you want to stage {0} files with merge conflicts?</source>
        <target state="translated">Are you sure you want to stage {0} files with merge conflicts?</target>
      </trans-unit>
      <trans-unit id="confirm stage file with merge conflicts">
        <source xml:lang="en">Are you sure you want to stage {0} with merge conflicts?</source>
        <target state="translated">Are you sure you want to stage {0} with merge conflicts?</target>
      </trans-unit>
      <trans-unit id="yes">
        <source xml:lang="en">Yes</source>
        <target state="translated">Yes</target>
      </trans-unit>
      <trans-unit id="keep ours">
        <source xml:lang="en">Keep Our Version</source>
        <target state="translated">Keep Our Version</target>
      </trans-unit>
      <trans-unit id="delete">
        <source xml:lang="en">Delete File</source>
        <target state="translated">Delete file</target>
      </trans-unit>
      <trans-unit id="deleted by them">
        <source xml:lang="en">File '{0}' was deleted by them and modified by us.

What would you like to do?</source>
        <target state="new">File '{0}' was deleted by them and modified by us.

What would you like to do?</target>
      </trans-unit>
      <trans-unit id="keep theirs">
        <source xml:lang="en">Keep Their Version</source>
        <target state="new">Keep Their Version</target>
      </trans-unit>
      <trans-unit id="deleted by us">
        <source xml:lang="en">File '{0}' was deleted by us and modified by them.

What would you like to do?</source>
        <target state="new">File '{0}' was deleted by us and modified by them.

What would you like to do?</target>
      </trans-unit>
      <trans-unit id="discard">
        <source xml:lang="en">Discard Changes</source>
        <target state="translated">Discard Changes</target>
      </trans-unit>
      <trans-unit id="confirm delete">
        <source xml:lang="en">Are you sure you want to DELETE {0}?
This is IRREVERSIBLE!
This file will be FOREVER LOST.</source>
        <target state="new">Are you sure you want to DELETE {0}?
This is IRREVERSIBLE!
This file will be FOREVER LOST.</target>
      </trans-unit>
      <trans-unit id="delete file">
        <source xml:lang="en">Delete file</source>
        <target state="translated">Delete file</target>
      </trans-unit>
      <trans-unit id="restore file">
        <source xml:lang="en">Restore file</source>
        <target state="new">Restore file</target>
      </trans-unit>
      <trans-unit id="confirm restore">
        <source xml:lang="en">Are you sure you want to restore {0}?</source>
        <target state="new">Are you sure you want to restore {0}?</target>
      </trans-unit>
      <trans-unit id="confirm discard">
        <source xml:lang="en">Are you sure you want to discard changes in {0}?</source>
        <target state="translated">Are you sure you want to discard changes in {0}?</target>
      </trans-unit>
      <trans-unit id="restore files">
        <source xml:lang="en">Restore files</source>
        <target state="new">Restore files</target>
      </trans-unit>
      <trans-unit id="confirm restore multiple">
        <source xml:lang="en">Are you sure you want to restore {0} files?</source>
        <target state="new">Are you sure you want to restore {0} files?</target>
      </trans-unit>
      <trans-unit id="confirm discard multiple">
        <source xml:lang="en">Are you sure you want to discard changes in {0} files?</source>
        <target state="translated">Are you sure you want to discard changes in {0} files?</target>
      </trans-unit>
      <trans-unit id="warn untracked">
        <source xml:lang="en">This will DELETE {0} untracked files!
This is IRREVERSIBLE!
These files will be FOREVER LOST.</source>
        <target state="new">This will DELETE {0} untracked files!
This is IRREVERSIBLE!
These files will be FOREVER LOST.</target>
      </trans-unit>
      <trans-unit id="there are untracked files single">
        <source xml:lang="en">The following untracked file will be DELETED FROM DISK if discarded: {0}.</source>
        <target state="translated">The following untracked file will be DELETED FROM DISK if discarded: {0}.</target>
      </trans-unit>
      <trans-unit id="there are untracked files">
        <source xml:lang="en">There are {0} untracked files which will be DELETED FROM DISK if discarded.</source>
        <target state="translated">There are {0} untracked files which will be DELETED FROM DISK if discarded.</target>
      </trans-unit>
      <trans-unit id="confirm discard all 2">
        <source xml:lang="en">{0}

This is IRREVERSIBLE, your current working set will be FOREVER LOST.</source>
        <target state="new">{0}

This is IRREVERSIBLE, your current working set will be FOREVER LOST.</target>
      </trans-unit>
      <trans-unit id="yes discard tracked">
        <source xml:lang="en">Discard 1 Tracked File</source>
        <target state="translated">Discard 1 Tracked File</target>
      </trans-unit>
      <trans-unit id="yes discard tracked multiple">
        <source xml:lang="en">Discard {0} Tracked Files</source>
        <target state="translated">Discard {0} Tracked Files</target>
      </trans-unit>
      <trans-unit id="discardAll">
        <source xml:lang="en">Discard All {0} Files</source>
        <target state="translated">Discard All {0} Files</target>
      </trans-unit>
      <trans-unit id="confirm discard all single">
        <source xml:lang="en">Are you sure you want to discard changes in {0}?</source>
        <target state="translated">Are you sure you want to discard changes in {0}?</target>
      </trans-unit>
      <trans-unit id="confirm discard all">
        <source xml:lang="en">Are you sure you want to discard ALL changes in {0} files?
This is IRREVERSIBLE!
Your current working set will be FOREVER LOST.</source>
        <target state="new">Are you sure you want to discard ALL changes in {0} files?
This is IRREVERSIBLE!
Your current working set will be FOREVER LOST.</target>
      </trans-unit>
      <trans-unit id="discardAll multiple">
        <source xml:lang="en">Discard 1 File</source>
        <target state="translated">Discard 1 File</target>
      </trans-unit>
      <trans-unit id="confirm delete multiple">
        <source xml:lang="en">Are you sure you want to DELETE {0} files?</source>
        <target state="translated">Are you sure you want to DELETE {0} files?</target>
      </trans-unit>
      <trans-unit id="delete files">
        <source xml:lang="en">Delete Files</source>
        <target state="translated">Delete Files</target>
      </trans-unit>
      <trans-unit id="unsaved files single">
        <source xml:lang="en">The following file has unsaved changes which won't be included in the commit if you proceed: {0}.

Would you like to save it before committing?</source>
        <target state="new">The following file has unsaved changes which won't be included in the commit if you proceed: {0}.

Would you like to save it before committing?</target>
      </trans-unit>
      <trans-unit id="unsaved files">
        <source xml:lang="en">There are {0} unsaved files.

Would you like to save them before committing?</source>
        <target state="new">There are {0} unsaved files.

Would you like to save them before committing?</target>
      </trans-unit>
      <trans-unit id="save and commit">
        <source xml:lang="en">Save All &amp; Commit</source>
        <target state="new">Save All &amp; Commit</target>
      </trans-unit>
      <trans-unit id="commit">
        <source xml:lang="en">Commit Anyway</source>
        <target state="translated">Commit Anyway</target>
      </trans-unit>
      <trans-unit id="no staged changes">
        <source xml:lang="en">There are no staged changes to commit.

Would you like to automatically stage all your changes and commit them directly?</source>
        <target state="new">There are no staged changes to commit.

Would you like to automatically stage all your changes and commit them directly?</target>
      </trans-unit>
      <trans-unit id="always">
        <source xml:lang="en">Always</source>
        <target state="translated">Always</target>
      </trans-unit>
      <trans-unit id="never">
        <source xml:lang="en">Never</source>
        <target state="new">Never</target>
      </trans-unit>
      <trans-unit id="no changes">
        <source xml:lang="en">There are no changes to commit.</source>
        <target state="translated">There are no changes to commit.</target>
      </trans-unit>
      <trans-unit id="commitMessageWithHeadLabel2">
        <source xml:lang="en">Message (commit on '{0}')</source>
        <target state="new">Message (commit on '{0}')</target>
      </trans-unit>
      <trans-unit id="commit message">
        <source xml:lang="en">Commit message</source>
        <target state="translated">Commit message</target>
      </trans-unit>
      <trans-unit id="provide commit message">
        <source xml:lang="en">Please provide a commit message</source>
        <target state="translated">Please provide a commit message</target>
      </trans-unit>
      <trans-unit id="confirm emtpy commit">
        <source xml:lang="en">Are you sure you want to create an empty commit?</source>
        <target state="new">Are you sure you want to create an empty commit?</target>
      </trans-unit>
      <trans-unit id="yes never again">
        <source xml:lang="en">Yes, Don't Show Again</source>
        <target state="new">Yes, Don't Show Again</target>
      </trans-unit>
      <trans-unit id="no more">
        <source xml:lang="en">Can't undo because HEAD doesn't point to any commit.</source>
        <target state="new">Can't undo because HEAD doesn't point to any commit.</target>
      </trans-unit>
      <trans-unit id="undo commit">
        <source xml:lang="en">Undo merge commit</source>
        <target state="new">Undo merge commit</target>
      </trans-unit>
      <trans-unit id="merge commit">
        <source xml:lang="en">The last commit was a merge commit. Are you sure you want to undo it?</source>
        <target state="new">The last commit was a merge commit. Are you sure you want to undo it?</target>
      </trans-unit>
      <trans-unit id="select a ref to checkout">
        <source xml:lang="en">Select a ref to checkout</source>
        <target state="translated">Select a ref to checkout</target>
      </trans-unit>
      <trans-unit id="branch name">
        <source xml:lang="en">Branch name</source>
        <target state="translated">Branch name</target>
      </trans-unit>
      <trans-unit id="provide branch name">
        <source xml:lang="en">Please provide a new branch name</source>
        <target state="new">Please provide a new branch name</target>
      </trans-unit>
      <trans-unit id="branch name format invalid">
        <source xml:lang="en">Branch name needs to match regex: {0}</source>
        <target state="new">Branch name needs to match regex: {0}</target>
      </trans-unit>
      <trans-unit id="select a ref to create a new branch from">
        <source xml:lang="en">Select a ref to create the '{0}' branch from</source>
        <target state="new">Select a ref to create the '{0}' branch from</target>
      </trans-unit>
      <trans-unit id="select branch to delete">
        <source xml:lang="en">Select a branch to delete</source>
        <target state="translated">Select a branch to delete</target>
      </trans-unit>
      <trans-unit id="confirm force delete branch">
        <source xml:lang="en">The branch '{0}' is not fully merged. Delete anyway?</source>
        <target state="translated">The branch '{0}' is not fully merged. Delete anyway?</target>
      </trans-unit>
      <trans-unit id="delete branch">
        <source xml:lang="en">Delete Branch</source>
        <target state="translated">Delete Branch</target>
      </trans-unit>
      <trans-unit id="invalid branch name">
        <source xml:lang="en">Invalid branch name</source>
        <target state="translated">Invalid branch name</target>
      </trans-unit>
      <trans-unit id="branch already exists">
        <source xml:lang="en">A branch named '{0}' already exists</source>
        <target state="translated">A branch named '{0}' already exists</target>
      </trans-unit>
      <trans-unit id="select a branch to merge from">
        <source xml:lang="en">Select a branch to merge from</source>
        <target state="translated">Select a branch to merge from</target>
      </trans-unit>
      <trans-unit id="tag name">
        <source xml:lang="en">Tag name</source>
        <target state="translated">Tag name</target>
      </trans-unit>
      <trans-unit id="provide tag name">
        <source xml:lang="en">Please provide a tag name</source>
        <target state="translated">Please provide a tag name</target>
      </trans-unit>
      <trans-unit id="tag message">
        <source xml:lang="en">Message</source>
        <target state="translated">Message</target>
      </trans-unit>
      <trans-unit id="provide tag message">
        <source xml:lang="en">Please provide a message to annotate the tag</source>
        <target state="translated">Please provide a message to annotate the tag</target>
      </trans-unit>
      <trans-unit id="no tags">
        <source xml:lang="en">This repository has no tags.</source>
        <target state="new">This repository has no tags.</target>
      </trans-unit>
      <trans-unit id="select a tag to delete">
        <source xml:lang="en">Select a tag to delete</source>
        <target state="new">Select a tag to delete</target>
      </trans-unit>
      <trans-unit id="no remotes to fetch">
        <source xml:lang="en">This repository has no remotes configured to fetch from.</source>
        <target state="translated">This repository has no remotes configured to fetch from.</target>
      </trans-unit>
      <trans-unit id="no remotes to pull">
        <source xml:lang="en">Your repository has no remotes configured to pull from.</source>
        <target state="translated">Your repository has no remotes configured to pull from.</target>
      </trans-unit>
      <trans-unit id="pick remote pull repo">
        <source xml:lang="en">Pick a remote to pull the branch from</source>
        <target state="translated">Pick a remote to pull the branch from</target>
      </trans-unit>
      <trans-unit id="pick branch pull">
        <source xml:lang="en">Pick a branch to pull from</source>
        <target state="translated">Pick a branch to pull from</target>
      </trans-unit>
      <trans-unit id="no remotes to push">
        <source xml:lang="en">Your repository has no remotes configured to push to.</source>
        <target state="translated">Your repository has no remotes configured to push to.</target>
      </trans-unit>
      <trans-unit id="force push not allowed">
        <source xml:lang="en">Force push is not allowed, please enable it with the 'git.allowForcePush' setting.</source>
        <target state="new">Force push is not allowed, please enable it with the 'git.allowForcePush' setting.</target>
      </trans-unit>
      <trans-unit id="confirm force push">
        <source xml:lang="en">You are about to force push your changes, this can be destructive and could inadvertedly overwrite changes made by others.

Are you sure to continue?</source>
        <target state="new">You are about to force push your changes, this can be destructive and could inadvertedly overwrite changes made by others.

Are you sure to continue?</target>
      </trans-unit>
      <trans-unit id="ok">
        <source xml:lang="en">OK</source>
        <target state="translated">OK</target>
      </trans-unit>
      <trans-unit id="never ask again">
        <source xml:lang="en">OK, Don't Ask Again</source>
        <target state="translated">OK, Don't Ask Again</target>
      </trans-unit>
      <trans-unit id="nobranch">
        <source xml:lang="en">Please check out a branch to push to a remote.</source>
        <target state="translated">Please check out a branch to push to a remote.</target>
      </trans-unit>
      <trans-unit id="confirm publish branch">
        <source xml:lang="en">The branch '{0}' has no upstream branch. Would you like to publish this branch?</source>
        <target state="translated">The branch '{0}' has no upstream branch. Would you like to publish this branch?</target>
      </trans-unit>
      <trans-unit id="pick remote">
        <source xml:lang="en">Pick a remote to publish the branch '{0}' to:</source>
        <target state="translated">Pick a remote to publish the branch '{0}' to:</target>
      </trans-unit>
      <trans-unit id="remote name">
        <source xml:lang="en">Remote name</source>
        <target state="new">Remote name</target>
      </trans-unit>
      <trans-unit id="provide remote name">
        <source xml:lang="en">Please provide a remote name</source>
        <target state="new">Please provide a remote name</target>
      </trans-unit>
      <trans-unit id="remote name format invalid">
        <source xml:lang="en">Remote name format invalid</source>
        <target state="new">Remote name format invalid</target>
      </trans-unit>
      <trans-unit id="remote already exists">
        <source xml:lang="en">Remote '{0}' already exists.</source>
        <target state="new">Remote '{0}' already exists.</target>
      </trans-unit>
      <trans-unit id="remote url">
        <source xml:lang="en">Remote URL</source>
        <target state="new">Remote URL</target>
      </trans-unit>
      <trans-unit id="provide remote URL">
        <source xml:lang="en">Enter URL for remote "{0}"</source>
        <target state="new">Enter URL for remote "{0}"</target>
      </trans-unit>
      <trans-unit id="no remotes added">
        <source xml:lang="en">Your repository has no remotes.</source>
        <target state="translated">Your repository has no remotes.</target>
      </trans-unit>
      <trans-unit id="remove remote">
        <source xml:lang="en">Pick a remote to remove</source>
        <target state="new">Pick a remote to remove</target>
      </trans-unit>
      <trans-unit id="sync is unpredictable">
        <source xml:lang="en">This action will push and pull commits to and from '{0}/{1}'.</source>
        <target state="translated">This action will push and pull commits to and from '{0}/{1}'.</target>
      </trans-unit>
      <trans-unit id="never again">
        <source xml:lang="en">OK, Don't Show Again</source>
        <target state="translated">OK, Don't Show Again</target>
      </trans-unit>
      <trans-unit id="no remotes to publish">
        <source xml:lang="en">Your repository has no remotes configured to publish to.</source>
        <target state="translated">Your repository has no remotes configured to publish to.</target>
      </trans-unit>
      <trans-unit id="no changes stash">
        <source xml:lang="en">There are no changes to stash.</source>
        <target state="translated">There are no changes to stash.</target>
      </trans-unit>
      <trans-unit id="provide stash message">
        <source xml:lang="en">Optionally provide a stash message</source>
        <target state="translated">Optionally provide a stash message</target>
      </trans-unit>
      <trans-unit id="stash message">
        <source xml:lang="en">Stash message</source>
        <target state="translated">Stash message</target>
      </trans-unit>
      <trans-unit id="pick stash to pop">
        <source xml:lang="en">Pick a stash to pop</source>
        <target state="translated">Pick a stash to pop</target>
      </trans-unit>
      <trans-unit id="no stashes">
        <source xml:lang="en">There are no stashes in the repository.</source>
        <target state="new">There are no stashes in the repository.</target>
      </trans-unit>
      <trans-unit id="pick stash to apply">
        <source xml:lang="en">Pick a stash to apply</source>
        <target state="new">Pick a stash to apply</target>
      </trans-unit>
      <trans-unit id="pick stash to drop">
        <source xml:lang="en">Pick a stash to drop</source>
        <target state="new">Pick a stash to drop</target>
      </trans-unit>
      <trans-unit id="git.title.diffRefs">
        <source xml:lang="en">{0} ({1}) ⟷ {0} ({2})</source>
        <target state="new">{0} ({1}) ⟷ {0} ({2})</target>
      </trans-unit>
      <trans-unit id="open git log">
        <source xml:lang="en">Open Git Log</source>
        <target state="translated">Open Git Log</target>
      </trans-unit>
      <trans-unit id="clean repo">
        <source xml:lang="en">Please clean your repository working tree before checkout.</source>
        <target state="translated">Please clean your repository working tree before checkout.</target>
      </trans-unit>
      <trans-unit id="cant push">
        <source xml:lang="en">Can't push refs to remote. Try running 'Pull' first to integrate your changes.</source>
        <target state="translated">Can't push refs to remote. Try running 'Pull' first to integrate your changes.</target>
      </trans-unit>
      <trans-unit id="merge conflicts">
        <source xml:lang="en">There are merge conflicts. Resolve them before committing.</source>
        <target state="translated">There are merge conflicts. Resolve them before committing.</target>
      </trans-unit>
      <trans-unit id="stash merge conflicts">
        <source xml:lang="en">There were merge conflicts while applying the stash.</source>
        <target state="translated">There were merge conflicts while applying the stash.</target>
      </trans-unit>
      <trans-unit id="missing user info">
        <source xml:lang="en">Make sure you configure your 'user.name' and 'user.email' in git.</source>
        <target state="new">Make sure you configure your 'user.name' and 'user.email' in git.</target>
      </trans-unit>
      <trans-unit id="learn more">
        <source xml:lang="en">Learn More</source>
        <target state="translated">Learn More</target>
      </trans-unit>
      <trans-unit id="git error details">
        <source xml:lang="en">Git: {0}</source>
        <target state="translated">Git: {0}</target>
      </trans-unit>
      <trans-unit id="git error">
        <source xml:lang="en">Git error</source>
        <target state="translated">Git error</target>
      </trans-unit>
    </body>
  </file>
  <file original="extensions/git/dist/askpass-main" source-language="en" target-language="en-gb" datatype="plaintext">
    <body>
      <trans-unit id="missOrInvalid">
        <source xml:lang="en">Missing or invalid credentials.</source>
        <target state="translated">Missing or invalid credentials.</target>
      </trans-unit>
    </body>
  </file>
</xliff>