<?xml version="1.0" encoding="utf-8"?>
<xliff version="1.2" xmlns="urn:oasis:names:tc:xliff:document:1.2">
  <file original="extensions/typescript-language-features/package" source-language="en" target-language="ko" datatype="plaintext">
    <body>
      <trans-unit id="displayName">
        <source xml:lang="en">TypeScript and JavaScript Language Features</source>
        <target state="translated">TypeScript 및 JavaScript 언어 기능</target>
      </trans-unit>
      <trans-unit id="description">
        <source xml:lang="en">Provides rich language support for JavaScript and TypeScript.</source>
        <target state="translated">JavaScript 및 TypeScript에 대한 다양한 언어 지원을 제공합니다.</target>
      </trans-unit>
      <trans-unit id="reloadProjects.title">
        <source xml:lang="en">Reload Project</source>
        <target state="translated">프로젝트 다시 로드</target>
      </trans-unit>
      <trans-unit id="configuration.typescript">
        <source xml:lang="en">TypeScript</source>
        <target state="translated">TypeScript</target>
      </trans-unit>
      <trans-unit id="configuration.suggest.completeFunctionCalls">
        <source xml:lang="en">Complete functions with their parameter signature.</source>
        <target state="translated">매개 변수 서명으로 함수를 완료하세요.</target>
      </trans-unit>
      <trans-unit id="configuration.suggest.includeAutomaticOptionalChainCompletions">
        <source xml:lang="en">Enable/disable showing completions on potentially undefined values that insert an optional chain call. Requires TS 3.7+ and strict null checks to be enabled.</source>
        <target state="translated">선택적 체인 호출을 삽입하는 잠재적으로 정의되지 않은 값에 대한 완료 표시를 사용하거나 사용하지 않도록 설정합니다. 사용하려면 TS 3.7 이상 및 엄격한 null 검사가 필요합니다.</target>
      </trans-unit>
      <trans-unit id="typescript.tsdk.desc">
        <source xml:lang="en">Specifies the folder path to the tsserver and lib*.d.ts files under a TypeScript install to use for IntelliSense, for example: `./node_modules/typescript/lib`.

- When specified as a user setting, the TypeScript version from `typescript.tsdk` automatically replaces the built-in TypeScript version.
- When specified as a workspace setting, `typescript.tsdk` allows you to switch to use that workspace version of TypeScript for IntelliSense with the `TypeScript: Select TypeScript version` command.

See the [TypeScript documentation](https://code.visualstudio.com/docs/typescript/typescript-compiling#_using-newer-typescript-versions) for more detail about managing TypeScript versions.</source>
        <target state="translated">IntelliSense에 사용할 TypeScript 설치에서 tsserver 및 lib*.d.ts 파일의 폴더 경로를 지정합니다. 예: `./node_modules/typescript/lib`

- 사용자 설정으로 지정한 경우, 'typescript.tsdk'의 TypeScript 버전이 자동으로 기본 제공 TypeScript 버전을 바꿉니다.
- 작업 영역 설정으로 지정한 경우, 'typescript.tsdk'를 사용하여 'TypeScript: TypeScript 버전 선택' 명령어로 IntelliSense용 TypeScript의 해당 작업 영역 버전을 사용하도록 전환할 수 있습니다.

TypeScript 버전 관리에 대한 자세한 내용은 [TypeScript 설명서](https://code.visualstudio.com/docs/typescript/typescript-compiling#_using-newer-typescript-versions)를 참조하세요.</target>
      </trans-unit>
      <trans-unit id="typescript.disableAutomaticTypeAcquisition">
        <source xml:lang="en">Disables automatic type acquisition. Automatic type acquisition fetches `@types` packages from npm to improve IntelliSense for external libraries.</source>
        <target state="translated">자동 형식 인식을 사용하지 않도록 설정합니다. 자동 형식 인식은 npm에서 `@types` 패키지를 가져와 외부 라이브러리의 IntelliSense를 향상합니다.</target>
      </trans-unit>
      <trans-unit id="typescript.tsserver.log">
        <source xml:lang="en">Enables logging of the TS server to a file. This log can be used to diagnose TS Server issues. The log may contain file paths, source code, and other potentially sensitive information from your project.</source>
        <target state="translated">파일에 대해 TS 서버 로깅을 사용하도록 설정합니다. 이 로그는 TS 서버 문제를 진단하는 데 사용될 수 있습니다. 로그에는 파일 경로, 소스 코드 및 프로젝트에서 잠재적으로 중요한 기타 정보가 포함될 수 있습니다.</target>
      </trans-unit>
      <trans-unit id="typescript.tsserver.pluginPaths">
        <source xml:lang="en">Additional paths to discover TypeScript Language Service plugins. Requires using TypeScript 2.3.0 or newer in the workspace.</source>
        <target state="translated">Typescript 언어 서비스 플러그 인을 검색할 추가 경로입니다. 작업 영역에서 TypeScript 2.3.0 이상을 사용해야 합니다.</target>
      </trans-unit>
      <trans-unit id="typescript.tsserver.pluginPaths.item">
        <source xml:lang="en">Either an absolute or relative path. Relative path will be resolved against workspace folder(s).</source>
        <target state="translated">절대 또는 상대 경로입니다. 상대 경로는 작업 영역 폴더를 기준으로 확인됩니다.</target>
      </trans-unit>
      <trans-unit id="typescript.tsserver.trace">
        <source xml:lang="en">Enables tracing of messages sent to the TS server. This trace can be used to diagnose TS Server issues. The trace may contain file paths, source code, and other potentially sensitive information from your project.</source>
        <target state="translated">TS 서버로 전송한 메시지 추적을 사용하도록 설정합니다. 이
 추적은 TS 서버 문제를 진단하는 데 사용될 수 있습니다. 추적에는 파일 경로, 소스 코드 및 프로젝트에서 잠재적으로 중요한
 기타 정보가 포함될 수 있습니다.</target>
      </trans-unit>
      <trans-unit id="typescript.validate.enable">
        <source xml:lang="en">Enable/disable TypeScript validation.</source>
        <target state="translated">TypeScript 유효성 검사를 사용하거나 사용하지 않습니다.</target>
      </trans-unit>
      <trans-unit id="typescript.format.enable">
        <source xml:lang="en">Enable/disable default TypeScript formatter.</source>
        <target state="translated">기본 TypeScript 포맷터를 사용하거나 사용하지 않습니다.</target>
      </trans-unit>
      <trans-unit id="javascript.format.enable">
        <source xml:lang="en">Enable/disable default JavaScript formatter.</source>
        <target state="translated">기본 JavaScript 포맷터를 사용하거나 사용하지 않습니다.</target>
      </trans-unit>
      <trans-unit id="format.insertSpaceAfterCommaDelimiter">
        <source xml:lang="en">Defines space handling after a comma delimiter.</source>
        <target state="translated">쉼표 구분 기호 뒤에 오는 공백 처리를 정의합니다.</target>
      </trans-unit>
      <trans-unit id="format.insertSpaceAfterConstructor">
        <source xml:lang="en">Defines space handling after the constructor keyword. Requires using TypeScript 2.3.0 or newer in the workspace.</source>
        <target state="translated">생성자 키워드 뒤에 오는 공백 처리를 정의합니다. 작업 영역에서 TypeScript 2.3.0 이상을 사용해야 합니다.</target>
      </trans-unit>
      <trans-unit id="format.insertSpaceAfterSemicolonInForStatements">
        <source xml:lang="en">Defines space handling after a semicolon in a for statement.</source>
        <target state="translated">for 문에서 세미콜론 뒤에 오는 공백 처리를 정의합니다.</target>
      </trans-unit>
      <trans-unit id="format.insertSpaceBeforeAndAfterBinaryOperators">
        <source xml:lang="en">Defines space handling after a binary operator.</source>
        <target state="translated">이항 연산자 뒤에 오는 공백 처리를 정의합니다.</target>
      </trans-unit>
      <trans-unit id="format.insertSpaceAfterKeywordsInControlFlowStatements">
        <source xml:lang="en">Defines space handling after keywords in a control flow statement.</source>
        <target state="translated">제어 흐름 문의 키워드 뒤에 오는 공백 처리를 정의합니다.</target>
      </trans-unit>
      <trans-unit id="format.insertSpaceAfterFunctionKeywordForAnonymousFunctions">
        <source xml:lang="en">Defines space handling after function keyword for anonymous functions.</source>
        <target state="translated">익명 함수의 function 키워드 뒤에 오는 공백 처리를 정의합니다.</target>
      </trans-unit>
      <trans-unit id="format.insertSpaceBeforeFunctionParenthesis">
        <source xml:lang="en">Defines space handling before function argument parentheses.</source>
        <target state="translated">함수 인수 괄호 앞에 오는 공백 처리를 정의합니다.</target>
      </trans-unit>
      <trans-unit id="format.insertSpaceAfterOpeningAndBeforeClosingNonemptyParenthesis">
        <source xml:lang="en">Defines space handling after opening and before closing non-empty parenthesis.</source>
        <target state="translated">비어 있지 않은 여는 괄호 뒤와 닫는 괄호 앞에 오는 공백 처리를 정의합니다.</target>
      </trans-unit>
      <trans-unit id="format.insertSpaceAfterOpeningAndBeforeClosingNonemptyBrackets">
        <source xml:lang="en">Defines space handling after opening and before closing non-empty brackets.</source>
        <target state="translated">비어 있지 않은 여는 대괄호 뒤와 닫는 대괄호 앞에 오는 공백 처리를 정의합니다.</target>
      </trans-unit>
      <trans-unit id="format.insertSpaceAfterOpeningAndBeforeClosingNonemptyBraces">
        <source xml:lang="en">Defines space handling after opening and before closing non-empty braces. Requires using TypeScript 2.3.0 or newer in the workspace.</source>
        <target state="translated">비어 있지 않은 여는 중괄호 뒤와 닫는 중괄호 앞의 공백 처리를 정의합니다. 작업 영역에서 TypeScript 2.3.0 이상을 사용해야 합니다.</target>
      </trans-unit>
      <trans-unit id="format.insertSpaceAfterOpeningAndBeforeClosingTemplateStringBraces">
        <source xml:lang="en">Defines space handling after opening and before closing template string braces.</source>
        <target state="translated">템플릿 문자열의 여는 중괄호 뒤와 닫는 중괄호 앞의 공백 처리를 정의합니다.</target>
      </trans-unit>
      <trans-unit id="format.insertSpaceAfterOpeningAndBeforeClosingJsxExpressionBraces">
        <source xml:lang="en">Defines space handling after opening and before closing JSX expression braces.</source>
        <target state="translated">JSX 식의 여는 중괄호 뒤와 닫는 중괄호 앞의 공백 처리를 정의합니다.</target>
      </trans-unit>
      <trans-unit id="format.insertSpaceAfterTypeAssertion">
        <source xml:lang="en">Defines space handling after type assertions in TypeScript. Requires using TypeScript 2.4 or newer in the workspace.</source>
        <target state="translated">TypeScript에서 형식 어설션 뒤에 오는 공백 처리를 정의합니다. 작업 영역에서 TypeScript 2.4 이상을 사용해야 합니다.</target>
      </trans-unit>
      <trans-unit id="format.placeOpenBraceOnNewLineForFunctions">
        <source xml:lang="en">Defines whether an open brace is put onto a new line for functions or not.</source>
        <target state="translated">함수의 새 줄에 여는 중괄호를 넣을지 정의합니다.</target>
      </trans-unit>
      <trans-unit id="format.placeOpenBraceOnNewLineForControlBlocks">
        <source xml:lang="en">Defines whether an open brace is put onto a new line for control blocks or not.</source>
        <target state="translated">제어 블록의 새 줄에 여는 중괄호를 넣을지 정의합니다.</target>
      </trans-unit>
      <trans-unit id="format.semicolons">
        <source xml:lang="en">Defines handling of optional semicolons. Requires using TypeScript 3.7 or newer in the workspace.</source>
        <target state="translated">선택적 세미콜론 처리를 정의합니다. 작업 영역에서 TypeScript 3.7 이상을 사용해야 합니다.</target>
      </trans-unit>
      <trans-unit id="format.semicolons.ignore">
        <source xml:lang="en">Don't insert or remove any semicolons.</source>
        <target state="translated">세미콜론을 삽입하거나 제거하지 마세요.</target>
      </trans-unit>
      <trans-unit id="format.semicolons.insert">
        <source xml:lang="en">Insert semicolons at statement ends.</source>
        <target state="translated">문 끝에 세미콜론을 삽입합니다.</target>
      </trans-unit>
      <trans-unit id="format.semicolons.remove">
        <source xml:lang="en">Remove unnecessary semicolons.</source>
        <target state="translated">불필요한 세미콜론을 제거합니다.</target>
      </trans-unit>
      <trans-unit id="javascript.validate.enable">
        <source xml:lang="en">Enable/disable JavaScript validation.</source>
        <target state="translated">JavaScript 유효성 검사를 사용하거나 사용하지 않습니다.</target>
      </trans-unit>
      <trans-unit id="goToProjectConfig.title">
        <source xml:lang="en">Go to Project Configuration</source>
        <target state="translated">프로젝트 구성으로 이동</target>
      </trans-unit>
      <trans-unit id="javascript.referencesCodeLens.enabled">
        <source xml:lang="en">Enable/disable references CodeLens in JavaScript files.</source>
        <target state="translated">JavaScript 파일에서 CodeLense 참조를 사용/사용 안 함으로 설정합니다.</target>
      </trans-unit>
      <trans-unit id="javascript.referencesCodeLens.showOnAllFunctions">
        <source xml:lang="en">Enable/disable references CodeLens on all functions in JavaScript files.</source>
        <target state="translated">JavaScript 파일의 모든 기능에 대한 참조 CodeLens를 사용/사용하지 않도록 설정합니다.</target>
      </trans-unit>
      <trans-unit id="typescript.referencesCodeLens.enabled">
        <source xml:lang="en">Enable/disable references CodeLens in TypeScript files.</source>
        <target state="translated">TypeScript 파일에서 참조 CodeLens를 사용하거나 사용하지 않도록 설정합니다.</target>
      </trans-unit>
      <trans-unit id="typescript.referencesCodeLens.showOnAllFunctions">
        <source xml:lang="en">Enable/disable references CodeLens on all functions in TypeScript files.</source>
        <target state="translated">TypeScript 파일의 모든 기능에 대한 참조 CodeLens를 사용/사용하지 않도록 설정합니다.</target>
      </trans-unit>
      <trans-unit id="typescript.implementationsCodeLens.enabled">
        <source xml:lang="en">Enable/disable implementations CodeLens. This CodeLens shows the implementers of an interface.</source>
        <target state="translated">CodeLens 구현을 사용하거나 사용하지 않습니다. 이 CodeLens는 인터페이스의 구현자를 표시합니다.</target>
      </trans-unit>
      <trans-unit id="typescript.openTsServerLog.title">
        <source xml:lang="en">Open TS Server log</source>
        <target state="translated">TS 서버 로그 열기</target>
      </trans-unit>
      <trans-unit id="typescript.restartTsServer">
        <source xml:lang="en">Restart TS server</source>
        <target state="translated">TS 서버 다시 시작</target>
      </trans-unit>
      <trans-unit id="typescript.selectTypeScriptVersion.title">
        <source xml:lang="en">Select TypeScript Version...</source>
        <target state="translated">TypeScript 버전 선택...</target>
      </trans-unit>
      <trans-unit id="typescript.reportStyleChecksAsWarnings">
        <source xml:lang="en">Report style checks as warnings.</source>
        <target state="translated">스타일 검사를 경고로 보고합니다.</target>
      </trans-unit>
      <trans-unit id="javascript.implicitProjectConfig.checkJs">
        <source xml:lang="en">Enable/disable semantic checking of JavaScript files. Existing jsconfig.json or tsconfig.json files override this setting. Requires using TypeScript 2.3.1 or newer in the workspace.</source>
        <target state="translated">JavaScript 파일의 의미 체계 검사를 사용하거나 사용하지 않도록 설정합니다. 기존 jsconfig.json 또는 tsconfig.json 파일은 이 설정을 재정의합니다. 작업 영역에서 TypeScript 2.3.1 이상을 사용해야 합니다. </target>
      </trans-unit>
      <trans-unit id="typescript.npm">
        <source xml:lang="en">Specifies the path to the npm executable used for Automatic Type Acquisition. Requires using TypeScript 2.3.4 or newer in the workspace.</source>
        <target state="translated">자동 형식 인식에 사용되는 NPM 실행 파일의 경로를 지정합니다. 작업 영역에서 TypeScript 2.3.4 이상을 사용해야 합니다.</target>
      </trans-unit>
      <trans-unit id="typescript.check.npmIsInstalled">
        <source xml:lang="en">Check if npm is installed for Automatic Type Acquisition.</source>
        <target state="translated">자동 입력 인식에 대해 NPM이 설치되어 있는지 확인합니다.</target>
      </trans-unit>
      <trans-unit id="configuration.suggest.names">
        <source xml:lang="en">Enable/disable including unique names from the file in JavaScript suggestions. Note that name suggestions are always disabled in JavaScript code that is semantically checked using `@ts-check` or `checkJs`.</source>
        <target state="translated">JavaScrip 제안에서 파일의 고유한 이름 포함을 사용하거나 사용하지 않도록 설정합니다. 이름 제안은 `@ts-check` 또는 `checkJs`를 사용하여 의미 체계적으로 확인되는 JavaScript 코드에서 항상 사용하지 않도록 설정됩니다.</target>
      </trans-unit>
      <trans-unit id="typescript.tsc.autoDetect">
        <source xml:lang="en">Controls auto detection of tsc tasks.</source>
        <target state="translated">tsc 작업의 자동 검색을 제어합니다.</target>
      </trans-unit>
      <trans-unit id="typescript.tsc.autoDetect.off">
        <source xml:lang="en">Disable this feature.</source>
        <target state="translated">이 기능을 사용하지 않도록 설정합니다.</target>
      </trans-unit>
      <trans-unit id="typescript.tsc.autoDetect.on">
        <source xml:lang="en">Create both build and watch tasks.</source>
        <target state="translated">빌드 및 조사식 작업을 모두 만듭니다.</target>
      </trans-unit>
      <trans-unit id="typescript.tsc.autoDetect.build">
        <source xml:lang="en">Only create single run compile tasks.</source>
        <target state="translated">단일 실행 컴파일 작업만 만듭니다.</target>
      </trans-unit>
      <trans-unit id="typescript.tsc.autoDetect.watch">
        <source xml:lang="en">Only create compile and watch tasks.</source>
        <target state="translated">컴파일 및 조사식 작업만 만듭니다.</target>
      </trans-unit>
      <trans-unit id="typescript.problemMatchers.tsc.label">
        <source xml:lang="en">TypeScript problems</source>
        <target state="translated">TypeScript 문제</target>
      </trans-unit>
      <trans-unit id="typescript.problemMatchers.tscWatch.label">
        <source xml:lang="en">TypeScript problems (watch mode)</source>
        <target state="translated">TypeScript 문제(감시 모드)</target>
      </trans-unit>
      <trans-unit id="configuration.suggest.paths">
        <source xml:lang="en">Enable/disable suggestions for paths in import statements and require calls.</source>
        <target state="translated">import 문 및 요청 호출의 경로에 대한 제안을 사용하거나 사용하지 않도록 설정합니다.</target>
      </trans-unit>
      <trans-unit id="configuration.tsserver.useSeparateSyntaxServer">
        <source xml:lang="en">Enable/disable spawning a separate TypeScript server that can more quickly respond to syntax related operations, such as calculating folding or computing document symbols. Requires using TypeScript 3.4.0 or newer in the workspace.</source>
        <target state="translated">구문 관련 작업(예: 접기 계산 또는 문서 기호 컴퓨팅)에 더 빨리 응답할 수 있는 별도 TypeScript 서버의 생성을 활성화/비활성화합니다. 작업 영역에서 TypeScript 3.4.0 이상을 사용해야 합니다.</target>
      </trans-unit>
      <trans-unit id="configuration.tsserver.maxTsServerMemory">
        <source xml:lang="en">Set the maximum amount of memory (in MB) to allocate to the TypeScript server process</source>
        <target state="translated">TypeScript 서버 프로세스에 할당할 최대 메모리 양(MB) 설정</target>
      </trans-unit>
      <trans-unit id="configuration.tsserver.experimental.enableProjectDiagnostics">
        <source xml:lang="en">(Experimental) Enables project wide error reporting.</source>
        <target state="translated">(실험) 프로젝트 전체 오류 보고를 사용합니다.</target>
      </trans-unit>
      <trans-unit id="typescript.locale">
        <source xml:lang="en">Sets the locale used to report JavaScript and TypeScript errors. Requires using TypeScript 2.6.0 or newer in the workspace. Default of `null` uses VS Code's locale.</source>
        <target state="translated">JavaScript 및 TypeScript 오류를 보고하는 데 사용하는 로캘을 설정합니다. 작업 영역에서 TypeScript 2.6.0 이상을 사용해야 합니다. 기본값 'null'을 설정하면 VS Code의 로캘이 사용됩니다.</target>
      </trans-unit>
      <trans-unit id="javascript.implicitProjectConfig.experimentalDecorators">
        <source xml:lang="en">Enable/disable `experimentalDecorators` for JavaScript files that are not part of a project. Existing jsconfig.json or tsconfig.json files override this setting. Requires using TypeScript 2.3.1 or newer in the workspace.</source>
        <target state="translated">프로젝트의 일부가 아닌 JavaScript 파일에 대해 'experimentalDecorators'를 사용하거나 사용하지 않도록 설정합니다. 기존 jsconfig.json 또는 tsconfig.json 파일은 이 설정을 재정의합니다. 작업 영역에서 TypeScript 2.3.1 이상을 사용해야 합니다.</target>
      </trans-unit>
      <trans-unit id="configuration.suggest.autoImports">
        <source xml:lang="en">Enable/disable auto import suggestions. Requires using TypeScript 2.6.1 or newer in the workspace.</source>
        <target state="translated">자동 가져오기 제안을 사용하거나 사용하지 않도록 설정합니다. 작업 영역에서 TypeScript 2.6.1 이상을 사용해야 합니다.</target>
      </trans-unit>
      <trans-unit id="taskDefinition.tsconfig.description">
        <source xml:lang="en">The tsconfig file that defines the TS build.</source>
        <target state="translated">TS 빌드를 정의하는 tsconfig 파일입니다.</target>
      </trans-unit>
      <trans-unit id="javascript.suggestionActions.enabled">
        <source xml:lang="en">Enable/disable suggestion diagnostics for JavaScript files in the editor. Requires using TypeScript 2.8 or newer in the workspace.</source>
        <target state="translated">편집기에서 JavaScript 파일에 대한 제안 진단을 사용하거나 사용하지 않도록 설정합니다. 작업 영역에서 TypeScript 2.8 이상을 사용해야 합니다.</target>
      </trans-unit>
      <trans-unit id="typescript.suggestionActions.enabled">
        <source xml:lang="en">Enable/disable suggestion diagnostics for TypeScript files in the editor. Requires using TypeScript 2.8 or newer in the workspace.</source>
        <target state="translated">편집기에서 TypeScript 파일에 대한 제안 진단을 사용하거나 사용하지 않도록 설정합니다. 작업 영역에서 TypeScript 2.8 이상을 사용해야 합니다.</target>
      </trans-unit>
      <trans-unit id="typescript.preferences.quoteStyle">
        <source xml:lang="en">Preferred quote style to use for quick fixes: `single` quotes, `double` quotes, or `auto` infer quote type from existing imports. Requires using TypeScript 2.9 or newer in the workspace.</source>
        <target state="translated">빠른 수정에 사용할 기본 따옴표 스타일은 '작은' 따옴표, '큰' 따옴표 또는 '자동'입니다. '자동'이면 기존 가져오기에서 따옴표 형식이 유추됩니다. 작업 영역에서 TypeScript 2.9 이상을 사용해야 합니다.</target>
      </trans-unit>
      <trans-unit id="typescript.preferences.importModuleSpecifier">
        <source xml:lang="en">Preferred path style for auto imports.</source>
        <target state="translated">자동 가져오기의 기본 경로 스타일입니다.</target>
      </trans-unit>
      <trans-unit id="typescript.preferences.importModuleSpecifier.auto">
        <source xml:lang="en">Automatically select import path style. Prefers using a relative import if `baseUrl` is configured and the relative path has fewer segments than the non-relative import.</source>
        <target state="translated">[경로 스타일 가져오기]를 자동으로 선택합니다. 'baseUrl'이 구성되어 있고 상대 경로에 상대적이지 않은 가져오기보다 세그먼트가 적은 경우 상대적 가져오기가 기본적으로 사용됩니다.</target>
      </trans-unit>
      <trans-unit id="typescript.preferences.importModuleSpecifier.relative">
        <source xml:lang="en">Relative to the file location.</source>
        <target state="translated">파일 위치를 기준으로 합니다.</target>
      </trans-unit>
      <trans-unit id="typescript.preferences.importModuleSpecifier.nonRelative">
        <source xml:lang="en">Based on the `baseUrl` configured in your `jsconfig.json` / `tsconfig.json`.</source>
        <target state="translated">`jsconfig.json`/`tsconfig.json`에 구성된 `baseUrl`을 기준으로 합니다.</target>
      </trans-unit>
      <trans-unit id="typescript.updateImportsOnFileMove.enabled">
        <source xml:lang="en">Enable/disable automatic updating of import paths when you rename or move a file in VS Code. Requires using TypeScript 2.9 or newer in the workspace.</source>
        <target state="translated">VS Code에서 파일을 이동하거나 이름을 바꿀 때 가져오기 경로의 자동 업데이트를 사용하거나 사용하지 않도록 설정합니다. 작업 영역에서 TypeScript 2.9 이상을 사용해야 합니다.</target>
      </trans-unit>
      <trans-unit id="typescript.updateImportsOnFileMove.enabled.prompt">
        <source xml:lang="en">Prompt on each rename.</source>
        <target state="translated">이름을 바꿀 때마다 프롬프트를 표시합니다.</target>
      </trans-unit>
      <trans-unit id="typescript.updateImportsOnFileMove.enabled.always">
        <source xml:lang="en">Always update paths automatically.</source>
        <target state="translated">항상 경로를 자동으로 업데이트합니다.</target>
      </trans-unit>
      <trans-unit id="typescript.updateImportsOnFileMove.enabled.never">
        <source xml:lang="en">Never rename paths and don't prompt.</source>
        <target state="translated">경로 이름을 바꾸지 않고 메시지를 표시하지 않습니다.</target>
      </trans-unit>
      <trans-unit id="typescript.autoClosingTags">
        <source xml:lang="en">Enable/disable automatic closing of JSX tags. Requires using TypeScript 3.0 or newer in the workspace.</source>
        <target state="translated">JSX 태그 자동 닫기를 사용하거나 사용하지 않도록 설정합니다. 작업 영역에서 TypeScript 3.0 이상을 사용해야 합니다.</target>
      </trans-unit>
      <trans-unit id="typescript.suggest.enabled">
        <source xml:lang="en">Enabled/disable autocomplete suggestions.</source>
        <target state="translated">자동 완성 제안을 사용하거나 사용하지 않도록 설정합니다.</target>
      </trans-unit>
      <trans-unit id="configuration.surveys.enabled">
        <source xml:lang="en">Enabled/disable occasional surveys that help us improve VS Code's JavaScript and TypeScript support.</source>
        <target state="translated">VS Code의 Javascript 및 Typescript 지원을 개선하는 데 도움이 되는 가끔 있는 설문을 사용하거나 사용하지 않도록 설정합니다.</target>
      </trans-unit>
      <trans-unit id="configuration.suggest.completeJSDocs">
        <source xml:lang="en">Enable/disable suggestion to complete JSDoc comments.</source>
        <target state="translated">제안을 사용하거나 사용하지 않도록 설정하여 JSDoc 주석을 완료합니다.</target>
      </trans-unit>
      <trans-unit id="configuration.tsserver.watchOptions">
        <source xml:lang="en">Configure which watching strategies should be used to keep track of files and directories. Requires using TypeScript 3.8+ in the workspace.</source>
        <target state="translated">파일 및 디렉터리 추적에 사용할 감시 전략을 구성합니다. 작업 영역에서 TypeScript 3.8 이상을 사용해야 합니다.</target>
      </trans-unit>
      <trans-unit id="configuration.tsserver.watchOptions.watchFile">
        <source xml:lang="en">Strategy for how individual files are watched.</source>
        <target state="translated">개별 파일을 감시하는 방법에 대한 전략입니다.</target>
      </trans-unit>
      <trans-unit id="configuration.tsserver.watchOptions.watchFile.fixedPollingInterval">
        <source xml:lang="en">Check every file for changes several times a second at a fixed interval.</source>
        <target state="translated">모든 파일의 변경 내용을 고정된 간격으로 초당 여러 번 확인합니다.</target>
      </trans-unit>
      <trans-unit id="configuration.tsserver.watchOptions.watchFile.priorityPollingInterval">
        <source xml:lang="en">Check every file for changes several times a second, but use heuristics to check certain types of files less frequently than others.</source>
        <target state="translated">모든 파일의 변경 내용을 1초에 여러 번 확인하지만, 휴리스틱을 사용하여 특정 형식의 파일은 다른 파일보다 덜 자주 확인합니다.</target>
      </trans-unit>
      <trans-unit id="configuration.tsserver.watchOptions.watchFile.dynamicPriorityPolling">
        <source xml:lang="en">Use a dynamic queue where less-frequently modified files will be checked less often.</source>
        <target state="translated">자주 수정되지 않는 파일이 덜 자주 검사되는 동적 큐를 사용합니다.</target>
      </trans-unit>
      <trans-unit id="configuration.tsserver.watchOptions.watchFile.useFsEvents">
        <source xml:lang="en">Attempt to use the operating system/file system’s native events for file changes.</source>
        <target state="translated">파일 변경에 운영 체제/파일 시스템의 기본 이벤트를 사용하려고 시도합니다.</target>
      </trans-unit>
      <trans-unit id="configuration.tsserver.watchOptions.watchFile.useFsEventsOnParentDirectory">
        <source xml:lang="en">Attempt to use the operating system/file system’s native events to listen for changes on a file’s containing directories. This can use fewer file watchers, but might be less accurate.</source>
        <target state="translated">운영 체제/파일 시스템의 기본 이벤트를 사용하여 파일이 포함된 디렉터리의 대한 변경 내용을 수신합니다. 그러면 파일 감시자를 적게 사용할 수 있지만 정확도가 떨어집니다.</target>
      </trans-unit>
      <trans-unit id="configuration.tsserver.watchOptions.watchDirectory">
        <source xml:lang="en">Strategy for how entire directory trees are watched under systems that lack recursive file-watching functionality.</source>
        <target state="translated">재귀 파일 감시 기능이 없는 시스템에서 전체 디렉터리 트리를 감시하는 방법에 대한 전략입니다.</target>
      </trans-unit>
      <trans-unit id="configuration.tsserver.watchOptions.watchDirectory.fixedPollingInterval">
        <source xml:lang="en">Check every directory for changes several times a second at a fixed interval.</source>
        <target state="translated">모든 디렉터리에서 고정된 간격으로 초당 여러 번 변경 내용을 확인합니다.</target>
      </trans-unit>
      <trans-unit id="configuration.tsserver.watchOptions.watchDirectory.dynamicPriorityPolling">
        <source xml:lang="en">Use a dynamic queue where less-frequently modified directories will be checked less often.</source>
        <target state="translated">수정이 자주 발생하지 않는 디렉터리가 덜 자주 검사되는 동적 큐를 사용합니다.</target>
      </trans-unit>
      <trans-unit id="configuration.tsserver.watchOptions.watchDirectory.useFsEvents">
        <source xml:lang="en">Attempt to use the operating system/file system’s native events for directory changes.</source>
        <target state="translated">디렉터리 변경에 운영 체제/파일 시스템의 기본 이벤트를 사용하려고 시도합니다.</target>
      </trans-unit>
      <trans-unit id="configuration.tsserver.watchOptions.fallbackPolling">
        <source xml:lang="en">When using file system events, this option specifies the polling strategy that gets used when the system runs out of native file watchers and/or doesn’t support native file watchers.</source>
        <target state="translated">파일 시스템 이벤트를 사용하는 경우, 이 옵션은 시스템에 기본 파일 감시자가 부족하고/부족하거나 시스템에서 기본 파일 감시자를 지원하지 않는 경우 사용되는 폴링 전략을 지정합니다.</target>
      </trans-unit>
      <trans-unit id="configuration.tsserver.watchOptions.fallbackPolling.fixedPollingInterval">
        <source xml:lang="en">Check every file for changes several times a second at a fixed interval.</source>
        <target state="translated">모든 파일의 변경 사항을 고정된 간격으로 초당 여러 번 확인합니다.</target>
      </trans-unit>
      <trans-unit id="configuration.tsserver.watchOptions.fallbackPolling.priorityPollingInterval">
        <source xml:lang="en">Check every file for changes several times a second, but use heuristics to check certain types of files less frequently than others.</source>
        <target state="translated">모든 파일에서 1초에 여러 번 변경 내용을 확인하지만, 휴리스틱을 사용하여 특정 형식의 파일은 다른 파일보다 덜 자주 확인합니다.</target>
      </trans-unit>
      <trans-unit id="configuration.tsserver.watchOptions.fallbackPolling.dynamicPriorityPolling ">
        <source xml:lang="en">Use a dynamic queue where less-frequently modified files will be checked less often.</source>
        <target state="translated">자주 수정되지 않는 파일이 덜 자주 검사되는 동적 큐를 사용합니다.</target>
      </trans-unit>
      <trans-unit id="configuration.tsserver.watchOptions.synchronousWatchDirectory">
        <source xml:lang="en">Disable deferred watching on directories. Deferred watching is useful when lots of file changes might occur at once (e.g. a change in node_modules from running npm install), but you might want to disable it with this flag for some less-common setups.</source>
        <target state="translated">디렉터리에서 지연 감시를 사용하지 않습니다. 지연 감시는 많은 파일 변경이 한꺼번에 발생하는 경우(예: 실행 중인 npm install에서 node_modules 변경) 유용하지만, 덜 일반적인 설정의 경우 이 플래그를 사용하여 지연 감시를 사용하지 않도록 설정할 수 있습니다.</target>
      </trans-unit>
      <trans-unit id="typescript.preferences.renameShorthandProperties">
        <source xml:lang="en">Enable/disable introducing aliases for object shorthand properties during renames. Requires using TypeScript 3.4 or newer in the workspace.</source>
        <target state="translated">이름을 바꾸는 중 개체 줄임 속성의 별칭 지정을 사용하거나 사용하지 않도록 설정합니다. 작업 영역에서 TypeScript 3.4 이상을 사용해야 합니다.</target>
      </trans-unit>
      <trans-unit id="codeActions.refactor.extract.constant.title">
        <source xml:lang="en">Extract constant</source>
        <target state="translated">상수 추출</target>
      </trans-unit>
      <trans-unit id="codeActions.refactor.extract.constant.description">
        <source xml:lang="en">Extract expression to constant.</source>
        <target state="translated">식을 상수로 추출합니다.</target>
      </trans-unit>
      <trans-unit id="codeActions.refactor.extract.function.title">
        <source xml:lang="en">Extract function</source>
        <target state="translated">추출 함수</target>
      </trans-unit>
      <trans-unit id="codeActions.refactor.extract.function.description">
        <source xml:lang="en">Extract expression to method or function.</source>
        <target state="translated">메서드 또는 함수에 대한 식추출.</target>
      </trans-unit>
      <trans-unit id="codeActions.refactor.extract.type.title">
        <source xml:lang="en">Extract type</source>
        <target state="translated">추출 유형</target>
      </trans-unit>
      <trans-unit id="codeActions.refactor.extract.type.description">
        <source xml:lang="en">Extract type to a type alias.</source>
        <target state="translated">형식 별칭에 대한 추출 형식입니다.</target>
      </trans-unit>
      <trans-unit id="codeActions.refactor.extract.interface.title">
        <source xml:lang="en">Extract interface</source>
        <target state="translated">인터페이스 추출</target>
      </trans-unit>
      <trans-unit id="codeActions.refactor.extract.interface.description">
        <source xml:lang="en">Extract type to an interface.</source>
        <target state="translated">인터페이스에 대한 형식을 추출합니다.</target>
      </trans-unit>
      <trans-unit id="codeActions.refactor.rewrite.import.title">
        <source xml:lang="en">Convert import</source>
        <target state="translated">가져오기 변환</target>
      </trans-unit>
      <trans-unit id="codeActions.refactor.rewrite.import.description">
        <source xml:lang="en">Convert between named imports and namespace imports.</source>
        <target state="translated">명명된 가져오기와 네임스페이스 가져오기 간에 변환합니다.</target>
      </trans-unit>
      <trans-unit id="codeActions.refactor.rewrite.export.title">
        <source xml:lang="en">Convert export</source>
        <target state="translated">내보내기 변환</target>
      </trans-unit>
      <trans-unit id="codeActions.refactor.rewrite.export.description">
        <source xml:lang="en">Convert between default export and named export.</source>
        <target state="translated">기본 내보내기와 명명된 내보내기 간에 변환합니다.</target>
      </trans-unit>
      <trans-unit id="codeActions.refactor.move.newFile.title">
        <source xml:lang="en">Move to a new file</source>
        <target state="translated">새 파일로 이동</target>
      </trans-unit>
      <trans-unit id="codeActions.refactor.move.newFile.description">
        <source xml:lang="en">Move the expression to a new file.</source>
        <target state="translated">식을 새 파일로 이동합니다.</target>
      </trans-unit>
      <trans-unit id="codeActions.refactor.rewrite.arrow.braces.title">
        <source xml:lang="en">Rewrite arrow braces</source>
        <target state="translated">화살표 중괄호 다시 쓰기</target>
      </trans-unit>
      <trans-unit id="codeActions.refactor.rewrite.arrow.braces.description">
        <source xml:lang="en">Add or remove braces in an arrow function.</source>
        <target state="translated">화살표 함수에서 중괄호를 추가하거나 제거합니다.</target>
      </trans-unit>
      <trans-unit id="codeActions.refactor.rewrite.parameters.toDestructured.title">
        <source xml:lang="en">Convert parameters to destructured object</source>
        <target state="translated">매개 변수를 구조화되지 않은 개체로 변환</target>
      </trans-unit>
      <trans-unit id="codeActions.refactor.rewrite.property.generateAccessors.title">
        <source xml:lang="en">Generate accessors</source>
        <target state="translated">접근자 생성</target>
      </trans-unit>
      <trans-unit id="codeActions.refactor.rewrite.property.generateAccessors.description">
        <source xml:lang="en">Generate 'get' and 'set' accessors</source>
        <target state="translated">'get' 및 'set' 접근자 생성</target>
      </trans-unit>
      <trans-unit id="codeActions.source.organizeImports.title">
        <source xml:lang="en">Organize imports</source>
        <target state="translated">가져오기 구성</target>
      </trans-unit>
    </body>
  </file>
  <file original="extensions/typescript-language-features/dist/utils/api" source-language="en" target-language="ko" datatype="plaintext">
    <body>
      <trans-unit id="invalidVersion">
        <source xml:lang="en">invalid version</source>
        <target state="translated">잘못 된 버전</target>
      </trans-unit>
    </body>
  </file>
  <file original="extensions/typescript-language-features/dist/features/baseCodeLensProvider" source-language="en" target-language="ko" datatype="plaintext">
    <body>
      <trans-unit id="referenceErrorLabel">
        <source xml:lang="en">Could not determine references</source>
        <target state="translated">참조를 확인할 수 없음</target>
      </trans-unit>
    </body>
  </file>
  <file original="extensions/typescript-language-features/dist/commands/goToProjectConfiguration" source-language="en" target-language="ko" datatype="plaintext">
    <body>
      <trans-unit id="typescript.projectConfigNoWorkspace">
        <source xml:lang="en">Please open a folder in VS Code to use a TypeScript or JavaScript project</source>
        <target state="translated">TypeScript 또는 JavaScript 프로젝트를 사용하려면 VS Code의 폴더를 여세요.</target>
      </trans-unit>
      <trans-unit id="typescript.projectConfigUnsupportedFile">
        <source xml:lang="en">Could not determine TypeScript or JavaScript project. Unsupported file type</source>
        <target state="translated">TypeScript 또는 JavaScript 프로젝트를 확인할 수 없습니다. 지원되지 않는 파일 형식</target>
      </trans-unit>
      <trans-unit id="typescript.projectConfigCouldNotGetInfo">
        <source xml:lang="en">Could not determine TypeScript or JavaScript project</source>
        <target state="translated">TypeScript 또는 JavaScript 프로젝트를 확인할 수 없습니다.</target>
      </trans-unit>
      <trans-unit id="typescript.noTypeScriptProjectConfig">
        <source xml:lang="en">File is not part of a TypeScript project. Click [here]({0}) to learn more.</source>
        <target state="translated">파일이 TypeScript 프로젝트의 일부가 아닙니다. 자세히 알아보려면 [여기]({0})를 클릭하세요.</target>
      </trans-unit>
      <trans-unit id="typescript.noJavaScriptProjectConfig">
        <source xml:lang="en">File is not part of a JavaScript project Click [here]({0}) to learn more.</source>
        <target state="translated">파일이 JavaScript 프로젝트의 일부가 아닙니다. 자세히 알아보려면 [여기]({0})를 클릭하세요.</target>
      </trans-unit>
      <trans-unit id="typescript.configureTsconfigQuickPick">
        <source xml:lang="en">Configure tsconfig.json</source>
        <target state="translated">tsconfig.json 구성</target>
      </trans-unit>
      <trans-unit id="typescript.configureJsconfigQuickPick">
        <source xml:lang="en">Configure jsconfig.json</source>
        <target state="translated">jsconfig.json 구성</target>
      </trans-unit>
    </body>
  </file>
  <file original="extensions/typescript-language-features/dist/features/completions" source-language="en" target-language="ko" datatype="plaintext">
    <body>
      <trans-unit id="selectCodeAction">
        <source xml:lang="en">Select code action to apply</source>
        <target state="translated">적용할 코드 동작 선택</target>
      </trans-unit>
      <trans-unit id="acquiringTypingsLabel">
        <source xml:lang="en">Acquiring typings...</source>
        <target state="translated">typings를 가져오는 중...</target>
        <note>Typings refers to the *.d.ts typings files that power our IntelliSense. It should not be localized</note>
      </trans-unit>
      <trans-unit id="acquiringTypingsDetail">
        <source xml:lang="en">Acquiring typings definitions for IntelliSense.</source>
        <target state="translated">IntelliSense에 대한 typings 정의를 가져오는 중입니다.</target>
        <note>Typings refers to the *.d.ts typings files that power our IntelliSense. It should not be localized</note>
      </trans-unit>
      <trans-unit id="autoImportLabel">
        <source xml:lang="en">Auto import from {0}</source>
        <target state="translated">{0}에서 자동으로 가져오기</target>
      </trans-unit>
    </body>
  </file>
  <file original="extensions/typescript-language-features/dist/features/directiveCommentCompletions" source-language="en" target-language="ko" datatype="plaintext">
    <body>
      <trans-unit id="ts-check">
        <source xml:lang="en">Enables semantic checking in a JavaScript file. Must be at the top of a file.</source>
        <target state="translated">JavaScript 파일에서 의미 검사를 사용합니다. 파일의 최상단에 있어야 합니다.</target>
      </trans-unit>
      <trans-unit id="ts-nocheck">
        <source xml:lang="en">Disables semantic checking in a JavaScript file. Must be at the top of a file.</source>
        <target state="translated">JavaScript 파일에서 의미 검사를 사용하지 않습니다. 파일의 최상단에 있어야 합니다.</target>
      </trans-unit>
      <trans-unit id="ts-ignore">
        <source xml:lang="en">Suppresses @ts-check errors on the next line of a file.</source>
        <target state="translated">파일의 다음 행에서 @ts-check 오류를 억제합니다.</target>
      </trans-unit>
    </body>
  </file>
  <file original="extensions/typescript-language-features/dist/features/implementationsCodeLens" source-language="en" target-language="ko" datatype="plaintext">
    <body>
      <trans-unit id="oneImplementationLabel">
        <source xml:lang="en">1 implementation</source>
        <target state="translated">1개 구현</target>
      </trans-unit>
      <trans-unit id="manyImplementationLabel">
        <source xml:lang="en">{0} implementations</source>
        <target state="translated">{0}개 구현</target>
      </trans-unit>
    </body>
  </file>
  <file original="extensions/typescript-language-features/dist/features/jsDocCompletions" source-language="en" target-language="ko" datatype="plaintext">
    <body>
      <trans-unit id="typescript.jsDocCompletionItem.documentation">
        <source xml:lang="en">JSDoc comment</source>
        <target state="translated">JSDoc 주석</target>
      </trans-unit>
    </body>
  </file>
  <file original="extensions/typescript-language-features/dist/features/organizeImports" source-language="en" target-language="ko" datatype="plaintext">
    <body>
      <trans-unit id="organizeImportsAction.title">
        <source xml:lang="en">Organize Imports</source>
        <target state="translated">가져오기 구성</target>
      </trans-unit>
    </body>
  </file>
  <file original="extensions/typescript-language-features/dist/features/quickFix" source-language="en" target-language="ko" datatype="plaintext">
    <body>
      <trans-unit id="fixAllInFileLabel">
        <source xml:lang="en">{0} (Fix all in file)</source>
        <target state="translated">{0} (파일에서 모두 수정)</target>
      </trans-unit>
    </body>
  </file>
  <file original="extensions/typescript-language-features/dist/features/fixAll" source-language="en" target-language="ko" datatype="plaintext">
    <body>
      <trans-unit id="autoFix.label">
        <source xml:lang="en">Auto fix</source>
        <target state="translated">자동 수정</target>
      </trans-unit>
    </body>
  </file>
  <file original="extensions/typescript-language-features/dist/features/refactor" source-language="en" target-language="ko" datatype="plaintext">
    <body>
      <trans-unit id="refactoringFailed">
        <source xml:lang="en">Could not apply refactoring</source>
        <target state="translated">리팩터링을 적용할 수 없습니다.</target>
      </trans-unit>
      <trans-unit id="extractConstant.disabled.title">
        <source xml:lang="en">Extract to constant</source>
        <target state="translated">상수로 추출</target>
      </trans-unit>
      <trans-unit id="extractConstant.disabled.reason">
        <source xml:lang="en">The current selection cannot be extracted</source>
        <target state="translated">현재 선택 영역을 추출할 수 없습니다.</target>
      </trans-unit>
      <trans-unit id="extractFunction.disabled.title">
        <source xml:lang="en">Extract to function</source>
        <target state="translated">함수로 추출</target>
      </trans-unit>
      <trans-unit id="extractFunction.disabled.reason">
        <source xml:lang="en">The current selection cannot be extracted</source>
        <target state="translated">현재 선택 영역을 추출할 수 없습니다.</target>
      </trans-unit>
      <trans-unit id="refactor.documentation.title">
        <source xml:lang="en">Learn more about JS/TS refactorings</source>
        <target state="translated">JS/TS 리팩터링에 대해 자세히 알아보기</target>
      </trans-unit>
    </body>
  </file>
  <file original="extensions/typescript-language-features/dist/features/referencesCodeLens" source-language="en" target-language="ko" datatype="plaintext">
    <body>
      <trans-unit id="oneReferenceLabel">
        <source xml:lang="en">1 reference</source>
        <target state="translated">참조 1개</target>
      </trans-unit>
      <trans-unit id="manyReferenceLabel">
        <source xml:lang="en">{0} references</source>
        <target state="translated">참조 {0}개</target>
      </trans-unit>
    </body>
  </file>
  <file original="extensions/typescript-language-features/dist/features/rename" source-language="en" target-language="ko" datatype="plaintext">
    <body>
      <trans-unit id="fileRenameFail">
        <source xml:lang="en">An error occurred while renaming file</source>
        <target state="translated">파일 이름을 바꾸는 중 오류 발생</target>
      </trans-unit>
    </body>
  </file>
  <file original="extensions/typescript-language-features/dist/typescriptServiceClient" source-language="en" target-language="ko" datatype="plaintext">
    <body>
      <trans-unit id="noServerFound">
        <source xml:lang="en">The path {0} doesn't point to a valid tsserver install. Falling back to bundled TypeScript version.</source>
        <target state="translated">경로 {0}이(가) 올바른 tsserver 설치를 가리키지 않습니다. 포함된 TypeScript 버전을 대신 사용합니다.</target>
      </trans-unit>
      <trans-unit id="serverExitedWithError">
        <source xml:lang="en">TypeScript language server exited with error. Error message is: {0}</source>
        <target state="translated">오류가 발생하여 TypeScript 언어 서버가 종료되었습니다. 오류 메시지: {0}</target>
      </trans-unit>
      <trans-unit id="typescript.openTsServerLog.loggingNotEnabled">
        <source xml:lang="en">TS Server logging is off. Please set `typescript.tsserver.log` and restart the TS server to enable logging</source>
        <target state="translated">TS 서버 로깅이 꺼져 있습니다. `typescript.tsserver.log`를 설정하고 TS 서버를 다시 시작하여 로깅을 사용하도록 설정하세요.</target>
      </trans-unit>
      <trans-unit id="typescript.openTsServerLog.enableAndReloadOption">
        <source xml:lang="en">Enable logging and restart TS server</source>
        <target state="translated">로깅 사용 및 TS 서버 다시 시작</target>
      </trans-unit>
      <trans-unit id="typescript.openTsServerLog.noLogFile">
        <source xml:lang="en">TS Server has not started logging.</source>
        <target state="translated">TS 서버에서 로깅을 시작하지 않았습니다.</target>
      </trans-unit>
      <trans-unit id="openTsServerLog.openFileFailedFailed">
        <source xml:lang="en">Could not open TS Server log file</source>
        <target state="translated">TS 서버 로그 파일을 열 수 없습니다.</target>
      </trans-unit>
      <trans-unit id="serverDiedAfterStart">
        <source xml:lang="en">The TypeScript language service died 5 times right after it got started. The service will not be restarted.</source>
        <target state="translated">TypeScript 언어 서비스가 시작된 직후 5번 종료되었습니다. 서비스가 다시 시작되지 않습니다.</target>
      </trans-unit>
      <trans-unit id="serverDiedReportIssue">
        <source xml:lang="en">Report Issue</source>
        <target state="translated">문제 신고</target>
      </trans-unit>
      <trans-unit id="serverDied">
        <source xml:lang="en">The TypeScript language service died unexpectedly 5 times in the last 5 Minutes.</source>
        <target state="translated">TypeScript 언어 서비스가 지난 5분 동안 예기치 않게 5번 종료되었습니다.</target>
      </trans-unit>
      <trans-unit id="serverLoading.progress">
        <source xml:lang="en">Initializing JS/TS language features</source>
        <target state="translated">JS/TS 언어 기능 초기화</target>
      </trans-unit>
    </body>
  </file>
  <file original="extensions/typescript-language-features/dist/utils/logger" source-language="en" target-language="ko" datatype="plaintext">
    <body>
      <trans-unit id="channelName">
        <source xml:lang="en">TypeScript</source>
        <target state="translated">TypeScript</target>
      </trans-unit>
    </body>
  </file>
  <file original="extensions/typescript-language-features/dist/utils/versionPicker" source-language="en" target-language="ko" datatype="plaintext">
    <body>
      <trans-unit id="useVSCodeVersionOption">
        <source xml:lang="en">Use VS Code's Version</source>
        <target state="translated">VS Code의 버전 사용</target>
      </trans-unit>
      <trans-unit id="useWorkspaceVersionOption">
        <source xml:lang="en">Use Workspace Version</source>
        <target state="translated">작업 영역 버전 사용</target>
      </trans-unit>
      <trans-unit id="learnMore">
        <source xml:lang="en">Learn More</source>
        <target state="translated">자세한 정보</target>
      </trans-unit>
      <trans-unit id="selectTsVersion">
        <source xml:lang="en">Select the TypeScript version used for JavaScript and TypeScript language features</source>
        <target state="translated">JavaScript 및 TypeScript 언어 기능에 사용되는 TypeScript 버전 선택</target>
      </trans-unit>
    </body>
  </file>
  <file original="extensions/typescript-language-features/dist/utils/versionProvider" source-language="en" target-language="ko" datatype="plaintext">
    <body>
      <trans-unit id="couldNotLoadTsVersion">
        <source xml:lang="en">Could not load the TypeScript version at this path</source>
        <target state="translated">이 경로에서 TypeScript 버전을 로드할 수 없음</target>
      </trans-unit>
      <trans-unit id="noBundledServerFound">
        <source xml:lang="en">VS Code's tsserver was deleted by another application such as a misbehaving virus detection tool. Please reinstall VS Code.</source>
        <target state="translated">잘못 동작하는 바이러스 감지 도구와 같은 다른 애플리케이션에서 VS Code의 tsserver가 삭제되었습니다. VS Code를 다시 설치하세요.</target>
      </trans-unit>
    </body>
  </file>
  <file original="extensions/typescript-language-features/dist/utils/typingsStatus" source-language="en" target-language="ko" datatype="plaintext">
    <body>
      <trans-unit id="installingPackages">
        <source xml:lang="en">Fetching data for better TypeScript IntelliSense</source>
        <target state="translated">TypeScript IntelliSense를 개선하기 위해 정보를 가져오는 중</target>
      </trans-unit>
      <trans-unit id="typesInstallerInitializationFailed.title">
        <source xml:lang="en">Could not install typings files for JavaScript language features. Please ensure that NPM is installed or configure 'typescript.npm' in your user settings. Click [here]({0}) to learn more.</source>
        <target state="translated">JavaScript 언어 기능에 대한 입력 파일을 설치할 수 없습니다. NPM이 설치되어 있는지 확인하거나 사용자 설정에서 'typescript.npm'을 구성하세요.  자세히 알아보려면 [여기]({0})를 클릭하세요.</target>
      </trans-unit>
      <trans-unit id="typesInstallerInitializationFailed.doNotCheckAgain">
        <source xml:lang="en">Don't Show Again</source>
        <target state="translated">다시 표시 안 함</target>
      </trans-unit>
    </body>
  </file>
  <file original="extensions/typescript-language-features/dist/utils/versionStatus" source-language="en" target-language="ko" datatype="plaintext">
    <body>
      <trans-unit id="typescriptVersion">
        <source xml:lang="en">TypeScript: Version</source>
        <target state="translated">TypeScript: 버전</target>
      </trans-unit>
    </body>
  </file>
  <file original="extensions/typescript-language-features/dist/features/updatePathsOnRename" source-language="en" target-language="ko" datatype="plaintext">
    <body>
      <trans-unit id="renameProgress.title">
        <source xml:lang="en">Checking for update of JS/TS imports</source>
        <target state="translated">JS/TS 가져오기 업데이트 확인</target>
      </trans-unit>
      <trans-unit id="prompt">
        <source xml:lang="en">Update imports for '{0}'?</source>
        <target state="translated">'{0}'에 대한 가져오기를 업데이트하시겠습니까?</target>
      </trans-unit>
      <trans-unit id="promptMoreThanOne">
        <source xml:lang="en">Update imports for the following {0} files?</source>
        <target state="translated">다음 {0} 파일에 대한 가져오기를 업데이트하시겠습니까?</target>
      </trans-unit>
      <trans-unit id="reject.title">
        <source xml:lang="en">No</source>
        <target state="translated">아니요</target>
      </trans-unit>
      <trans-unit id="accept.title">
        <source xml:lang="en">Yes</source>
        <target state="translated">예</target>
      </trans-unit>
      <trans-unit id="always.title">
        <source xml:lang="en">Always automatically update imports</source>
        <target state="translated">항상 자동으로 가져오기 업데이트</target>
      </trans-unit>
      <trans-unit id="never.title">
        <source xml:lang="en">Never automatically update imports</source>
        <target state="translated">자동으로 가져오기를 업데이트하지 않음</target>
      </trans-unit>
      <trans-unit id="moreFile">
        <source xml:lang="en">...1 additional file not shown</source>
        <target state="translated">...1개의 추가 파일이 표시되지 않음</target>
      </trans-unit>
      <trans-unit id="moreFiles">
        <source xml:lang="en">...{0} additional files not shown</source>
        <target state="translated">...{0}개의 추가 파일이 표시되지 않음</target>
      </trans-unit>
    </body>
  </file>
  <file original="extensions/typescript-language-features/dist/utils/projectStatus" source-language="en" target-language="ko" datatype="plaintext">
    <body>
      <trans-unit id="statusExclude">
        <source xml:lang="en">TypeScript: Configure Excludes</source>
        <target state="translated">TypeScript: 제외 구성</target>
      </trans-unit>
      <trans-unit id="hintExclude">
        <source xml:lang="en">To enable project-wide JavaScript/TypeScript language features, exclude folders with many files, like: {0}</source>
        <target state="translated">프로젝트 전체에서 JavaScript/TypeScript 언어 기능을 사용하도록 설정하려면 {0}과(와) 같이 파일이 많은 폴더를 제외하세요.</target>
      </trans-unit>
      <trans-unit id="hintExclude.generic">
        <source xml:lang="en">To enable project-wide JavaScript/TypeScript language features, exclude large folders with source files that you do not work on.</source>
        <target state="translated">프로젝트 전체에서 JavaScript/TypeScript 언어 기능을 사용하도록 설정하려면 사용하지 않는 소스 파일이 포함된 큰 폴더를 제외하세요.</target>
      </trans-unit>
      <trans-unit id="large.label">
        <source xml:lang="en">Configure Excludes</source>
        <target state="translated">제외 구성</target>
      </trans-unit>
      <trans-unit id="hintExclude.tooltip">
        <source xml:lang="en">To enable project-wide JavaScript/TypeScript language features, exclude large folders with source files that you do not work on.</source>
        <target state="translated">프로젝트 전체에서 JavaScript/TypeScript 언어 기능을 사용하도록 설정하려면 사용하지 않는 소스 파일이 포함된 큰 폴더를 제외하세요.</target>
      </trans-unit>
    </body>
  </file>
  <file original="extensions/typescript-language-features/dist/features/task" source-language="en" target-language="ko" datatype="plaintext">
    <body>
      <trans-unit id="badTsConfig">
        <source xml:lang="en">TypeScript Task in tasks.json contains "\\". TypeScript tasks tsconfig must use "/"</source>
        <target state="translated">tasks.json의 TypeScript 작업에 "\\"가 포함되어 있습니다. TypeScript 작업 tsconfig는 "/"를 사용해야 합니다.</target>
      </trans-unit>
      <trans-unit id="buildTscLabel">
        <source xml:lang="en">build - {0}</source>
        <target state="translated">빌드 - {0}</target>
      </trans-unit>
      <trans-unit id="buildAndWatchTscLabel">
        <source xml:lang="en">watch - {0}</source>
        <target state="translated">감시 - {0}</target>
      </trans-unit>
    </body>
  </file>
</xliff>