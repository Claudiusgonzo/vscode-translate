<?xml version="1.0" encoding="utf-8"?>
<xliff version="1.2" xmlns="urn:oasis:names:tc:xliff:document:1.2">
  <file original="extensions/ms-vscode.node-debug/package" source-language="en" target-language="ko" datatype="plaintext">
    <body>
      <trans-unit id="extension.description">
        <source xml:lang="en">Node.js debugging support (versions &lt; 8.0)</source>
        <target state="translated">Node.js 디버깅 지원(버전 8.0 미만)</target>
      </trans-unit>
      <trans-unit id="node.label">
        <source xml:lang="en">Node.js</source>
        <target state="translated">Node.js</target>
      </trans-unit>
      <trans-unit id="open.loaded.script">
        <source xml:lang="en">Open Loaded Script</source>
        <target state="translated">로드된 스크립트 열기</target>
      </trans-unit>
      <trans-unit id="attach.node.process">
        <source xml:lang="en">Attach to Node Process</source>
        <target state="translated">Node 프로세스에 연결 </target>
      </trans-unit>
      <trans-unit id="toggle.skipping.this.file">
        <source xml:lang="en">Toggle Skipping this File</source>
        <target state="translated">이 파일에 대한 건너뛰기 토글</target>
      </trans-unit>
      <trans-unit id="start.with.stop.on.entry">
        <source xml:lang="en">Start Debugging and Stop on Entry</source>
        <target state="translated">디버깅 시작 및 항목에서 중지</target>
      </trans-unit>
      <trans-unit id="smartStep.description">
        <source xml:lang="en">Automatically step through generated code that cannot be mapped back to the original source.</source>
        <target state="translated">생성된 코드 중 원래 소스로 다시 매핑할 수 없는 코드를 단계별로 자동 실행합니다.</target>
      </trans-unit>
      <trans-unit id="skipFiles.description">
        <source xml:lang="en">An array of glob patterns for files to skip when debugging. The pattern `&lt;node_internals&gt;/**` matches all internal Node.js modules.</source>
        <target state="translated">디버그할 때 건너뛰는 파일의 GLOB 패턴 배열입니다. `&lt;node_internals&gt;/**` 패턴은 모든 내부 Node.js 모듈과 일치합니다.</target>
      </trans-unit>
      <trans-unit id="outFiles.description">
        <source xml:lang="en">If source maps are enabled, these glob patterns specify the generated JavaScript files. If a pattern starts with '!' the files are excluded. If not specified, the generated code is expected in the same directory as its source.  Example: ["${workspaceFolder}/out/**/*.js"]</source>
        <target state="translated">소스 맵을 사용하도록 설정한 경우 이러한 GLOB 패턴은 생성된 JavaScript 파일을 지정합니다. 패턴이 '!'로 시작하면 파일이 제외됩니다. 파일을 지정하지 않으면 생성된 코드가 소스와 동일한 디렉터리에 필요합니다. 예: ["${workspaceFolder}/out/**/*.js"]</target>
      </trans-unit>
      <trans-unit id="outDir.deprecationMessage">
        <source xml:lang="en">Attribute 'outDir' is deprecated, use 'outFiles' instead.</source>
        <target state="translated">특성 'outDir'은(는) 사용되지 않습니다. 대신 'outFiles'를 사용하세요.</target>
      </trans-unit>
      <trans-unit id="trace.description">
        <source xml:lang="en">Produce diagnostic output. Instead of setting this to true you can list one or more selectors separated with commas. The 'verbose' selector enables very detailed output.</source>
        <target state="translated">진단 출력을 생성합니다. true로 설정하는 대신 하나 이상의 선택기를 쉼표로 구분하여 나열할 수 있습니다. '자세한 정보 표시' 선택기를 통해 아주 자세한 출력을 사용할 수 있습니다.</target>
      </trans-unit>
      <trans-unit id="launch.args.description">
        <source xml:lang="en">Command line arguments passed to the program.</source>
        <target state="translated">프로그램에 전달된 명령줄 인수입니다.</target>
      </trans-unit>
      <trans-unit id="debug.node.showUseWslIsDeprecatedWarning.description">
        <source xml:lang="en">Controls whether to show a warning when the 'useWSL' attribute is used.</source>
        <target state="translated">'useWSL' 특성을 사용할 때 경고를 표시할지 여부를 제어합니다.</target>
      </trans-unit>
      <trans-unit id="debug.node.useV3.description">
        <source xml:lang="en">[Experimental] Controls whether to delegate "node"-type launch configs to the js-debug extension.</source>
        <target state="translated">【실험적】 js-debug 확장에 "node"-type 시작 구성을 위임할지 여부를 제어합니다.</target>
      </trans-unit>
      <trans-unit id="node.protocol.description">
        <source xml:lang="en">Node.js debug protocol to use.</source>
        <target state="translated">사용할 Node.js 디버그 프로토콜입니다.</target>
      </trans-unit>
      <trans-unit id="node.protocol.auto.description">
        <source xml:lang="en">Try to detect the best protocol automatically, selecting 'inspector' for launching Node 8.0+</source>
        <target state="translated">Node 8.0 이상 버전을 실행할 때 '검사기'를 선택하여, 가장 적합한 프로토콜을 자동으로 검색합니다.</target>
      </trans-unit>
      <trans-unit id="node.protocol.inspector.description">
        <source xml:lang="en">New protocol supported by Node.js versions &gt;= 6.3</source>
        <target state="translated">Node.js 버전 6.3 이상에서 지원되는 새 프로토콜</target>
      </trans-unit>
      <trans-unit id="node.protocol.legacy.description">
        <source xml:lang="en">Old protocol supported by Node.js versions &lt; 8.0</source>
        <target state="translated">Node.js 버전 8.0 미만에서 지원되는 이전 프로토콜</target>
      </trans-unit>
      <trans-unit id="node.sourceMaps.description">
        <source xml:lang="en">Use JavaScript source maps (if they exist).</source>
        <target state="translated">JavaScript 소스 맵을 사용합니다(있는 경우에만).</target>
      </trans-unit>
      <trans-unit id="node.stopOnEntry.description">
        <source xml:lang="en">Automatically stop program after launch.</source>
        <target state="translated">시작한 후 자동으로 프로그램을 중지합니다.</target>
      </trans-unit>
      <trans-unit id="node.port.description">
        <source xml:lang="en">Debug port to attach to. Default is 5858.</source>
        <target state="translated">연결할 디버그 포트입니다. 기본값은 5858입니다.</target>
      </trans-unit>
      <trans-unit id="node.address.description">
        <source xml:lang="en">TCP/IP address of process to be debugged (for Node.js &gt;= 5.0 only). Default is 'localhost'.</source>
        <target state="translated">디버그할 프로세스의 TCP/IP 주소입니다(Node.js &gt;= 5.0인 경우에만). 기본값은 'localhost'입니다.</target>
      </trans-unit>
      <trans-unit id="node.timeout.description">
        <source xml:lang="en">Retry for this number of milliseconds to connect to Node.js. Default is 10000 ms.</source>
        <target state="translated">이 시간(밀리초) 동안 Node.js에 연결하려고 다시 시도합니다. 기본값은 10000ms입니다.</target>
      </trans-unit>
      <trans-unit id="node.restart.description">
        <source xml:lang="en">Restart session after Node.js has terminated.</source>
        <target state="translated">Node.js가 종료된 후 세션을 다시 시작합니다.</target>
      </trans-unit>
      <trans-unit id="node.localRoot.description">
        <source xml:lang="en">Path to the local directory containing the program.</source>
        <target state="translated">프로그램이 포함된 로컬 디렉터리의 경로입니다.</target>
      </trans-unit>
      <trans-unit id="node.remoteRoot.description">
        <source xml:lang="en">Absolute path to the remote directory containing the program.</source>
        <target state="translated">프로그램이 포함된 원격 디렉터리의 절대 경로입니다.</target>
      </trans-unit>
      <trans-unit id="node.showAsyncStacks.description">
        <source xml:lang="en">Show the async calls that led to the current call stack. 'inspector' protocol only.</source>
        <target state="translated">현재 호출 스택을 발생시킨 비동기 호출을 표시합니다. 'inspector' 프로토콜에만 해당됩니다.</target>
      </trans-unit>
      <trans-unit id="node.sourceMapPathOverrides.description">
        <source xml:lang="en">A set of mappings for rewriting the locations of source files from what the sourcemap says, to their locations on disk.</source>
        <target state="translated">소스맵의 정보로부터 디스크의 위치로 소스 파일 위치를 다시 쓰기 위한 매핑 집합입니다.</target>
      </trans-unit>
      <trans-unit id="node.disableOptimisticBPs.description">
        <source xml:lang="en">Don't set breakpoints in any file until a sourcemap has been loaded for that file.</source>
        <target state="translated">소스 맵이 해당 파일에 대해 로드될 때까지 파일에 중단점을 설정하지 않습니다.</target>
      </trans-unit>
      <trans-unit id="node.launch.program.description">
        <source xml:lang="en">Absolute path to the program. Generated value is guessed by looking at package.json and opened files. Edit this attribute.</source>
        <target state="translated">프로그램의 절대 경로입니다. 생성된 값은 package.json 및 열린 파일을 보고 추측한 것입니다. 이 특성을 편집하세요.</target>
      </trans-unit>
      <trans-unit id="node.launch.externalConsole.deprecationMessage">
        <source xml:lang="en">Attribute 'externalConsole' is deprecated, use 'console' instead.</source>
        <target state="translated">'externalConsole' 특성은 사용되지 않으므로 대신 'console'을 사용하세요.</target>
      </trans-unit>
      <trans-unit id="node.launch.console.description">
        <source xml:lang="en">Where to launch the debug target.</source>
        <target state="translated">디버그 대상을 시작할 위치입니다.</target>
      </trans-unit>
      <trans-unit id="node.launch.console.internalConsole.description">
        <source xml:lang="en">VS Code Debug Console (which doesn't support to read input from a program)</source>
        <target state="translated">VS Code 디버그 콘솔(프로그램에서 입력 읽기를 지원하지 않음)</target>
      </trans-unit>
      <trans-unit id="node.launch.console.integratedTerminal.description">
        <source xml:lang="en">VS Code's integrated terminal</source>
        <target state="translated">VS Code의 통합 터미널</target>
      </trans-unit>
      <trans-unit id="node.launch.console.externalTerminal.description">
        <source xml:lang="en">External terminal that can be configured via user settings</source>
        <target state="translated">사용자 설정을 통해 구성 가능한 외부 터미널</target>
      </trans-unit>
      <trans-unit id="node.launch.cwd.description">
        <source xml:lang="en">Absolute path to the working directory of the program being debugged.</source>
        <target state="translated">디버그 중인 프로그램의 작업 디렉터리의 절대 경로입니다.</target>
      </trans-unit>
      <trans-unit id="node.launch.runtimeExecutable.description">
        <source xml:lang="en">Runtime to use. Either an absolute path or the name of a runtime available on the PATH. If omitted `node` is assumed.</source>
        <target state="translated">사용할 런타임입니다. PATH에서 사용할 수 있는 런타임의 이름 또는 절대 경로입니다. 생략하면 `node`로 간주합니다.</target>
      </trans-unit>
      <trans-unit id="node.launch.runtimeArgs.description">
        <source xml:lang="en">Optional arguments passed to the runtime executable.</source>
        <target state="translated">선택적 인수가 런타임 실행 파일에 전달되었습니다.</target>
      </trans-unit>
      <trans-unit id="node.launch.runtimeVersion.description">
        <source xml:lang="en">Version of `node` runtime to use. Requires `nvm`.</source>
        <target state="translated">사용할 `node` 런타임의 버전입니다. `nvm`이 필요합니다.</target>
      </trans-unit>
      <trans-unit id="node.launch.env.description">
        <source xml:lang="en">Environment variables passed to the program. The value `null` removes the variable from the environment.</source>
        <target state="translated">프로그램에 전달된 환경 변수입니다. 'null' 값으로 설정하면 변수가 환경에서 제거됩니다.</target>
      </trans-unit>
      <trans-unit id="node.launch.envFile.description">
        <source xml:lang="en">Absolute path to a file containing environment variable definitions.</source>
        <target state="translated">환경 변수 정의가 포함된 파일의 절대 경로입니다.</target>
      </trans-unit>
      <trans-unit id="node.launch.useWSL.description">
        <source xml:lang="en">Use Windows Subsystem for Linux.</source>
        <target state="translated">Linux용 Windows 하위 시스템을 사용합니다.</target>
      </trans-unit>
      <trans-unit id="node.launch.useWSL.deprecation">
        <source xml:lang="en">'useWSL' is deprecated and support for it will be dropped. Use the 'Remote - WSL' extension instead.</source>
        <target state="translated">'useWSL'은 사용되지 않으며 지원이 중단됩니다. 대신 '원격 - WSL' 확장을 사용하세요.</target>
      </trans-unit>
      <trans-unit id="node.launch.outputCapture.description">
        <source xml:lang="en">From where to capture output messages: The debug API, or stdout/stderr streams.</source>
        <target state="translated">출력 메시지를 캡처하는 위치: 디버그 API 또는 stdout/stderr 스트림</target>
      </trans-unit>
      <trans-unit id="node.launch.autoAttachChildProcesses.description">
        <source xml:lang="en">Attach debugger to new child processes automatically.</source>
        <target state="translated">디버거를 새로 생성된 자식 프로세스에 자동으로 연결합니다.</target>
      </trans-unit>
      <trans-unit id="node.launch.config.name">
        <source xml:lang="en">Launch</source>
        <target state="translated">시작</target>
      </trans-unit>
      <trans-unit id="node.attach.processId.description">
        <source xml:lang="en">ID of process to attach to.</source>
        <target state="translated">연결할 프로세스 ID입니다.</target>
      </trans-unit>
      <trans-unit id="node.attach.config.name">
        <source xml:lang="en">Attach</source>
        <target state="translated">연결</target>
      </trans-unit>
      <trans-unit id="node.processattach.config.name">
        <source xml:lang="en">Attach to Process</source>
        <target state="translated">프로세스에 연결</target>
      </trans-unit>
      <trans-unit id="node.snippet.launch.label">
        <source xml:lang="en">Node.js: Launch Program</source>
        <target state="translated">Node.js: 프로그램 실행</target>
      </trans-unit>
      <trans-unit id="node.snippet.launch.description">
        <source xml:lang="en">Launch a node program in debug mode</source>
        <target state="translated">디버그 모드에서 노드 프로그램 시작</target>
      </trans-unit>
      <trans-unit id="node.snippet.npm.label">
        <source xml:lang="en">Node.js: Launch via NPM</source>
        <target state="translated">Node.js: NPM을 통해 시작</target>
      </trans-unit>
      <trans-unit id="node.snippet.npm.description">
        <source xml:lang="en">Launch a node program through an npm `debug` script</source>
        <target state="translated">npm 'debug' 스크립트를 통해 노드 프로그램 시작</target>
      </trans-unit>
      <trans-unit id="node.snippet.attach.label">
        <source xml:lang="en">Node.js: Attach</source>
        <target state="translated">Node.js: 연결</target>
      </trans-unit>
      <trans-unit id="node.snippet.attach.description">
        <source xml:lang="en">Attach to a running node program</source>
        <target state="translated">실행 중인 노드 프로그램에 연결</target>
      </trans-unit>
      <trans-unit id="node.snippet.remoteattach.label">
        <source xml:lang="en">Node.js: Attach to Remote Program</source>
        <target state="translated">Node.js: 원격 프로그램에 연결</target>
      </trans-unit>
      <trans-unit id="node.snippet.remoteattach.description">
        <source xml:lang="en">Attach to the debug port of a remote node program</source>
        <target state="translated">원격 노드 프로그램의 디버그 포트에 연결합니다.</target>
      </trans-unit>
      <trans-unit id="node.snippet.attachProcess.label">
        <source xml:lang="en">Node.js: Attach to Process</source>
        <target state="translated">Node.js: 프로세스에 연결</target>
      </trans-unit>
      <trans-unit id="node.snippet.attachProcess.description">
        <source xml:lang="en">Open process picker to select node process to attach to</source>
        <target state="translated">프로세스 선택기를 열어 연결할 Node 프로세스 선택 </target>
      </trans-unit>
      <trans-unit id="node.snippet.nodemon.label">
        <source xml:lang="en">Node.js: Nodemon Setup</source>
        <target state="translated">Node.js: Nodemon 설정</target>
      </trans-unit>
      <trans-unit id="node.snippet.nodemon.description">
        <source xml:lang="en">Use nodemon to relaunch a debug session on source changes</source>
        <target state="translated">nodemon을 사용하여 소스 변경 내용에 대한 디버그 세션 다시 시작</target>
      </trans-unit>
      <trans-unit id="node.snippet.mocha.label">
        <source xml:lang="en">Node.js: Mocha Tests</source>
        <target state="translated">Node.js: Mocha 테스트</target>
      </trans-unit>
      <trans-unit id="node.snippet.mocha.description">
        <source xml:lang="en">Debug mocha tests</source>
        <target state="translated">Mocha 테스트 디버그</target>
      </trans-unit>
      <trans-unit id="node.snippet.yo.label">
        <source xml:lang="en">Node.js: Yeoman generator</source>
        <target state="translated">Node.js: Yeoman 생성기</target>
      </trans-unit>
      <trans-unit id="node.snippet.yo.description">
        <source xml:lang="en">Debug yeoman generator (install by running `npm link` in project folder)</source>
        <target state="translated">yeoman 생성기 디버그(프로젝트 폴더에서 `npm link`를 실행하여 설치)</target>
      </trans-unit>
      <trans-unit id="node.snippet.gulp.label">
        <source xml:lang="en">Node.js: Gulp task</source>
        <target state="translated">Node.js: Gulp 작업</target>
      </trans-unit>
      <trans-unit id="node.snippet.gulp.description">
        <source xml:lang="en">Debug gulp task (make sure to have a local gulp installed in your project)</source>
        <target state="translated">Gulp 작업 디버그(프로젝트에 로컬 Gulp가 설치되어 있는지 확인하세요.)</target>
      </trans-unit>
      <trans-unit id="node.snippet.electron.label">
        <source xml:lang="en">Node.js: Electron Main</source>
        <target state="translated">Node.js: Electron 주</target>
      </trans-unit>
      <trans-unit id="node.snippet.electron.description">
        <source xml:lang="en">Debug the Electron main process</source>
        <target state="translated">Electron 주 프로세스 디버그</target>
      </trans-unit>
    </body>
  </file>
  <file original="extensions/ms-vscode.node-debug/dist/node/nodeDebug" source-language="en" target-language="ko" datatype="plaintext">
    <body>
      <trans-unit id="setVariable.error">
        <source xml:lang="en">Setting value not supported</source>
        <target state="translated">설정값이 지원되지 않습니다.</target>
      </trans-unit>
      <trans-unit id="exception.paused.promise.rejection">
        <source xml:lang="en">Paused on Promise Rejection</source>
        <target state="translated">약속 거부에서 일시 중지됨</target>
      </trans-unit>
      <trans-unit id="exception.promise.rejection.text">
        <source xml:lang="en">Promise Rejection ({0})</source>
        <target state="translated">약속 거부({0})</target>
      </trans-unit>
      <trans-unit id="exception.promise.rejection">
        <source xml:lang="en">Promise Rejection</source>
        <target state="translated">약속 거부</target>
      </trans-unit>
      <trans-unit id="reason.description.step">
        <source xml:lang="en">Paused on step</source>
        <target state="translated">단계에서 일시 중지됨</target>
      </trans-unit>
      <trans-unit id="reason.description.breakpoint">
        <source xml:lang="en">Paused on breakpoint</source>
        <target state="translated">중단점에서 일시 중지됨</target>
      </trans-unit>
      <trans-unit id="reason.description.exception">
        <source xml:lang="en">Paused on exception</source>
        <target state="translated">예외에서 일시 중지됨</target>
      </trans-unit>
      <trans-unit id="reason.description.user_request">
        <source xml:lang="en">Paused on user request</source>
        <target state="translated">사용자 요청에서 일시 중지됨</target>
      </trans-unit>
      <trans-unit id="reason.description.entry">
        <source xml:lang="en">Paused on entry</source>
        <target state="translated">항목에서 일시 중지됨</target>
      </trans-unit>
      <trans-unit id="reason.description.debugger_statement">
        <source xml:lang="en">Paused on debugger statement</source>
        <target state="translated">디버거 문에서 일시 중지됨</target>
      </trans-unit>
      <trans-unit id="reason.description.restart">
        <source xml:lang="en">Paused on frame entry</source>
        <target state="translated">프레임 항목에서 일시 중지됨</target>
      </trans-unit>
      <trans-unit id="exceptions.all">
        <source xml:lang="en">All Exceptions</source>
        <target state="translated">모든 예외</target>
      </trans-unit>
      <trans-unit id="exceptions.uncaught">
        <source xml:lang="en">Uncaught Exceptions</source>
        <target state="translated">확인할 수 없는 예외</target>
      </trans-unit>
      <trans-unit id="exceptions.rejects">
        <source xml:lang="en">Promise Rejects</source>
        <target state="translated">약속 거부</target>
      </trans-unit>
      <trans-unit id="VSND2028">
        <source xml:lang="en">Unknown console type '{0}'.</source>
        <target state="translated">알 수 없는 콘솔 유형 '{0}'입니다.</target>
      </trans-unit>
      <trans-unit id="attribute.wls.not.exist">
        <source xml:lang="en">Cannot find Windows Subsystem Linux installation</source>
        <target state="translated">Windows Subsystem Linux 설치를 찾을 수 없음</target>
      </trans-unit>
      <trans-unit id="VSND2001">
        <source xml:lang="en">Cannot find runtime '{0}' on PATH. Make sure to have '{0}' installed.</source>
        <target state="translated">PATH에서 런타임 '{0}'을(를) 찾을 수 없습니다. '{0}'이(가) 설치되어 있는지 확인합니다.</target>
      </trans-unit>
      <trans-unit id="program.path.case.mismatch.warning">
        <source xml:lang="en">Program path uses differently cased character as file on disk; this might result in breakpoints not being hit.</source>
        <target state="translated">프로그램 경로에 사용된 대소문자가 디스크 상의 파일과 다릅니다. 이로 인해 중단점이 적중되지 않을 수 있습니다.</target>
      </trans-unit>
      <trans-unit id="VSND2002">
        <source xml:lang="en">Cannot launch program '{0}'; configuring source maps might help.</source>
        <target state="translated">프로그램 '{0}'을(를) 시작할 수 없습니다. 소스 맵을 구성하는 것이 좋습니다.</target>
      </trans-unit>
      <trans-unit id="VSND2009">
        <source xml:lang="en">Cannot launch program '{0}' because corresponding JavaScript cannot be found.</source>
        <target state="translated">해당 JavaScript를 찾을 수 없기 때문에 '{0}' 프로그램을 시작할 수 없습니다.</target>
      </trans-unit>
      <trans-unit id="VSND2003">
        <source xml:lang="en">Cannot launch program '{0}'; setting the '{1}' attribute might help.</source>
        <target state="translated">프로그램 '{0}'을(를) 시작할 수 없습니다. '{1}' 특성을 설정하는 것이 좋습니다.</target>
      </trans-unit>
      <trans-unit id="VSND2029">
        <source xml:lang="en">Can't load environment variables from file ({0}).</source>
        <target state="translated">파일({0})에서 환경 변수를 로드할 수 없습니다.</target>
      </trans-unit>
      <trans-unit id="node.console.title">
        <source xml:lang="en">Node Debug Console</source>
        <target state="translated">노드 디버그 콘솔</target>
      </trans-unit>
      <trans-unit id="VSND2011">
        <source xml:lang="en">Cannot launch debug target in terminal ({0}).</source>
        <target state="translated">터미널({0})에서 디버그 대상을 시작할 수 없습니다.</target>
      </trans-unit>
      <trans-unit id="VSND2017">
        <source xml:lang="en">Cannot launch debug target ({0}).</source>
        <target state="translated">디버그 대상({0})을 시작할 수 없습니다.</target>
      </trans-unit>
      <trans-unit id="VSND2010">
        <source xml:lang="en">Cannot connect to runtime process (reason: {0}).</source>
        <target state="translated">런타임 프로세스에 연결할 수 없습니다(이유: {0}).</target>
      </trans-unit>
      <trans-unit id="VSND2033">
        <source xml:lang="en">Cannot connect to runtime; make sure that runtime is in 'legacy' debug mode.</source>
        <target state="translated">런타임에 연결할 수 없습니다. 런타임이 '레거시' 디버그 모드에 있는지 확인합니다.</target>
      </trans-unit>
      <trans-unit id="VSND2034">
        <source xml:lang="en">Cannot connect to runtime via 'legacy' protocol; try to use 'inspector' protocol.</source>
        <target state="translated">'legacy' 프로토콜을 통해 런타임에 연결할 수 없으므로 'inspector' 프로토콜을 사용해 보세요.</target>
      </trans-unit>
      <trans-unit id="file.on.disk.changed">
        <source xml:lang="en">Unverified because file on disk has changed. Please restart debug session.</source>
        <target state="translated">디스크의 파일이 변경되었기 때문에 확인되지 않았습니다. 디버그 세션을 다시 시작하세요.</target>
      </trans-unit>
      <trans-unit id="VSND2019">
        <source xml:lang="en">Internal module {0} not found.</source>
        <target state="translated">내부 모듈 {0}을(를) 찾을 수 없습니다.</target>
      </trans-unit>
      <trans-unit id="sourcemapping.fail.message">
        <source xml:lang="en">Breakpoint ignored because generated code not found (source map problem?).</source>
        <target state="translated">생성된 코드를 찾을 수 없으므로 중단점이 무시되었습니다(소스 맵의 문제?).</target>
      </trans-unit>
      <trans-unit id="VSND2022">
        <source xml:lang="en">No call stack because program paused outside of JavaScript.</source>
        <target state="translated">프로그램이 JavaScript 밖에서 일시 중지되었기 때문에 호출 스택이 없습니다.</target>
      </trans-unit>
      <trans-unit id="VSND2023">
        <source xml:lang="en">No call stack available.</source>
        <target state="translated">사용할 수 있는 호출 스택이 없습니다.</target>
      </trans-unit>
      <trans-unit id="VSND2018">
        <source xml:lang="en">No call stack available ({_command}: {_error}).</source>
        <target state="translated">사용할 수 있는 호출 스택이 없습니다({_command}: {_error}).</target>
      </trans-unit>
      <trans-unit id="origin.from.node">
        <source xml:lang="en">read-only content from Node.js</source>
        <target state="translated">Node.js의 읽기 전용 콘텐츠</target>
      </trans-unit>
      <trans-unit id="origin.from.remote.node">
        <source xml:lang="en">read-only content from remote Node.js</source>
        <target state="translated">원격 Node.js의 읽기 전용 콘텐츠</target>
      </trans-unit>
      <trans-unit id="origin.core.module">
        <source xml:lang="en">read-only core module</source>
        <target state="translated">읽기 전용 코어 모듈</target>
      </trans-unit>
      <trans-unit id="source.skipFiles">
        <source xml:lang="en">skipped due to 'skipFiles'</source>
        <target state="translated">'skipFiles'로 인해 건너뜀</target>
      </trans-unit>
      <trans-unit id="source.smartstep">
        <source xml:lang="en">skipped due to 'smartStep'</source>
        <target state="translated">'smartStep'으로 인해 건너뜀</target>
      </trans-unit>
      <trans-unit id="origin.inlined.source.map">
        <source xml:lang="en">read-only inlined content from source map</source>
        <target state="translated">소스 맵의 읽기 전용 인라인 콘텐츠</target>
      </trans-unit>
      <trans-unit id="anonymous.function">
        <source xml:lang="en">(anonymous function)</source>
        <target state="translated">(익명 함수)</target>
      </trans-unit>
      <trans-unit id="scope.local.with.count">
        <source xml:lang="en">Local ({0} of {1})</source>
        <target state="translated">로컬({0}/{1})</target>
        <note>https://github.com/Microsoft/vscode/issues/4569</note>
      </trans-unit>
      <trans-unit id="scope.unknown">
        <source xml:lang="en">Unknown Scope Type: {0}</source>
        <target state="translated">알 수 없는 범위 유형: {0}</target>
      </trans-unit>
      <trans-unit id="scope.exception">
        <source xml:lang="en">Exception</source>
        <target state="translated">예외</target>
        <note>https://github.com/Microsoft/vscode/issues/4569</note>
      </trans-unit>
      <trans-unit id="eval.not.available">
        <source xml:lang="en">not available</source>
        <target state="translated">사용할 수 없음</target>
      </trans-unit>
      <trans-unit id="eval.invalid.expression">
        <source xml:lang="en">invalid expression: {0}</source>
        <target state="translated">잘못된 식: {0}</target>
      </trans-unit>
      <trans-unit id="source.not.found">
        <source xml:lang="en">Could not retrieve content.</source>
        <target state="translated">콘텐츠를 검색할 수 없습니다.</target>
      </trans-unit>
      <trans-unit id="attribute.path.not.exist">
        <source xml:lang="en">Attribute '{0}' does not exist ('{1}').</source>
        <target state="translated">특성 '{0}'이(가) 없습니다('{1}').</target>
      </trans-unit>
      <trans-unit id="attribute.path.not.absolute">
        <source xml:lang="en">Attribute '{0}' is not absolute ('{1}'); consider adding '{2}' as a prefix to make it absolute.</source>
        <target state="translated">'{0}'이(가) 절대 특성('{1}')이 아닙니다. '{2}'을(를) 접두사로 추가하여 절대 특성으로 만드는 것이 좋습니다.</target>
      </trans-unit>
      <trans-unit id="more.information">
        <source xml:lang="en">More Information</source>
        <target state="translated">추가 정보</target>
      </trans-unit>
      <trans-unit id="VSND2015">
        <source xml:lang="en">Request '{_request}' was cancelled because Node.js is unresponsive.</source>
        <target state="translated">Node.js가 응답하지 않아 '{_request}' 요청이 취소되었습니다.</target>
      </trans-unit>
      <trans-unit id="VSND2016">
        <source xml:lang="en">Node.js did not respond to request '{_request}' in a reasonable amount of time.</source>
        <target state="translated">Node.js가 적절한 시간 내에 '{_request}' 요청에 응답하지 않았습니다.</target>
      </trans-unit>
      <trans-unit id="scope.global">
        <source xml:lang="en">Global</source>
        <target state="translated">GLOBAL</target>
        <note>https://github.com/Microsoft/vscode/issues/4569</note>
      </trans-unit>
      <trans-unit id="scope.local">
        <source xml:lang="en">Local</source>
        <target state="translated">LOCAL</target>
        <note>https://github.com/Microsoft/vscode/issues/4569</note>
      </trans-unit>
      <trans-unit id="scope.with">
        <source xml:lang="en">With</source>
        <target state="translated">함께</target>
        <note>https://github.com/Microsoft/vscode/issues/4569</note>
      </trans-unit>
      <trans-unit id="scope.closure">
        <source xml:lang="en">Closure</source>
        <target state="translated">닫기</target>
        <note>https://github.com/Microsoft/vscode/issues/4569</note>
      </trans-unit>
      <trans-unit id="scope.catch">
        <source xml:lang="en">Catch</source>
        <target state="translated">Catch</target>
        <note>https://github.com/Microsoft/vscode/issues/4569</note>
      </trans-unit>
      <trans-unit id="scope.block">
        <source xml:lang="en">Block</source>
        <target state="translated">차단</target>
        <note>https://github.com/Microsoft/vscode/issues/4569</note>
      </trans-unit>
      <trans-unit id="scope.script">
        <source xml:lang="en">Script</source>
        <target state="translated">스크립트</target>
        <note>https://github.com/Microsoft/vscode/issues/4569</note>
      </trans-unit>
    </body>
  </file>
  <file original="extensions/ms-vscode.node-debug/dist/node/nodeV8Protocol" source-language="en" target-language="ko" datatype="plaintext">
    <body>
      <trans-unit id="not.connected">
        <source xml:lang="en">not connected to runtime</source>
        <target state="translated">런타임에 연결되지 않음</target>
      </trans-unit>
      <trans-unit id="runtime.unresponsive">
        <source xml:lang="en">cancelled because Node.js is unresponsive</source>
        <target state="translated">Node.js가 응답하지 않아 취소됨</target>
      </trans-unit>
      <trans-unit id="runtime.timeout">
        <source xml:lang="en">timeout after {0} ms</source>
        <target state="translated">{0}ms 후에 제한 시간 초과</target>
      </trans-unit>
    </body>
  </file>
  <file original="extensions/ms-vscode.node-debug/dist/node/extension/autoAttach" source-language="en" target-language="ko" datatype="plaintext">
    <body>
      <trans-unit id="process.with.pid.label">
        <source xml:lang="en">Auto attached ({0})</source>
        <target state="translated">자동 연결됨({0})</target>
      </trans-unit>
    </body>
  </file>
  <file original="extensions/ms-vscode.node-debug/dist/node/extension/cluster" source-language="en" target-language="ko" datatype="plaintext">
    <body>
      <trans-unit id="child.process.with.pid.label">
        <source xml:lang="en">Child process {0}</source>
        <target state="translated">자식 프로세스 {0}</target>
      </trans-unit>
    </body>
  </file>
  <file original="extensions/ms-vscode.node-debug/dist/node/extension/configurationProvider" source-language="en" target-language="ko" datatype="plaintext">
    <body>
      <trans-unit id="program.not.found.message">
        <source xml:lang="en">Cannot find a program to debug</source>
        <target state="translated">디버그할 프로그램을 찾을 수 없습니다.</target>
      </trans-unit>
      <trans-unit id="useWslDeprecationWarning.title">
        <source xml:lang="en">Attribute 'useWSL' is deprecated. Please use the 'Remote WSL' extension instead. Click [here]({0}) to learn more.</source>
        <target state="translated">'useWSL' 특성은 더 이상 사용되지 않습니다. 대신 '원격 WSL' 확장을 사용하세요. 자세한 내용을 보려면 [여기]({0})를 클릭하세요.</target>
      </trans-unit>
      <trans-unit id="useWslDeprecationWarning.doNotShowAgain">
        <source xml:lang="en">Don't Show Again</source>
        <target state="translated">다시 표시 안 함</target>
      </trans-unit>
      <trans-unit id="NVS_HOME.not.found.message">
        <source xml:lang="en">Attribute 'runtimeVersion' requires Node.js version manager 'nvs'.</source>
        <target state="translated">'runtimeVersion' 특성에는 Node.js 버전 관리자 'nvs'가 필요합니다.</target>
      </trans-unit>
      <trans-unit id="NVM_HOME.not.found.message">
        <source xml:lang="en">Attribute 'runtimeVersion' requires Node.js version manager 'nvm-windows' or 'nvs'.</source>
        <target state="translated">'runtimeVersion' 특성에는 Node.js 버전 관리자 'nvm-windows' 또는 'nvs'가 필요합니다.</target>
      </trans-unit>
      <trans-unit id="NVM_DIR.not.found.message">
        <source xml:lang="en">Attribute 'runtimeVersion' requires Node.js version manager 'nvm' or 'nvs'.</source>
        <target state="translated">'runtimeVersion' 특성에는 Node.js 버전 관리자 'nvm' 또는 'nvs'.가 필요합니다.</target>
      </trans-unit>
      <trans-unit id="runtime.version.not.found.message">
        <source xml:lang="en">Node.js version '{0}' not installed for '{1}'.</source>
        <target state="translated">Node.js 버전 '{0}'이(가) '{1}'에 대해 설치되어 있지 않습니다.</target>
      </trans-unit>
      <trans-unit id="node.launch.config.name">
        <source xml:lang="en">Launch Program</source>
        <target state="translated">프로그램 시작</target>
      </trans-unit>
      <trans-unit id="mern.starter.explanation">
        <source xml:lang="en">Launch configuration for '{0}' project created.</source>
        <target state="translated">'{0}' 프로젝트에 대한 구성 시작이
 생성되었습니다.</target>
        <note>argument contains product name without translation</note>
      </trans-unit>
      <trans-unit id="program.guessed.from.package.json.explanation">
        <source xml:lang="en">Launch configuration created based on 'package.json'.</source>
        <target state="translated">'package.json'을 기반으로 구성 시작이 생성되었습니다.</target>
      </trans-unit>
      <trans-unit id="outFiles.explanation">
        <source xml:lang="en">Adjust glob pattern(s) in the 'outFiles' attribute so that they cover the generated JavaScript.</source>
        <target state="translated">생성된 JavaScript를 포함하도록 'outFiles' 특성의 GLOB 패턴을 조정합니다. </target>
      </trans-unit>
    </body>
  </file>
  <file original="extensions/ms-vscode.node-debug/dist/node/extension/processPicker" source-language="en" target-language="ko" datatype="plaintext">
    <body>
      <trans-unit id="pid.error">
        <source xml:lang="en">Attach to process: cannot put process '{0}' in debug mode.</source>
        <target state="translated">프로세스에 연결: 디버그 모드에서 프로세스 '{0}'을 넣을 수 없습니다.</target>
      </trans-unit>
      <trans-unit id="process.id.error">
        <source xml:lang="en">Attach to process: '{0}' doesn't look like a process id.</source>
        <target state="translated">프로세스에 연결: '{0}'은(는) 프로세스 ID가 아닌 것 같습니다.</target>
      </trans-unit>
      <trans-unit id="pickNodeProcess">
        <source xml:lang="en">Pick the node.js process to attach to</source>
        <target state="translated">연결할 Node.js 프로세스 선택</target>
      </trans-unit>
      <trans-unit id="process.picker.error">
        <source xml:lang="en">Process picker failed ({0})</source>
        <target state="translated">프로세스 선택기 실패({0})</target>
      </trans-unit>
      <trans-unit id="process.id.port">
        <source xml:lang="en">process id: {0}, debug port: {1}</source>
        <target state="translated">프로세스 ID: {0}, 디버그 포트: {1}</target>
      </trans-unit>
      <trans-unit id="process.id.port.legacy">
        <source xml:lang="en">process id: {0}, debug port: {1} (legacy protocol)</source>
        <target state="translated">프로세스 ID: {0}, 디버그 포트: {1}(레거시 프로토콜)</target>
      </trans-unit>
      <trans-unit id="process.id.port.signal">
        <source xml:lang="en">process id: {0}, debug port: {1} ({2})</source>
        <target state="translated">프로세스 ID: {0}, 디버그 포트: {1}({2})</target>
      </trans-unit>
      <trans-unit id="process.id.signal">
        <source xml:lang="en">process id: {0} ({1})</source>
        <target state="translated">프로세스 ID: {0}({1})</target>
      </trans-unit>
      <trans-unit id="cannot.enable.debug.mode.error">
        <source xml:lang="en">Attach to process: cannot enable debug mode for process '{0}' ({1}).</source>
        <target state="translated">프로세스에 연결: 프로세스 '{0}'({1})에 대해 디버그 모드를 사용하도록 설정할 수 없습니다.</target>
      </trans-unit>
    </body>
  </file>
  <file original="extensions/ms-vscode.node-debug/dist/node/extension/protocolDetection" source-language="en" target-language="ko" datatype="plaintext">
    <body>
      <trans-unit id="protocol.switch.legacy.detected">
        <source xml:lang="en">Debugging with legacy protocol because it was detected.</source>
        <target state="translated">레거시 프로토콜이 검색되었기 때문에 레거시 프로토콜로 디버그합니다.</target>
      </trans-unit>
      <trans-unit id="protocol.switch.unknown.error">
        <source xml:lang="en">Debugging with inspector protocol because Node.js version could not be determined ({0})</source>
        <target state="translated">Node.js 버전을 확인할 수 없으므로 검사기 프로토콜로 디버그합니다({0}).</target>
      </trans-unit>
      <trans-unit id="protocol.switch.legacy.version">
        <source xml:lang="en">Debugging with legacy protocol because Node.js {0} was detected.</source>
        <target state="translated">노드 {0}이(가) 감지되었으므로 레거시 프로토콜로 디버그합니다.</target>
      </trans-unit>
    </body>
  </file>
</xliff>