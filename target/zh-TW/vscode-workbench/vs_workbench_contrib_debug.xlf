<?xml version="1.0" encoding="utf-8"?>
<xliff version="1.2" xmlns="urn:oasis:names:tc:xliff:document:1.2">
  <file original="src/vs/workbench/contrib/debug/common/debug" source-language="en" target-language="zh-Hant" datatype="plaintext">
    <body>
      <trans-unit id="internalConsoleOptions">
        <source xml:lang="en">Controls when the internal debug console should open.</source>
        <target state="translated">控制何時打開內部偵錯主控台。</target>
      </trans-unit>
    </body>
  </file>
  <file original="src/vs/workbench/contrib/debug/browser/callStackEditorContribution" source-language="en" target-language="zh-Hant" datatype="plaintext">
    <body>
      <trans-unit id="topStackFrameLineHighlight">
        <source xml:lang="en">Background color for the highlight of line at the top stack frame position.</source>
        <target state="translated">頂部堆疊框架位置處行的醒目提示背景色彩。</target>
      </trans-unit>
      <trans-unit id="focusedStackFrameLineHighlight">
        <source xml:lang="en">Background color for the highlight of line at focused stack frame position.</source>
        <target state="translated">焦點堆疊框架位置處行的醒目提示背景色彩。</target>
      </trans-unit>
    </body>
  </file>
  <file original="src/vs/workbench/contrib/debug/browser/debugViewlet" source-language="en" target-language="zh-Hant" datatype="plaintext">
    <body>
      <trans-unit id="startAdditionalSession">
        <source xml:lang="en">Start Additional Session</source>
        <target state="translated">啟動附加工作階段</target>
      </trans-unit>
      <trans-unit id="toggleDebugPanel">
        <source xml:lang="en">Debug Console</source>
        <target state="translated">偵錯主控台</target>
      </trans-unit>
    </body>
  </file>
  <file original="src/vs/workbench/contrib/debug/browser/debugEditorContribution" source-language="en" target-language="zh-Hant" datatype="plaintext">
    <body>
      <trans-unit id="addConfiguration">
        <source xml:lang="en">Add Configuration...</source>
        <target state="translated">新增設定...</target>
      </trans-unit>
    </body>
  </file>
  <file original="src/vs/workbench/contrib/debug/browser/breakpointEditorContribution" source-language="en" target-language="zh-Hant" datatype="plaintext">
    <body>
      <trans-unit id="logPoint">
        <source xml:lang="en">Logpoint</source>
        <target state="translated">記錄點</target>
      </trans-unit>
      <trans-unit id="breakpoint">
        <source xml:lang="en">Breakpoint</source>
        <target state="translated">中斷點</target>
      </trans-unit>
      <trans-unit id="breakpointHasConditionDisabled">
        <source xml:lang="en">This {0} has a {1} that will get lost on remove. Consider enabling the {0} instead.</source>
        <target state="translated">此 {0} 具有移除時會遺失的 {1}。請考慮改為啟用 {0}。</target>
      </trans-unit>
      <trans-unit id="message">
        <source xml:lang="en">message</source>
        <target state="translated">訊息</target>
      </trans-unit>
      <trans-unit id="condition">
        <source xml:lang="en">condition</source>
        <target state="translated">條件</target>
      </trans-unit>
      <trans-unit id="breakpointHasConditionEnabled">
        <source xml:lang="en">This {0} has a {1} that will get lost on remove. Consider disabling the {0} instead.</source>
        <target state="translated">此 {0} 具有會在移除時消失的 {1}。請考慮改為停用 {0}。</target>
      </trans-unit>
      <trans-unit id="removeLogPoint">
        <source xml:lang="en">Remove {0}</source>
        <target state="translated">移除 {0}</target>
      </trans-unit>
      <trans-unit id="disableLogPoint">
        <source xml:lang="en">{0} {1}</source>
        <target state="translated">{0} {1}</target>
      </trans-unit>
      <trans-unit id="disable">
        <source xml:lang="en">Disable</source>
        <target state="translated">停用</target>
      </trans-unit>
      <trans-unit id="enable">
        <source xml:lang="en">Enable</source>
        <target state="translated">啟用</target>
      </trans-unit>
      <trans-unit id="cancel">
        <source xml:lang="en">Cancel</source>
        <target state="translated">取消</target>
      </trans-unit>
      <trans-unit id="removeBreakpoint">
        <source xml:lang="en">Remove {0}</source>
        <target state="translated">移除 {0}</target>
      </trans-unit>
      <trans-unit id="editBreakpoint">
        <source xml:lang="en">Edit {0}...</source>
        <target state="translated">編輯 {0}...</target>
      </trans-unit>
      <trans-unit id="disableBreakpoint">
        <source xml:lang="en">Disable {0}</source>
        <target state="translated">停用 {0}</target>
      </trans-unit>
      <trans-unit id="enableBreakpoint">
        <source xml:lang="en">Enable {0}</source>
        <target state="translated">啟用 {0}</target>
      </trans-unit>
      <trans-unit id="removeBreakpoints">
        <source xml:lang="en">Remove Breakpoints</source>
        <target state="translated">移除中斷點</target>
      </trans-unit>
      <trans-unit id="removeInlineBreakpointOnColumn">
        <source xml:lang="en">Remove Inline Breakpoint on Column {0}</source>
        <target state="translated">移除資料行 {0} 的內嵌中斷點</target>
      </trans-unit>
      <trans-unit id="removeLineBreakpoint">
        <source xml:lang="en">Remove Line Breakpoint</source>
        <target state="translated">移除行中斷點</target>
      </trans-unit>
      <trans-unit id="editBreakpoints">
        <source xml:lang="en">Edit Breakpoints</source>
        <target state="translated">編輯中斷點</target>
      </trans-unit>
      <trans-unit id="editInlineBreakpointOnColumn">
        <source xml:lang="en">Edit Inline Breakpoint on Column {0}</source>
        <target state="translated">編輯資料行 {0} 的內嵌中斷點</target>
      </trans-unit>
      <trans-unit id="editLineBrekapoint">
        <source xml:lang="en">Edit Line Breakpoint</source>
        <target state="translated">編輯行中斷點</target>
      </trans-unit>
      <trans-unit id="enableDisableBreakpoints">
        <source xml:lang="en">Enable/Disable Breakpoints</source>
        <target state="translated">啟用/停用中斷點</target>
      </trans-unit>
      <trans-unit id="disableInlineColumnBreakpoint">
        <source xml:lang="en">Disable Inline Breakpoint on Column {0}</source>
        <target state="translated">停用資料行 {0} 的內嵌中斷點</target>
      </trans-unit>
      <trans-unit id="disableBreakpointOnLine">
        <source xml:lang="en">Disable Line Breakpoint</source>
        <target state="translated">停用行中斷點</target>
      </trans-unit>
      <trans-unit id="enableBreakpoints">
        <source xml:lang="en">Enable Inline Breakpoint on Column {0}</source>
        <target state="translated">啟用資料行 {0} 的內嵌中斷點</target>
      </trans-unit>
      <trans-unit id="enableBreakpointOnLine">
        <source xml:lang="en">Enable Line Breakpoint</source>
        <target state="translated">啟用行中斷點</target>
      </trans-unit>
      <trans-unit id="addBreakpoint">
        <source xml:lang="en">Add Breakpoint</source>
        <target state="translated">加入中斷點</target>
      </trans-unit>
      <trans-unit id="addConditionalBreakpoint">
        <source xml:lang="en">Add Conditional Breakpoint...</source>
        <target state="translated">新增條件中斷點...</target>
      </trans-unit>
      <trans-unit id="addLogPoint">
        <source xml:lang="en">Add Logpoint...</source>
        <target state="translated">新增記錄點...</target>
      </trans-unit>
      <trans-unit id="debugIcon.breakpointForeground">
        <source xml:lang="en">Icon color for breakpoints.</source>
        <target state="translated">中斷點的圖示顏色。</target>
      </trans-unit>
      <trans-unit id="debugIcon.breakpointDisabledForeground">
        <source xml:lang="en">Icon color for disabled breakpoints.</source>
        <target state="translated">已停用中斷點的圖示色彩。</target>
      </trans-unit>
      <trans-unit id="debugIcon.breakpointUnverifiedForeground">
        <source xml:lang="en">Icon color for unverified breakpoints.</source>
        <target state="translated">未驗證中斷點的圖示顏色。</target>
      </trans-unit>
      <trans-unit id="debugIcon.breakpointCurrentStackframeForeground">
        <source xml:lang="en">Icon color for the current breakpoint stack frame.</source>
        <target state="translated">目前中斷點堆疊框架的圖示色彩。</target>
      </trans-unit>
      <trans-unit id="debugIcon.breakpointStackframeForeground">
        <source xml:lang="en">Icon color for all breakpoint stack frames.</source>
        <target state="translated">所有中斷點堆疊框架的圖示色彩。</target>
      </trans-unit>
    </body>
  </file>
  <file original="src/vs/workbench/contrib/debug/browser/debug.contribution" source-language="en" target-language="zh-Hant" datatype="plaintext">
    <body>
      <trans-unit id="toggleDebugViewlet">
        <source xml:lang="en">Show Run and Debug</source>
        <target state="translated">顯示執行與偵錯</target>
      </trans-unit>
      <trans-unit id="run">
        <source xml:lang="en">Run</source>
        <target state="translated">執行</target>
      </trans-unit>
      <trans-unit id="debugPanel">
        <source xml:lang="en">Debug Console</source>
        <target state="translated">偵錯主控台</target>
        <note>Debug is a noun in this context, not a verb.</note>
      </trans-unit>
      <trans-unit id="variables">
        <source xml:lang="en">Variables</source>
        <target state="translated">變數</target>
      </trans-unit>
      <trans-unit id="watch">
        <source xml:lang="en">Watch</source>
        <target state="translated">監看</target>
      </trans-unit>
      <trans-unit id="callStack">
        <source xml:lang="en">Call Stack</source>
        <target state="translated">呼叫堆疊</target>
      </trans-unit>
      <trans-unit id="breakpoints">
        <source xml:lang="en">Breakpoints</source>
        <target state="translated">中斷點</target>
      </trans-unit>
      <trans-unit id="loadedScripts">
        <source xml:lang="en">Loaded Scripts</source>
        <target state="translated">已載入的指令碼</target>
      </trans-unit>
      <trans-unit id="view">
        <source xml:lang="en">View</source>
        <target state="translated">檢視</target>
      </trans-unit>
      <trans-unit id="debugCategory">
        <source xml:lang="en">Debug</source>
        <target state="translated">偵錯</target>
      </trans-unit>
      <trans-unit id="runCategory">
        <source xml:lang="en">Run</source>
        <target state="translated">執行</target>
      </trans-unit>
      <trans-unit id="terminateThread">
        <source xml:lang="en">Terminate Thread</source>
        <target state="translated">終止執行緒</target>
      </trans-unit>
      <trans-unit id="debugFocusConsole">
        <source xml:lang="en">Focus on Debug Console View</source>
        <target state="translated">聚焦在 [偵錯主控台] 檢視</target>
        <note>Debug is a noun in this context, not a verb.</note>
      </trans-unit>
      <trans-unit id="jumpToCursor">
        <source xml:lang="en">Jump to Cursor</source>
        <target state="translated">跳至資料指標</target>
      </trans-unit>
      <trans-unit id="inlineBreakpoint">
        <source xml:lang="en">Inline Breakpoint</source>
        <target state="translated">內嵌中斷點</target>
      </trans-unit>
      <trans-unit id="startDebugPlaceholder">
        <source xml:lang="en">Type the name of a launch configuration to run.</source>
        <target state="translated">鍵入要執行的啟動組態名稱。</target>
      </trans-unit>
      <trans-unit id="startDebuggingHelp">
        <source xml:lang="en">Start Debugging</source>
        <target state="translated">開始偵錯</target>
      </trans-unit>
      <trans-unit id="debugConfigurationTitle">
        <source xml:lang="en">Debug</source>
        <target state="translated">偵錯</target>
      </trans-unit>
      <trans-unit id="allowBreakpointsEverywhere">
        <source xml:lang="en">Allow setting breakpoints in any file.</source>
        <target state="translated">允許在任何檔案中設定中斷點。</target>
        <note>This is the description for a setting</note>
      </trans-unit>
      <trans-unit id="openExplorerOnEnd">
        <source xml:lang="en">Automatically open the explorer view at the end of a debug session.</source>
        <target state="translated">在偵錯工作階段結束時自動開啟總管檢視。</target>
        <note>This is the description for a setting</note>
      </trans-unit>
      <trans-unit id="inlineValues">
        <source xml:lang="en">Show variable values inline in editor while debugging.</source>
        <target state="translated">在偵錯時於編輯器以內嵌方式顯示變數值</target>
        <note>This is the description for a setting</note>
      </trans-unit>
      <trans-unit id="toolBarLocation">
        <source xml:lang="en">Controls the location of the debug toolbar. Either `floating` in all views, `docked` in the debug view, or `hidden`.</source>
        <target state="translated">控制偵錯工具列的位置。可以是在所有檢視中 `floating`; 在偵錯檢視中 `docked`; 或者 `hidden`。</target>
        <note>This is the description for a setting</note>
      </trans-unit>
      <trans-unit id="never">
        <source xml:lang="en">Never show debug in status bar</source>
        <target state="translated">一律不在狀態列顯示偵錯</target>
      </trans-unit>
      <trans-unit id="always">
        <source xml:lang="en">Always show debug in status bar</source>
        <target state="translated">遠用在狀態列中顯示偵錯</target>
      </trans-unit>
      <trans-unit id="onFirstSessionStart">
        <source xml:lang="en">Show debug in status bar only after debug was started for the first time</source>
        <target state="translated">只有第一次啟動偵錯後才在狀態列中顯示偵錯</target>
      </trans-unit>
      <trans-unit id="showInStatusBar">
        <source xml:lang="en">Controls when the debug status bar should be visible.</source>
        <target state="translated">控制何時應該顯示偵錯狀態列。</target>
        <note>This is the description for a setting</note>
      </trans-unit>
      <trans-unit id="debug.console.closeOnEnd">
        <source xml:lang="en">Controls if the debug console should be automatically closed when the debug session ends.</source>
        <target state="translated">控制偵錯主控台是否應在偵錯工作階段結束時自動關閉。</target>
      </trans-unit>
      <trans-unit id="openDebug">
        <source xml:lang="en">Controls when the debug view should open.</source>
        <target state="translated">控制何時應該開啟偵錯檢視。 </target>
      </trans-unit>
      <trans-unit id="enableAllHovers">
        <source xml:lang="en">Controls whether the non-debug hovers should be enabled while debugging. When enabled the hover providers will be called to provide a hover. Regular hovers will not be shown even if this setting is enabled.</source>
        <target state="translated">控制偵錯期間是否應啟用非偵錯暫留。若啟用，會呼叫暫留提供者提供暫留。即使啟用此設定，一般暫留也不會顯示。</target>
        <note>This is the description for a setting</note>
      </trans-unit>
      <trans-unit id="showSubSessionsInToolBar">
        <source xml:lang="en">Controls whether the debug sub-sessions are shown in the debug tool bar. When this setting is false the stop command on a sub-session will also stop the parent session.</source>
        <target state="translated">控制偵錯子工作階段是否顯示在偵錯工具列中。當此設定為 false 時，子工作階段上的停止命令也會停止父工作階段。</target>
        <note>This is the description for a setting</note>
      </trans-unit>
      <trans-unit id="debug.console.fontSize">
        <source xml:lang="en">Controls the font size in pixels in the debug console.</source>
        <target state="translated">在偵錯控制台中控制字型大小 (像素)。</target>
      </trans-unit>
      <trans-unit id="debug.console.fontFamily">
        <source xml:lang="en">Controls the font family in the debug console.</source>
        <target state="translated">在偵錯主控台中控制字型家族。</target>
      </trans-unit>
      <trans-unit id="debug.console.lineHeight">
        <source xml:lang="en">Controls the line height in pixels in the debug console. Use 0 to compute the line height from the font size.</source>
        <target state="translated">在偵錯主控台中控制行高 (像素)。使用 0 可從字型大小計算行高。</target>
      </trans-unit>
      <trans-unit id="debug.console.wordWrap">
        <source xml:lang="en">Controls if the lines should wrap in the debug console.</source>
        <target state="translated">控制偵錯主控台中是否應自動換行。</target>
      </trans-unit>
      <trans-unit id="debug.console.historySuggestions">
        <source xml:lang="en">Controls if the debug console should suggest previously typed input.</source>
        <target state="translated">控制偵錯主控台是否應建議上一個鍵入的輸入。</target>
      </trans-unit>
      <trans-unit id="launch">
        <source xml:lang="en">Global debug launch configuration. Should be used as an alternative to 'launch.json' that is shared across workspaces.</source>
        <target state="translated">全域偵錯啟動組態。應用來替代在工作區間共用的 'launch.json’。</target>
        <note>This is the description for a setting</note>
      </trans-unit>
      <trans-unit id="debug.focusWindowOnBreak">
        <source xml:lang="en">Controls whether the workbench window should be focused when the debugger breaks.</source>
        <target state="translated">控制當偵錯工具中斷時是否應以工作台視窗作為焦點。</target>
      </trans-unit>
      <trans-unit id="debugAnyway">
        <source xml:lang="en">Ignore task errors and start debugging.</source>
        <target state="translated">忽略任務錯誤並開始除錯。</target>
      </trans-unit>
      <trans-unit id="showErrors">
        <source xml:lang="en">Show the Problems view and do not start debugging.</source>
        <target state="translated">顯示 [問題] 檢視，但不開始偵錯。</target>
      </trans-unit>
      <trans-unit id="prompt">
        <source xml:lang="en">Prompt user.</source>
        <target state="translated">提示使用者。</target>
      </trans-unit>
      <trans-unit id="cancel">
        <source xml:lang="en">Cancel debugging.</source>
        <target state="translated">取消偵錯。</target>
      </trans-unit>
      <trans-unit id="debug.onTaskErrors">
        <source xml:lang="en">Controls what to do when errors are encountered after running a preLaunchTask.</source>
        <target state="translated">控制執行 preLaunchTask 後發生錯誤時該如何。</target>
      </trans-unit>
      <trans-unit id="showBreakpointsInOverviewRuler">
        <source xml:lang="en">Controls whether breakpoints should be shown in the overview ruler.</source>
        <target state="translated">控制中斷點是否應顯示在概觀尺規中。</target>
        <note>This is the description for a setting</note>
      </trans-unit>
      <trans-unit id="showInlineBreakpointCandidates">
        <source xml:lang="en">Controls whether inline breakpoints candidate decorations should be shown in the editor while debugging.</source>
        <target state="translated">控制偵錯時是否要在編輯器中顯示內嵌中斷點候補裝飾。</target>
        <note>This is the description for a setting</note>
      </trans-unit>
      <trans-unit id="stepBackDebug">
        <source xml:lang="en">Step Back</source>
        <target state="translated">倒退</target>
      </trans-unit>
      <trans-unit id="reverseContinue">
        <source xml:lang="en">Reverse</source>
        <target state="translated">反向</target>
      </trans-unit>
      <trans-unit id="restartFrame">
        <source xml:lang="en">Restart Frame</source>
        <target state="translated">重新啟動框架</target>
      </trans-unit>
      <trans-unit id="copyStackTrace">
        <source xml:lang="en">Copy Call Stack</source>
        <target state="translated">複製呼叫堆疊</target>
      </trans-unit>
      <trans-unit id="miViewRun">
        <source xml:lang="en">&amp;&amp;Run</source>
        <target state="translated">執行(&amp;&amp;R)</target>
        <note>&amp;&amp; denotes a mnemonic</note>
      </trans-unit>
      <trans-unit id="miToggleDebugConsole">
        <source xml:lang="en">De&amp;&amp;bug Console</source>
        <target state="translated">偵錯主控台(&amp;&amp;B)</target>
        <note>&amp;&amp; denotes a mnemonic</note>
      </trans-unit>
      <trans-unit id="miStartDebugging">
        <source xml:lang="en">&amp;&amp;Start Debugging</source>
        <target state="translated">啟動偵錯(&amp;&amp;S)</target>
        <note>&amp;&amp; denotes a mnemonic</note>
      </trans-unit>
      <trans-unit id="miRun">
        <source xml:lang="en">Run &amp;&amp;Without Debugging</source>
        <target state="translated">執行但不進行偵錯(&amp;&amp;W)</target>
        <note>&amp;&amp; denotes a mnemonic</note>
      </trans-unit>
      <trans-unit id="miStopDebugging">
        <source xml:lang="en">&amp;&amp;Stop Debugging</source>
        <target state="translated">停止偵錯(&amp;&amp;S)</target>
        <note>&amp;&amp; denotes a mnemonic</note>
      </trans-unit>
      <trans-unit id="miRestart Debugging">
        <source xml:lang="en">&amp;&amp;Restart Debugging</source>
        <target state="translated">重新啟動偵錯(&amp;&amp;R)</target>
        <note>&amp;&amp; denotes a mnemonic</note>
      </trans-unit>
      <trans-unit id="miOpenConfigurations">
        <source xml:lang="en">Open &amp;&amp;Configurations</source>
        <target state="translated">開啟設定(&amp;&amp;C)</target>
        <note>&amp;&amp; denotes a mnemonic</note>
      </trans-unit>
      <trans-unit id="miAddConfiguration">
        <source xml:lang="en">A&amp;&amp;dd Configuration...</source>
        <target state="translated">新增組態(&amp;&amp;D)...</target>
        <note>&amp;&amp; denotes a mnemonic</note>
      </trans-unit>
      <trans-unit id="miStepOver">
        <source xml:lang="en">Step &amp;&amp;Over</source>
        <target state="translated">不進入函式(&amp;&amp;O)</target>
        <note>&amp;&amp; denotes a mnemonic</note>
      </trans-unit>
      <trans-unit id="miStepInto">
        <source xml:lang="en">Step &amp;&amp;Into</source>
        <target state="translated">逐步執行(&amp;&amp;I)</target>
        <note>&amp;&amp; denotes a mnemonic</note>
      </trans-unit>
      <trans-unit id="miStepOut">
        <source xml:lang="en">Step O&amp;&amp;ut</source>
        <target state="translated">跳離函式(&amp;&amp;U)</target>
        <note>&amp;&amp; denotes a mnemonic</note>
      </trans-unit>
      <trans-unit id="miContinue">
        <source xml:lang="en">&amp;&amp;Continue</source>
        <target state="translated">繼續(&amp;&amp;C)</target>
        <note>&amp;&amp; denotes a mnemonic</note>
      </trans-unit>
      <trans-unit id="miToggleBreakpoint">
        <source xml:lang="en">Toggle &amp;&amp;Breakpoint</source>
        <target state="translated">切換中斷點(&amp;&amp;B)</target>
        <note>&amp;&amp; denotes a mnemonic</note>
      </trans-unit>
      <trans-unit id="miConditionalBreakpoint">
        <source xml:lang="en">&amp;&amp;Conditional Breakpoint...</source>
        <target state="translated">條件式中斷點(&amp;&amp;C)...</target>
        <note>&amp;&amp; denotes a mnemonic</note>
      </trans-unit>
      <trans-unit id="miInlineBreakpoint">
        <source xml:lang="en">Inline Breakp&amp;&amp;oint</source>
        <target state="translated">內嵌中斷點(&amp;&amp;O)</target>
        <note>&amp;&amp; denotes a mnemonic</note>
      </trans-unit>
      <trans-unit id="miFunctionBreakpoint">
        <source xml:lang="en">&amp;&amp;Function Breakpoint...</source>
        <target state="translated">函式中斷點(&amp;&amp;F)…</target>
        <note>&amp;&amp; denotes a mnemonic</note>
      </trans-unit>
      <trans-unit id="miLogPoint">
        <source xml:lang="en">&amp;&amp;Logpoint...</source>
        <target state="translated">記錄點(&amp;&amp;L)...</target>
        <note>&amp;&amp; denotes a mnemonic</note>
      </trans-unit>
      <trans-unit id="miNewBreakpoint">
        <source xml:lang="en">&amp;&amp;New Breakpoint</source>
        <target state="translated">新增中斷點(&amp;&amp;N)</target>
        <note>&amp;&amp; denotes a mnemonic</note>
      </trans-unit>
      <trans-unit id="miEnableAllBreakpoints">
        <source xml:lang="en">&amp;&amp;Enable All Breakpoints</source>
        <target state="translated">啟用所有中斷點(&amp;&amp;E)</target>
        <note>&amp;&amp; denotes a mnemonic</note>
      </trans-unit>
      <trans-unit id="miDisableAllBreakpoints">
        <source xml:lang="en">Disable A&amp;&amp;ll Breakpoints</source>
        <target state="translated">停用所有中斷點(&amp;&amp;L)</target>
        <note>&amp;&amp; denotes a mnemonic</note>
      </trans-unit>
      <trans-unit id="miRemoveAllBreakpoints">
        <source xml:lang="en">Remove &amp;&amp;All Breakpoints</source>
        <target state="translated">移除所有中斷點(&amp;&amp;A)</target>
        <note>&amp;&amp; denotes a mnemonic</note>
      </trans-unit>
      <trans-unit id="miInstallAdditionalDebuggers">
        <source xml:lang="en">&amp;&amp;Install Additional Debuggers...</source>
        <target state="translated">安裝其他偵錯工具(&amp;&amp;I)...</target>
        <note>&amp;&amp; denotes a mnemonic</note>
      </trans-unit>
    </body>
  </file>
  <file original="src/vs/workbench/contrib/debug/browser/repl" source-language="en" target-language="zh-Hant" datatype="plaintext">
    <body>
      <trans-unit id="replAriaLabel">
        <source xml:lang="en">Read Eval Print Loop Panel</source>
        <target state="translated">「讀取、求值、輸出」迴圈面板</target>
      </trans-unit>
      <trans-unit id="debugConsole">
        <source xml:lang="en">Debug Console</source>
        <target state="translated">偵錯主控台</target>
      </trans-unit>
      <trans-unit id="copy">
        <source xml:lang="en">Copy</source>
        <target state="translated">複製</target>
      </trans-unit>
      <trans-unit id="copyAll">
        <source xml:lang="en">Copy All</source>
        <target state="translated">全部複製</target>
      </trans-unit>
      <trans-unit id="collapse">
        <source xml:lang="en">Collapse All</source>
        <target state="translated">全部摺疊</target>
      </trans-unit>
      <trans-unit id="startDebugFirst">
        <source xml:lang="en">Please start a debug session to evaluate expressions</source>
        <target state="translated">請啟動偵錯工作階段以評估運算式</target>
      </trans-unit>
      <trans-unit id="actions.repl.acceptInput">
        <source xml:lang="en">REPL Accept Input</source>
        <target state="translated">REPL 接受輸入</target>
        <note>Apply input from the debug console input box</note>
      </trans-unit>
      <trans-unit id="repl.action.filter">
        <source xml:lang="en">REPL Focus Content to Filter</source>
        <target state="translated">REPL 將內容聚焦至篩選</target>
      </trans-unit>
      <trans-unit id="actions.repl.copyAll">
        <source xml:lang="en">Debug: Console Copy All</source>
        <target state="translated">偵錯: 主控台全部複製</target>
      </trans-unit>
      <trans-unit id="selectRepl">
        <source xml:lang="en">Select Debug Console</source>
        <target state="translated">選取偵錯主控台</target>
      </trans-unit>
      <trans-unit id="clearRepl">
        <source xml:lang="en">Clear Console</source>
        <target state="translated">清除主控台</target>
      </trans-unit>
      <trans-unit id="debugConsoleCleared">
        <source xml:lang="en">Debug console was cleared</source>
        <target state="translated">偵錯主控台已清除</target>
      </trans-unit>
    </body>
  </file>
  <file original="src/vs/workbench/contrib/debug/browser/welcomeView" source-language="en" target-language="zh-Hant" datatype="plaintext">
    <body>
      <trans-unit id="run">
        <source xml:lang="en">Run</source>
        <target state="translated">執行</target>
      </trans-unit>
      <trans-unit id="openAFileWhichCanBeDebugged">
        <source xml:lang="en">[Open a file](command:{0}) which can be debugged or run.</source>
        <target state="translated">[開啟檔案](command:{0})，該檔案可供偵錯或執行。</target>
        <note>Please do not translate the word "commmand", it is part of our internal syntax which must not change</note>
      </trans-unit>
      <trans-unit id="runAndDebugAction">
        <source xml:lang="en">[Run and Debug{0}](command:{1})</source>
        <target state="translated">[執行並偵錯{0}](command:{1})</target>
        <note>Please do not translate the word "commmand", it is part of our internal syntax which must not change</note>
      </trans-unit>
      <trans-unit id="customizeRunAndDebug">
        <source xml:lang="en">To customize Run and Debug [create a launch.json file](command:{0}).</source>
        <target state="translated">如果要自訂執行並偵錯，請[建立 launch.json 檔案](command:{0})。</target>
        <note>Please do not translate the word "commmand", it is part of our internal syntax which must not change</note>
      </trans-unit>
      <trans-unit id="customizeRunAndDebugOpenFolder">
        <source xml:lang="en">To customize Run and Debug, [open a folder](command:{0}) and create a launch.json file.</source>
        <target state="translated">如果要自訂執行並偵錯，請[開啟資料夾](command:{0}) 並建立 launch.json 檔案。</target>
        <note>Please do not translate the word "commmand", it is part of our internal syntax which must not change</note>
      </trans-unit>
    </body>
  </file>
  <file original="src/vs/workbench/contrib/debug/browser/debugActionViewItems" source-language="en" target-language="zh-Hant" datatype="plaintext">
    <body>
      <trans-unit id="debugLaunchConfigurations">
        <source xml:lang="en">Debug Launch Configurations</source>
        <target state="translated">對啟動組態偵錯</target>
      </trans-unit>
      <trans-unit id="noConfigurations">
        <source xml:lang="en">No Configurations</source>
        <target state="translated">沒有組態</target>
      </trans-unit>
      <trans-unit id="addConfigTo">
        <source xml:lang="en">Add Config ({0})...</source>
        <target state="translated">新增組態 ({0})...</target>
      </trans-unit>
      <trans-unit id="addConfiguration">
        <source xml:lang="en">Add Configuration...</source>
        <target state="translated">新增設定...</target>
      </trans-unit>
      <trans-unit id="debugSession">
        <source xml:lang="en">Debug Session</source>
        <target state="translated">對工作階段偵錯</target>
      </trans-unit>
    </body>
  </file>
  <file original="src/vs/workbench/contrib/debug/browser/exceptionWidget" source-language="en" target-language="zh-Hant" datatype="plaintext">
    <body>
      <trans-unit id="debugExceptionWidgetBorder">
        <source xml:lang="en">Exception widget border color.</source>
        <target state="translated">例外狀況小工具的框線色彩。</target>
      </trans-unit>
      <trans-unit id="debugExceptionWidgetBackground">
        <source xml:lang="en">Exception widget background color.</source>
        <target state="translated">例外狀況小工具的背景色彩。</target>
      </trans-unit>
      <trans-unit id="exceptionThrownWithId">
        <source xml:lang="en">Exception has occurred: {0}</source>
        <target state="translated">發生例外狀況: {0}</target>
      </trans-unit>
      <trans-unit id="exceptionThrown">
        <source xml:lang="en">Exception has occurred.</source>
        <target state="translated">發生了例外狀況</target>
      </trans-unit>
    </body>
  </file>
  <file original="src/vs/workbench/contrib/debug/browser/debugToolBar" source-language="en" target-language="zh-Hant" datatype="plaintext">
    <body>
      <trans-unit id="debugToolBarBackground">
        <source xml:lang="en">Debug toolbar background color.</source>
        <target state="translated">偵錯工具列背景色彩。</target>
      </trans-unit>
      <trans-unit id="debugToolBarBorder">
        <source xml:lang="en">Debug toolbar border color.</source>
        <target state="translated">偵錯工具列的邊框色彩</target>
      </trans-unit>
      <trans-unit id="debugIcon.startForeground">
        <source xml:lang="en">Debug toolbar icon for start debugging.</source>
        <target state="translated">用於開始偵錯的偵錯工具列圖示。</target>
      </trans-unit>
      <trans-unit id="debugIcon.pauseForeground">
        <source xml:lang="en">Debug toolbar icon for pause.</source>
        <target state="translated">用於暫停的偵錯工具列圖示。</target>
      </trans-unit>
      <trans-unit id="debugIcon.stopForeground">
        <source xml:lang="en">Debug toolbar icon for stop.</source>
        <target state="translated">用於停止的偵錯工具列圖示。</target>
      </trans-unit>
      <trans-unit id="debugIcon.disconnectForeground">
        <source xml:lang="en">Debug toolbar icon for disconnect.</source>
        <target state="translated">用於中斷連線的偵錯工具列圖示。</target>
      </trans-unit>
      <trans-unit id="debugIcon.restartForeground">
        <source xml:lang="en">Debug toolbar icon for restart.</source>
        <target state="translated">用於重新啟動的偵錯工具列圖示。</target>
      </trans-unit>
      <trans-unit id="debugIcon.stepOverForeground">
        <source xml:lang="en">Debug toolbar icon for step over.</source>
        <target state="translated">用於逐程序的偵錯工具列圖示。</target>
      </trans-unit>
      <trans-unit id="debugIcon.stepIntoForeground">
        <source xml:lang="en">Debug toolbar icon for step into.</source>
        <target state="translated">用於逐步執行的偵錯工具列圖示。</target>
      </trans-unit>
      <trans-unit id="debugIcon.stepOutForeground">
        <source xml:lang="en">Debug toolbar icon for step over.</source>
        <target state="translated">用於逐程序的偵錯工具列圖示。</target>
      </trans-unit>
      <trans-unit id="debugIcon.continueForeground">
        <source xml:lang="en">Debug toolbar icon for continue.</source>
        <target state="translated">用於繼續的偵錯工具列圖示。</target>
      </trans-unit>
      <trans-unit id="debugIcon.stepBackForeground">
        <source xml:lang="en">Debug toolbar icon for step back.</source>
        <target state="translated">逐步返回的偵錯工具列圖示。</target>
      </trans-unit>
    </body>
  </file>
  <file original="src/vs/workbench/contrib/debug/browser/statusbarColorProvider" source-language="en" target-language="zh-Hant" datatype="plaintext">
    <body>
      <trans-unit id="statusBarDebuggingBackground">
        <source xml:lang="en">Status bar background color when a program is being debugged. The status bar is shown in the bottom of the window</source>
        <target state="translated">對程式執行偵錯時狀態列的背景色彩。狀態列會顯示在視窗的底部</target>
      </trans-unit>
      <trans-unit id="statusBarDebuggingForeground">
        <source xml:lang="en">Status bar foreground color when a program is being debugged. The status bar is shown in the bottom of the window</source>
        <target state="translated">對程式執行偵錯時狀態列的前景色彩。狀態列會顯示在視窗的底部</target>
      </trans-unit>
      <trans-unit id="statusBarDebuggingBorder">
        <source xml:lang="en">Status bar border color separating to the sidebar and editor when a program is being debugged. The status bar is shown in the bottom of the window</source>
        <target state="translated">正在偵錯用以分隔資訊看板與編輯器的狀態列框線色彩。狀態列會顯示在視窗的底部。 </target>
      </trans-unit>
    </body>
  </file>
  <file original="src/vs/workbench/contrib/debug/common/debugContentProvider" source-language="en" target-language="zh-Hant" datatype="plaintext">
    <body>
      <trans-unit id="unable">
        <source xml:lang="en">Unable to resolve the resource without a debug session</source>
        <target state="translated">不使用偵錯工作階段無法解析此資源</target>
      </trans-unit>
      <trans-unit id="canNotResolveSourceWithError">
        <source xml:lang="en">Could not load source '{0}': {1}.</source>
        <target state="translated">無法載入來源 '{0}': {1}。</target>
      </trans-unit>
      <trans-unit id="canNotResolveSource">
        <source xml:lang="en">Could not load source '{0}'.</source>
        <target state="translated">無法載入來源 '{0}'。</target>
      </trans-unit>
    </body>
  </file>
  <file original="src/vs/workbench/contrib/debug/browser/debugStatus" source-language="en" target-language="zh-Hant" datatype="plaintext">
    <body>
      <trans-unit id="status.debug">
        <source xml:lang="en">Debug</source>
        <target state="translated">偵錯</target>
      </trans-unit>
      <trans-unit id="selectAndStartDebug">
        <source xml:lang="en">Select and start debug configuration</source>
        <target state="translated">選取並啟動偵錯組態</target>
      </trans-unit>
    </body>
  </file>
  <file original="src/vs/workbench/contrib/debug/browser/debugQuickAccess" source-language="en" target-language="zh-Hant" datatype="plaintext">
    <body>
      <trans-unit id="customizeLaunchConfig">
        <source xml:lang="en">Configure Launch Configuration</source>
        <target state="translated">設定啟動組態</target>
      </trans-unit>
      <trans-unit id="addConfigTo">
        <source xml:lang="en">Add Config ({0})...</source>
        <target state="translated">新增組態 ({0})...</target>
      </trans-unit>
      <trans-unit id="addConfiguration">
        <source xml:lang="en">Add Configuration...</source>
        <target state="translated">新增設定...</target>
      </trans-unit>
    </body>
  </file>
  <file original="src/vs/workbench/contrib/debug/browser/debugHover" source-language="en" target-language="zh-Hant" datatype="plaintext">
    <body>
      <trans-unit id="treeAriaLabel">
        <source xml:lang="en">Debug Hover</source>
        <target state="translated">偵錯暫留</target>
      </trans-unit>
      <trans-unit id="variableAriaLabel">
        <source xml:lang="en">{0} value {1}, variables, debug</source>
        <target state="translated">{0} 值 {1}，變數，偵錯</target>
      </trans-unit>
    </body>
  </file>
  <file original="src/vs/workbench/contrib/debug/browser/debugActions" source-language="en" target-language="zh-Hant" datatype="plaintext">
    <body>
      <trans-unit id="openLaunchJson">
        <source xml:lang="en">Open {0}</source>
        <target state="translated">開啟 {0}</target>
      </trans-unit>
      <trans-unit id="launchJsonNeedsConfigurtion">
        <source xml:lang="en">Configure or Fix 'launch.json'</source>
        <target state="translated">設定或修正 'launch.json'</target>
      </trans-unit>
      <trans-unit id="noFolderDebugConfig">
        <source xml:lang="en">Please first open a folder in order to do advanced debug configuration.</source>
        <target state="translated">請先打開一個資料夾以便設定進階偵錯組態。</target>
      </trans-unit>
      <trans-unit id="selectWorkspaceFolder">
        <source xml:lang="en">Select a workspace folder to create a launch.json file in</source>
        <target state="translated">選取要建立 launch.json 檔案的工作區資料夾</target>
      </trans-unit>
      <trans-unit id="startDebug">
        <source xml:lang="en">Start Debugging</source>
        <target state="translated">開始偵錯</target>
      </trans-unit>
      <trans-unit id="startWithoutDebugging">
        <source xml:lang="en">Start Without Debugging</source>
        <target state="translated">開始但不偵錯</target>
      </trans-unit>
      <trans-unit id="selectAndStartDebugging">
        <source xml:lang="en">Select and Start Debugging</source>
        <target state="translated">選取並開始偵錯</target>
      </trans-unit>
      <trans-unit id="removeBreakpoint">
        <source xml:lang="en">Remove Breakpoint</source>
        <target state="translated">移除中斷點</target>
      </trans-unit>
      <trans-unit id="removeAllBreakpoints">
        <source xml:lang="en">Remove All Breakpoints</source>
        <target state="translated">移除所有中斷點</target>
      </trans-unit>
      <trans-unit id="enableAllBreakpoints">
        <source xml:lang="en">Enable All Breakpoints</source>
        <target state="translated">啟用所有中斷點</target>
      </trans-unit>
      <trans-unit id="disableAllBreakpoints">
        <source xml:lang="en">Disable All Breakpoints</source>
        <target state="translated">停用所有中斷點</target>
      </trans-unit>
      <trans-unit id="activateBreakpoints">
        <source xml:lang="en">Activate Breakpoints</source>
        <target state="translated">啟動中斷點</target>
      </trans-unit>
      <trans-unit id="deactivateBreakpoints">
        <source xml:lang="en">Deactivate Breakpoints</source>
        <target state="translated">停用中斷點</target>
      </trans-unit>
      <trans-unit id="reapplyAllBreakpoints">
        <source xml:lang="en">Reapply All Breakpoints</source>
        <target state="translated">重新套用所有中斷點</target>
      </trans-unit>
      <trans-unit id="addFunctionBreakpoint">
        <source xml:lang="en">Add Function Breakpoint</source>
        <target state="translated">加入函式中斷點</target>
      </trans-unit>
      <trans-unit id="addWatchExpression">
        <source xml:lang="en">Add Expression</source>
        <target state="translated">加入運算式</target>
      </trans-unit>
      <trans-unit id="removeAllWatchExpressions">
        <source xml:lang="en">Remove All Expressions</source>
        <target state="translated">移除所有運算式</target>
      </trans-unit>
      <trans-unit id="focusSession">
        <source xml:lang="en">Focus Session</source>
        <target state="translated">焦點工作階段</target>
      </trans-unit>
      <trans-unit id="copyValue">
        <source xml:lang="en">Copy Value</source>
        <target state="translated">複製值</target>
      </trans-unit>
    </body>
  </file>
  <file original="src/vs/workbench/contrib/debug/browser/debugEditorActions" source-language="en" target-language="zh-Hant" datatype="plaintext">
    <body>
      <trans-unit id="toggleBreakpointAction">
        <source xml:lang="en">Debug: Toggle Breakpoint</source>
        <target state="translated">偵錯: 切換中斷點</target>
      </trans-unit>
      <trans-unit id="conditionalBreakpointEditorAction">
        <source xml:lang="en">Debug: Add Conditional Breakpoint...</source>
        <target state="translated">偵錯: 新增條件中斷點...</target>
      </trans-unit>
      <trans-unit id="logPointEditorAction">
        <source xml:lang="en">Debug: Add Logpoint...</source>
        <target state="translated">偵錯: 新增記錄點...</target>
      </trans-unit>
      <trans-unit id="runToCursor">
        <source xml:lang="en">Run to Cursor</source>
        <target state="translated">執行至游標處</target>
      </trans-unit>
      <trans-unit id="evaluateInDebugConsole">
        <source xml:lang="en">Evaluate in Debug Console</source>
        <target state="translated">在偵錯主控台中評估</target>
      </trans-unit>
      <trans-unit id="addToWatch">
        <source xml:lang="en">Add to Watch</source>
        <target state="translated">加入監看</target>
      </trans-unit>
      <trans-unit id="showDebugHover">
        <source xml:lang="en">Debug: Show Hover</source>
        <target state="translated">偵錯: 動態顯示</target>
      </trans-unit>
      <trans-unit id="goToNextBreakpoint">
        <source xml:lang="en">Debug: Go To Next Breakpoint</source>
        <target state="translated">偵錯: 移至下一個中斷點</target>
      </trans-unit>
      <trans-unit id="goToPreviousBreakpoint">
        <source xml:lang="en">Debug: Go To Previous Breakpoint</source>
        <target state="translated">偵錯: 移至上一個中斷點</target>
      </trans-unit>
    </body>
  </file>
  <file original="src/vs/workbench/contrib/debug/browser/linkDetector" source-language="en" target-language="zh-Hant" datatype="plaintext">
    <body>
      <trans-unit id="fileLinkMac">
        <source xml:lang="en">Cmd + click to follow link</source>
        <target state="translated">按住 Cmd 並按一下滑鼠按鈕可連入連結</target>
      </trans-unit>
      <trans-unit id="fileLink">
        <source xml:lang="en">Ctrl + click to follow link</source>
        <target state="translated">按住 Ctrl 並按一下滑鼠按鈕可連入連結</target>
      </trans-unit>
    </body>
  </file>
  <file original="src/vs/workbench/contrib/debug/common/replModel" source-language="en" target-language="zh-Hant" datatype="plaintext">
    <body>
      <trans-unit id="consoleCleared">
        <source xml:lang="en">Console was cleared</source>
        <target state="translated">已清除主控台</target>
      </trans-unit>
      <trans-unit id="snapshotObj">
        <source xml:lang="en">Only primitive values are shown for this object.</source>
        <target state="translated">只會顯示此物件的基本值。</target>
      </trans-unit>
    </body>
  </file>
  <file original="src/vs/workbench/contrib/debug/browser/breakpointWidget" source-language="en" target-language="zh-Hant" datatype="plaintext">
    <body>
      <trans-unit id="breakpointWidgetLogMessagePlaceholder">
        <source xml:lang="en">Message to log when breakpoint is hit. Expressions within {} are interpolated. 'Enter' to accept, 'esc' to cancel.</source>
        <target state="translated">當命中中斷點時向記錄傳送訊息。會以內插值取代 {} 中的運算式。按一下 'Enter' 接受，或是按 'esc' 取消。</target>
      </trans-unit>
      <trans-unit id="breakpointWidgetHitCountPlaceholder">
        <source xml:lang="en">Break when hit count condition is met. 'Enter' to accept, 'esc' to cancel.</source>
        <target state="translated">符合叫用次數條件時中斷。按 'Enter' 鍵接受，按 'esc' 鍵取消。</target>
      </trans-unit>
      <trans-unit id="breakpointWidgetExpressionPlaceholder">
        <source xml:lang="en">Break when expression evaluates to true. 'Enter' to accept, 'esc' to cancel.</source>
        <target state="translated">在運算式評估為 true 時中斷。按 'Enter' 鍵接受，按 'esc' 鍵取消。</target>
      </trans-unit>
      <trans-unit id="expression">
        <source xml:lang="en">Expression</source>
        <target state="translated">EXPRESSION</target>
      </trans-unit>
      <trans-unit id="hitCount">
        <source xml:lang="en">Hit Count</source>
        <target state="translated">叫用次數</target>
      </trans-unit>
      <trans-unit id="logMessage">
        <source xml:lang="en">Log Message</source>
        <target state="translated">日誌訊息</target>
      </trans-unit>
      <trans-unit id="breakpointType">
        <source xml:lang="en">Breakpoint Type</source>
        <target state="translated">中斷點類型</target>
      </trans-unit>
    </body>
  </file>
  <file original="src/vs/workbench/contrib/debug/browser/watchExpressionsView" source-language="en" target-language="zh-Hant" datatype="plaintext">
    <body>
      <trans-unit id="watchAriaTreeLabel">
        <source xml:lang="en">Debug Watch Expressions</source>
        <target state="translated">對監看運算式執行偵錯</target>
        <note>Debug is a noun in this context, not a verb.</note>
      </trans-unit>
      <trans-unit id="editWatchExpression">
        <source xml:lang="en">Edit Expression</source>
        <target state="translated">編輯運算式</target>
      </trans-unit>
      <trans-unit id="removeWatchExpression">
        <source xml:lang="en">Remove Expression</source>
        <target state="translated">移除運算式</target>
      </trans-unit>
      <trans-unit id="watchExpressionInputAriaLabel">
        <source xml:lang="en">Type watch expression</source>
        <target state="translated">輸入監看運算式</target>
      </trans-unit>
      <trans-unit id="watchExpressionPlaceholder">
        <source xml:lang="en">Expression to watch</source>
        <target state="translated">要監看的運算式</target>
      </trans-unit>
      <trans-unit id="watchExpressionAriaLabel">
        <source xml:lang="en">{0} value {1}, watch, debug</source>
        <target state="translated">{0} 值 {1}，監看式，偵錯</target>
      </trans-unit>
      <trans-unit id="watchVariableAriaLabel">
        <source xml:lang="en">{0} value {1}, watch, debug</source>
        <target state="translated">{0} 值 {1}，監看式，偵錯</target>
      </trans-unit>
    </body>
  </file>
  <file original="src/vs/workbench/contrib/debug/browser/variablesView" source-language="en" target-language="zh-Hant" datatype="plaintext">
    <body>
      <trans-unit id="variablesAriaTreeLabel">
        <source xml:lang="en">Debug Variables</source>
        <target state="translated">偵錯變數</target>
      </trans-unit>
      <trans-unit id="setValue">
        <source xml:lang="en">Set Value</source>
        <target state="translated">設定值</target>
      </trans-unit>
      <trans-unit id="copyAsExpression">
        <source xml:lang="en">Copy as Expression</source>
        <target state="translated">複製為運算式</target>
      </trans-unit>
      <trans-unit id="addToWatchExpressions">
        <source xml:lang="en">Add to Watch</source>
        <target state="translated">加入監看</target>
      </trans-unit>
      <trans-unit id="breakWhenValueChanges">
        <source xml:lang="en">Break When Value Changes</source>
        <target state="translated">當值變更時中斷</target>
      </trans-unit>
      <trans-unit id="variableValueAriaLabel">
        <source xml:lang="en">Type new variable value</source>
        <target state="translated">輸入新的變數值</target>
      </trans-unit>
      <trans-unit id="variableScopeAriaLabel">
        <source xml:lang="en">Scope {0}, variables, debug</source>
        <target state="translated">範圍 {0}，變數，偵錯</target>
      </trans-unit>
      <trans-unit id="variableAriaLabel">
        <source xml:lang="en">{0} value {1}, variables, debug</source>
        <target state="translated">{0} 值 {1}，變數，偵錯</target>
      </trans-unit>
    </body>
  </file>
  <file original="src/vs/workbench/contrib/debug/browser/replViewer" source-language="en" target-language="zh-Hant" datatype="plaintext">
    <body>
      <trans-unit id="stateCapture">
        <source xml:lang="en">Object state is captured from first evaluation</source>
        <target state="translated">第一次評估會擷取物件狀態</target>
      </trans-unit>
      <trans-unit id="replVariableAriaLabel">
        <source xml:lang="en">Variable {0} has value {1}, read eval print loop, debug</source>
        <target state="translated">變數 {0} 具有值 {1}，「讀取、求值、輸出」迴圈，偵錯</target>
      </trans-unit>
      <trans-unit id="replValueOutputAriaLabel">
        <source xml:lang="en">{0}, read eval print loop, debug</source>
        <target state="translated">{0}，「讀取、求值、輸出」迴圈，偵錯</target>
      </trans-unit>
      <trans-unit id="replRawObjectAriaLabel">
        <source xml:lang="en">Repl variable {0} has value {1}, read eval print loop, debug</source>
        <target state="translated">REPL 變數 {0} 具有值 {1}，「讀取、求值、輸出」迴圈 ，偵錯</target>
      </trans-unit>
      <trans-unit id="replGroup">
        <source xml:lang="en">Repl group {0}, read eval print loop, debug</source>
        <target state="translated">REPL 群組 {0}，「讀取、求值、輸出」迴圈，偵錯</target>
      </trans-unit>
    </body>
  </file>
  <file original="src/vs/workbench/contrib/debug/node/debugAdapter" source-language="en" target-language="zh-Hant" datatype="plaintext">
    <body>
      <trans-unit id="debugAdapterBinNotFound">
        <source xml:lang="en">Debug adapter executable '{0}' does not exist.</source>
        <target state="translated">偵錯配接器可執行檔 '{0}' 不存在。</target>
      </trans-unit>
      <trans-unit id="debugAdapterCannotDetermineExecutable">
        <source xml:lang="en">Cannot determine executable for debug adapter '{0}'.</source>
        <target state="translated">無法判斷偵錯配接器 '{0}' 的可執行檔。</target>
        <note>Adapter executable file not found</note>
      </trans-unit>
      <trans-unit id="unableToLaunchDebugAdapter">
        <source xml:lang="en">Unable to launch debug adapter from '{0}'.</source>
        <target state="translated">無法從 '{0}' 啟動偵錯配接器。</target>
      </trans-unit>
      <trans-unit id="unableToLaunchDebugAdapterNoArgs">
        <source xml:lang="en">Unable to launch debug adapter.</source>
        <target state="translated">無法啟動偵錯配接器。</target>
      </trans-unit>
    </body>
  </file>
  <file original="src/vs/workbench/contrib/debug/browser/loadedScriptsView" source-language="en" target-language="zh-Hant" datatype="plaintext">
    <body>
      <trans-unit id="loadedScriptsAriaLabel">
        <source xml:lang="en">Debug Loaded Scripts</source>
        <target state="translated">對載入的指令碼偵錯</target>
        <note>Debug is a noun in this context, not a verb.</note>
      </trans-unit>
      <trans-unit id="loadedScriptsSession">
        <source xml:lang="en">Debug Session</source>
        <target state="translated">對工作階段偵錯</target>
      </trans-unit>
      <trans-unit id="loadedScriptsRootFolderAriaLabel">
        <source xml:lang="en">Workspace folder {0}, loaded script, debug</source>
        <target state="translated">工作區資料夾 {0}, 已載入指令碼, 偵錯</target>
      </trans-unit>
      <trans-unit id="loadedScriptsSessionAriaLabel">
        <source xml:lang="en">Session {0}, loaded script, debug</source>
        <target state="translated">工作階段 {0}, 已載入指令碼, 偵錯</target>
      </trans-unit>
      <trans-unit id="loadedScriptsFolderAriaLabel">
        <source xml:lang="en">Folder {0}, loaded script, debug</source>
        <target state="translated">資料夾 {0}, 已載入指令碼, 偵錯</target>
      </trans-unit>
      <trans-unit id="loadedScriptsSourceAriaLabel">
        <source xml:lang="en">{0}, loaded script, debug</source>
        <target state="translated">{0}, 已載入指令碼, 偵錯</target>
      </trans-unit>
    </body>
  </file>
  <file original="src/vs/workbench/contrib/debug/browser/debugCommands" source-language="en" target-language="zh-Hant" datatype="plaintext">
    <body>
      <trans-unit id="restartDebug">
        <source xml:lang="en">Restart</source>
        <target state="translated">重新啟動</target>
      </trans-unit>
      <trans-unit id="stepOverDebug">
        <source xml:lang="en">Step Over</source>
        <target state="translated">不進入函式</target>
      </trans-unit>
      <trans-unit id="stepIntoDebug">
        <source xml:lang="en">Step Into</source>
        <target state="translated">逐步執行</target>
      </trans-unit>
      <trans-unit id="stepOutDebug">
        <source xml:lang="en">Step Out</source>
        <target state="translated">跳離函式</target>
      </trans-unit>
      <trans-unit id="pauseDebug">
        <source xml:lang="en">Pause</source>
        <target state="translated">暫停</target>
      </trans-unit>
      <trans-unit id="disconnect">
        <source xml:lang="en">Disconnect</source>
        <target state="translated">中斷連線</target>
      </trans-unit>
      <trans-unit id="stop">
        <source xml:lang="en">Stop</source>
        <target state="translated">停止</target>
      </trans-unit>
      <trans-unit id="continueDebug">
        <source xml:lang="en">Continue</source>
        <target state="translated">繼續</target>
      </trans-unit>
      <trans-unit id="chooseLocation">
        <source xml:lang="en">Choose the specific location</source>
        <target state="translated">選擇特定位置</target>
      </trans-unit>
      <trans-unit id="noExecutableCode">
        <source xml:lang="en">No executable code is associated at the current cursor position.</source>
        <target state="translated">沒有任何可執行程式碼與目前的指標位置相關。</target>
      </trans-unit>
      <trans-unit id="jumpToCursor">
        <source xml:lang="en">Jump to Cursor</source>
        <target state="translated">跳至資料指標</target>
      </trans-unit>
      <trans-unit id="debug">
        <source xml:lang="en">Debug</source>
        <target state="translated">偵錯</target>
      </trans-unit>
      <trans-unit id="noFolderDebugConfig">
        <source xml:lang="en">Please first open a folder in order to do advanced debug configuration.</source>
        <target state="translated">請先打開一個資料夾以便設定進階偵錯組態。</target>
      </trans-unit>
      <trans-unit id="addInlineBreakpoint">
        <source xml:lang="en">Add Inline Breakpoint</source>
        <target state="translated">新增內嵌中斷點</target>
      </trans-unit>
    </body>
  </file>
  <file original="src/vs/workbench/contrib/debug/browser/breakpointsView" source-language="en" target-language="zh-Hant" datatype="plaintext">
    <body>
      <trans-unit id="Logpoint">
        <source xml:lang="en">Logpoint</source>
        <target state="translated">記錄點</target>
      </trans-unit>
      <trans-unit id="Breakpoint">
        <source xml:lang="en">Breakpoint</source>
        <target state="translated">中斷點</target>
      </trans-unit>
      <trans-unit id="editBreakpoint">
        <source xml:lang="en">Edit {0}...</source>
        <target state="translated">編輯 {0}...</target>
      </trans-unit>
      <trans-unit id="removeBreakpoint">
        <source xml:lang="en">Remove {0}</source>
        <target state="translated">移除 {0}</target>
      </trans-unit>
      <trans-unit id="functionBreakpointsNotSupported">
        <source xml:lang="en">Function breakpoints are not supported by this debug type</source>
        <target state="translated">此偵錯類型不支援函式中斷點</target>
      </trans-unit>
      <trans-unit id="dataBreakpointsNotSupported">
        <source xml:lang="en">Data breakpoints are not supported by this debug type</source>
        <target state="translated">此偵錯類型不支援資料中斷點</target>
      </trans-unit>
      <trans-unit id="functionBreakpointPlaceholder">
        <source xml:lang="en">Function to break on</source>
        <target state="translated">要中斷的函式</target>
      </trans-unit>
      <trans-unit id="functionBreakPointInputAriaLabel">
        <source xml:lang="en">Type function breakpoint</source>
        <target state="translated">輸入函式中斷點</target>
      </trans-unit>
      <trans-unit id="disabledLogpoint">
        <source xml:lang="en">Disabled Logpoint</source>
        <target state="translated">已停用記錄點</target>
      </trans-unit>
      <trans-unit id="disabledBreakpoint">
        <source xml:lang="en">Disabled Breakpoint</source>
        <target state="translated">停用的中斷點</target>
      </trans-unit>
      <trans-unit id="unverifiedLogpoint">
        <source xml:lang="en">Unverified Logpoint</source>
        <target state="translated">未驗證記錄點</target>
      </trans-unit>
      <trans-unit id="unverifiedBreakopint">
        <source xml:lang="en">Unverified Breakpoint</source>
        <target state="translated">未驗證的中斷點</target>
      </trans-unit>
      <trans-unit id="functionBreakpointUnsupported">
        <source xml:lang="en">Function breakpoints not supported by this debug type</source>
        <target state="translated">此偵錯類型不支援函式中斷點</target>
      </trans-unit>
      <trans-unit id="functionBreakpoint">
        <source xml:lang="en">Function Breakpoint</source>
        <target state="translated">函式中斷點</target>
      </trans-unit>
      <trans-unit id="dataBreakpointUnsupported">
        <source xml:lang="en">Data breakpoints not supported by this debug type</source>
        <target state="translated">此偵錯類型不支援資料中斷點</target>
      </trans-unit>
      <trans-unit id="dataBreakpoint">
        <source xml:lang="en">Data Breakpoint</source>
        <target state="translated">資料中斷點</target>
      </trans-unit>
      <trans-unit id="breakpointUnsupported">
        <source xml:lang="en">Breakpoints of this type are not supported by the debugger</source>
        <target state="translated">偵錯工具不支援此類型的中斷點</target>
      </trans-unit>
      <trans-unit id="logMessage">
        <source xml:lang="en">Log Message: {0}</source>
        <target state="translated">記錄訊息: {0}</target>
      </trans-unit>
      <trans-unit id="expression">
        <source xml:lang="en">Expression: {0}</source>
        <target state="translated">運算式: {0}</target>
      </trans-unit>
      <trans-unit id="hitCount">
        <source xml:lang="en">Hit Count: {0}</source>
        <target state="translated">叫用次數: {0}</target>
      </trans-unit>
      <trans-unit id="breakpoint">
        <source xml:lang="en">Breakpoint</source>
        <target state="translated">中斷點</target>
      </trans-unit>
    </body>
  </file>
  <file original="src/vs/workbench/contrib/debug/common/debugSource" source-language="en" target-language="zh-Hant" datatype="plaintext">
    <body>
      <trans-unit id="unknownSource">
        <source xml:lang="en">Unknown Source</source>
        <target state="translated">未知的來源</target>
      </trans-unit>
    </body>
  </file>
  <file original="src/vs/workbench/contrib/debug/browser/callStackView" source-language="en" target-language="zh-Hant" datatype="plaintext">
    <body>
      <trans-unit id="debugStopped">
        <source xml:lang="en">Paused on {0}</source>
        <target state="translated">暫停於 {0}</target>
      </trans-unit>
      <trans-unit id="callStackAriaLabel">
        <source xml:lang="en">Debug Call Stack</source>
        <target state="translated">偵錯呼叫堆疊</target>
        <note>Debug is a noun in this context, not a verb.</note>
      </trans-unit>
      <trans-unit id="showMoreStackFrames2">
        <source xml:lang="en">Show More Stack Frames</source>
        <target state="translated">顯示更多堆疊框架</target>
      </trans-unit>
      <trans-unit id="session">
        <source xml:lang="en">Session</source>
        <target state="translated">工作階段</target>
        <note>Session is a noun</note>
      </trans-unit>
      <trans-unit id="running">
        <source xml:lang="en">Running</source>
        <target state="translated">正在執行</target>
        <note>indicates state</note>
      </trans-unit>
      <trans-unit id="thread">
        <source xml:lang="en">Thread</source>
        <target state="translated">執行緒</target>
      </trans-unit>
      <trans-unit id="restartFrame">
        <source xml:lang="en">Restart Frame</source>
        <target state="translated">重新啟動框架</target>
      </trans-unit>
      <trans-unit id="loadMoreStackFrames">
        <source xml:lang="en">Load More Stack Frames</source>
        <target state="translated">載入更多堆疊框架</target>
      </trans-unit>
      <trans-unit id="showMoreAndOrigin">
        <source xml:lang="en">Show {0} More: {1}</source>
        <target state="translated">顯示其他 {0} 個: {1}</target>
      </trans-unit>
      <trans-unit id="showMoreStackFrames">
        <source xml:lang="en">Show {0} More Stack Frames</source>
        <target state="translated">顯示其他 {0} 個堆疊框架</target>
      </trans-unit>
      <trans-unit id="threadAriaLabel">
        <source xml:lang="en">Thread {0}, callstack, debug</source>
        <target state="translated">執行緒 {0}，呼叫堆疊，偵錯</target>
      </trans-unit>
      <trans-unit id="stackFrameAriaLabel">
        <source xml:lang="en">Stack Frame {0} line {1} {2}, callstack, debug</source>
        <target state="translated">堆疊框架 {0} 第 {1} {2} 行，呼叫堆疊，偵錯</target>
      </trans-unit>
      <trans-unit id="sessionLabel">
        <source xml:lang="en">Debug Session {0}</source>
        <target state="translated">偵錯工作階段 {0}</target>
      </trans-unit>
    </body>
  </file>
  <file original="src/vs/workbench/contrib/debug/browser/debugService" source-language="en" target-language="zh-Hant" datatype="plaintext">
    <body>
      <trans-unit id="1activeSession">
        <source xml:lang="en">1 active session</source>
        <target state="translated">1 個正在使用的工作階段</target>
      </trans-unit>
      <trans-unit id="nActiveSessions">
        <source xml:lang="en">{0} active sessions</source>
        <target state="translated">{0} 個正在使用的工作階段</target>
      </trans-unit>
      <trans-unit id="configurationAlreadyRunning">
        <source xml:lang="en">There is already a debug configuration "{0}" running.</source>
        <target state="translated">已有正在執行的偵錯組態 "{0}"。</target>
      </trans-unit>
      <trans-unit id="compoundMustHaveConfigurations">
        <source xml:lang="en">Compound must have "configurations" attribute set in order to start multiple configurations.</source>
        <target state="translated">複合必須設有 "configurations" 屬性，才能啟動多個組態。</target>
        <note>compound indicates a "compounds" configuration item
"configurations" is an attribute and should not be localized</note>
      </trans-unit>
      <trans-unit id="noConfigurationNameInWorkspace">
        <source xml:lang="en">Could not find launch configuration '{0}' in the workspace.</source>
        <target state="translated">無法在工作區中找到啟動組態 '{0}'。</target>
      </trans-unit>
      <trans-unit id="multipleConfigurationNamesInWorkspace">
        <source xml:lang="en">There are multiple launch configurations '{0}' in the workspace. Use folder name to qualify the configuration.</source>
        <target state="translated">工作區中有多個啟動組態 '{0}'。請使用資料夾名稱以符合組態。</target>
      </trans-unit>
      <trans-unit id="noFolderWithName">
        <source xml:lang="en">Can not find folder with name '{0}' for configuration '{1}' in compound '{2}'.</source>
        <target state="translated">在複合 '{2}' 的組態 '{1}' 中找不到名稱為 '{0}' 的資料夾。</target>
      </trans-unit>
      <trans-unit id="configMissing">
        <source xml:lang="en">Configuration '{0}' is missing in 'launch.json'.</source>
        <target state="translated">'launch.json' 中遺漏組態 '{0}'。</target>
      </trans-unit>
      <trans-unit id="launchJsonDoesNotExist">
        <source xml:lang="en">'launch.json' does not exist.</source>
        <target state="translated">'launch.json' 不存在。</target>
      </trans-unit>
      <trans-unit id="debugRequestNotSupported">
        <source xml:lang="en">Attribute '{0}' has an unsupported value '{1}' in the chosen debug configuration.</source>
        <target state="translated">在選取的偵錯組態中，屬性 '{0}' 具有不支援的值 '{1}'。</target>
      </trans-unit>
      <trans-unit id="debugRequesMissing">
        <source xml:lang="en">Attribute '{0}' is missing from the chosen debug configuration.</source>
        <target state="translated">所選的偵錯組態遺漏屬性 '{0}'。</target>
      </trans-unit>
      <trans-unit id="debugTypeNotSupported">
        <source xml:lang="en">Configured debug type '{0}' is not supported.</source>
        <target state="translated">不支援設定的偵錯類型 '{0}'。</target>
      </trans-unit>
      <trans-unit id="debugTypeMissing">
        <source xml:lang="en">Missing property 'type' for the chosen launch configuration.</source>
        <target state="translated">遺漏所選啟動設定的屬性 'type'。</target>
      </trans-unit>
      <trans-unit id="noFolderWorkspaceDebugError">
        <source xml:lang="en">The active file can not be debugged. Make sure it is saved and that you have a debug extension installed for that file type.</source>
        <target state="translated">無法偵錯使用中的檔案。請確認期已經過儲存，且您有為該檔案類型安裝的延伸模組。</target>
      </trans-unit>
      <trans-unit id="debugAdapterCrash">
        <source xml:lang="en">Debug adapter process has terminated unexpectedly ({0})</source>
        <target state="translated">偵錯配接器處理程序已意外終止 ({0})</target>
      </trans-unit>
      <trans-unit id="cancel">
        <source xml:lang="en">Cancel</source>
        <target state="translated">取消</target>
      </trans-unit>
      <trans-unit id="debuggingPaused">
        <source xml:lang="en">Debugging paused {0}, {1} {2} {3}</source>
        <target state="translated">偵錯已暫停 {0}，{1} {2} {3}</target>
      </trans-unit>
      <trans-unit id="breakpointAdded">
        <source xml:lang="en">Added breakpoint, line {0}, file {1}</source>
        <target state="translated">已新增中斷點，行 {0}，檔案 {1}</target>
      </trans-unit>
      <trans-unit id="breakpointRemoved">
        <source xml:lang="en">Removed breakpoint, line {0}, file {1}</source>
        <target state="translated">已移除中斷點，行 {0}，檔案 {1}</target>
      </trans-unit>
    </body>
  </file>
  <file original="src/vs/workbench/contrib/debug/common/debugModel" source-language="en" target-language="zh-Hant" datatype="plaintext">
    <body>
      <trans-unit id="invalidVariableAttributes">
        <source xml:lang="en">Invalid variable attributes</source>
        <target state="translated">變數屬性無效</target>
      </trans-unit>
      <trans-unit id="startDebugFirst">
        <source xml:lang="en">Please start a debug session to evaluate expressions</source>
        <target state="translated">請啟動偵錯工作階段以評估運算式</target>
      </trans-unit>
      <trans-unit id="notAvailable">
        <source xml:lang="en">not available</source>
        <target state="translated">無法使用</target>
      </trans-unit>
      <trans-unit id="pausedOn">
        <source xml:lang="en">Paused on {0}</source>
        <target state="translated">暫停於 {0}</target>
        <note>indicates reason for program being paused</note>
      </trans-unit>
      <trans-unit id="paused">
        <source xml:lang="en">Paused</source>
        <target state="translated">已暫停</target>
      </trans-unit>
      <trans-unit id="running">
        <source xml:lang="en">Running</source>
        <target state="translated">正在執行</target>
        <note>indicates state</note>
      </trans-unit>
      <trans-unit id="breakpointDirtydHover">
        <source xml:lang="en">Unverified breakpoint. File is modified, please restart debug session.</source>
        <target state="translated">未驗證的中斷點。檔案已修改，請重新啟動偵錯工作階段。</target>
      </trans-unit>
    </body>
  </file>
  <file original="src/vs/workbench/contrib/debug/browser/debugTaskRunner" source-language="en" target-language="zh-Hant" datatype="plaintext">
    <body>
      <trans-unit id="preLaunchTaskErrors">
        <source xml:lang="en">Errors exist after running preLaunchTask '{0}'.</source>
        <target state="translated">執行 preLaunchTask '{0}' 後存在錯誤。</target>
      </trans-unit>
      <trans-unit id="preLaunchTaskError">
        <source xml:lang="en">Error exists after running preLaunchTask '{0}'.</source>
        <target state="translated">執行 preLaunchTask '{0}' 後存在錯誤。</target>
      </trans-unit>
      <trans-unit id="preLaunchTaskExitCode">
        <source xml:lang="en">The preLaunchTask '{0}' terminated with exit code {1}.</source>
        <target state="translated">preLaunchTask '{0}' 已終止，結束代碼為 {1}。</target>
      </trans-unit>
      <trans-unit id="preLaunchTaskTerminated">
        <source xml:lang="en">The preLaunchTask '{0}' terminated.</source>
        <target state="translated">preLaunchTask '{0}' 已終止。</target>
      </trans-unit>
      <trans-unit id="debugAnyway">
        <source xml:lang="en">Debug Anyway</source>
        <target state="translated">仍要偵錯</target>
      </trans-unit>
      <trans-unit id="showErrors">
        <source xml:lang="en">Show Errors</source>
        <target state="translated">顯示錯誤</target>
      </trans-unit>
      <trans-unit id="abort">
        <source xml:lang="en">Abort</source>
        <target state="translated">中止</target>
      </trans-unit>
      <trans-unit id="remember">
        <source xml:lang="en">Remember my choice in user settings</source>
        <target state="translated">記住我在使用者設定中的選擇</target>
      </trans-unit>
      <trans-unit id="invalidTaskReference">
        <source xml:lang="en">Task '{0}' can not be referenced from a launch configuration that is in a different workspace folder.</source>
        <target state="translated">無法從位於其他工作區資料夾的啟動組態參考工作 '{0}'。</target>
      </trans-unit>
      <trans-unit id="DebugTaskNotFoundWithTaskId">
        <source xml:lang="en">Could not find the task '{0}'.</source>
        <target state="translated">找不到工作 "{0}"。</target>
      </trans-unit>
      <trans-unit id="DebugTaskNotFound">
        <source xml:lang="en">Could not find the specified task.</source>
        <target state="translated">找不到指定的工作。</target>
      </trans-unit>
      <trans-unit id="taskNotTrackedWithTaskId">
        <source xml:lang="en">The specified task cannot be tracked.</source>
        <target state="translated">無法追蹤指定的工作。</target>
      </trans-unit>
      <trans-unit id="taskNotTracked">
        <source xml:lang="en">The task '{0}' cannot be tracked.</source>
        <target state="translated">無法追蹤工作 '{0}'。</target>
      </trans-unit>
    </body>
  </file>
  <file original="src/vs/workbench/contrib/debug/browser/debugConfigurationManager" source-language="en" target-language="zh-Hant" datatype="plaintext">
    <body>
      <trans-unit id="debugNoType">
        <source xml:lang="en">Debugger 'type' can not be omitted and must be of type 'string'.</source>
        <target state="translated">偵錯器 'type' 無法省略，且必須為類型 'string'。</target>
      </trans-unit>
      <trans-unit id="more">
        <source xml:lang="en">More...</source>
        <target state="translated">更多...</target>
      </trans-unit>
      <trans-unit id="selectDebug">
        <source xml:lang="en">Select Environment</source>
        <target state="translated">選取環境</target>
      </trans-unit>
      <trans-unit id="DebugConfig.failed">
        <source xml:lang="en">Unable to create 'launch.json' file inside the '.vscode' folder ({0}).</source>
        <target state="translated">無法在 '.vscode' 資料夾 ({0}) 中建立 'launch.json' 檔案。</target>
      </trans-unit>
      <trans-unit id="workspace">
        <source xml:lang="en">workspace</source>
        <target state="translated">工作區</target>
      </trans-unit>
      <trans-unit id="user settings">
        <source xml:lang="en">user settings</source>
        <target state="translated">使用者設定</target>
      </trans-unit>
    </body>
  </file>
  <file original="src/vs/workbench/contrib/debug/browser/debugSession" source-language="en" target-language="zh-Hant" datatype="plaintext">
    <body>
      <trans-unit id="noDebugAdapter">
        <source xml:lang="en">No debug adapter, can not send '{0}'</source>
        <target state="translated">無任何偵錯配接器，無法傳送 '{0}'</target>
      </trans-unit>
      <trans-unit id="sessionNotReadyForBreakpoints">
        <source xml:lang="en">Session is not ready for breakpoints</source>
        <target state="translated">工作階段還沒準備好使用中斷點</target>
      </trans-unit>
      <trans-unit id="debuggingStarted">
        <source xml:lang="en">Debugging started.</source>
        <target state="translated">偵錯已開始。</target>
      </trans-unit>
      <trans-unit id="debuggingStopped">
        <source xml:lang="en">Debugging stopped.</source>
        <target state="translated">偵錯已停止。</target>
      </trans-unit>
    </body>
  </file>
  <file original="src/vs/workbench/contrib/debug/common/debugger" source-language="en" target-language="zh-Hant" datatype="plaintext">
    <body>
      <trans-unit id="cannot.find.da">
        <source xml:lang="en">Cannot find debug adapter for type '{0}'.</source>
        <target state="translated">找不到類型 ‘{0}’ 的偵錯配接器。</target>
      </trans-unit>
      <trans-unit id="launch.config.comment1">
        <source xml:lang="en">Use IntelliSense to learn about possible attributes.</source>
        <target state="translated">使用 IntelliSense 以得知可用的屬性。</target>
      </trans-unit>
      <trans-unit id="launch.config.comment2">
        <source xml:lang="en">Hover to view descriptions of existing attributes.</source>
        <target state="translated">暫留以檢視現有屬性的描述。</target>
      </trans-unit>
      <trans-unit id="launch.config.comment3">
        <source xml:lang="en">For more information, visit: {0}</source>
        <target state="translated">如需詳細資訊，請瀏覽: {0}</target>
      </trans-unit>
      <trans-unit id="debugType">
        <source xml:lang="en">Type of configuration.</source>
        <target state="translated">組態的類型。</target>
      </trans-unit>
      <trans-unit id="debugTypeNotRecognised">
        <source xml:lang="en">The debug type is not recognized. Make sure that you have a corresponding debug extension installed and that it is enabled.</source>
        <target state="translated">無法辨識此偵錯類型。請確認已有安裝並啟用相對應的偵錯延伸模組。</target>
      </trans-unit>
      <trans-unit id="node2NotSupported">
        <source xml:lang="en">"node2" is no longer supported, use "node" instead and set the "protocol" attribute to "inspector".</source>
        <target state="translated">"node2" 已不再支援，請改用 "node"，並將 "protocol" 屬性設為 "inspector"。</target>
      </trans-unit>
      <trans-unit id="debugName">
        <source xml:lang="en">Name of configuration; appears in the launch configuration dropdown menu.</source>
        <target state="translated">組態的名稱; 會顯示在啟動組態下拉式功能表中。</target>
      </trans-unit>
      <trans-unit id="debugRequest">
        <source xml:lang="en">Request type of configuration. Can be "launch" or "attach".</source>
        <target state="translated">要求組態的類型。可以是 [啟動] 或 [附加]。</target>
      </trans-unit>
      <trans-unit id="debugServer">
        <source xml:lang="en">For debug extension development only: if a port is specified VS Code tries to connect to a debug adapter running in server mode</source>
        <target state="translated">僅限偵錯延伸模組開發: 如果指定了連接埠，VS Code 會嘗試連線至以伺服器模式執行的偵錯配接器</target>
      </trans-unit>
      <trans-unit id="debugPrelaunchTask">
        <source xml:lang="en">Task to run before debug session starts.</source>
        <target state="translated">偵錯工作階段啟動前要執行的工作。</target>
      </trans-unit>
      <trans-unit id="debugPostDebugTask">
        <source xml:lang="en">Task to run after debug session ends.</source>
        <target state="translated">偵錯工作階段結束後要執行的工作。</target>
      </trans-unit>
      <trans-unit id="debugWindowsConfiguration">
        <source xml:lang="en">Windows specific launch configuration attributes.</source>
        <target state="translated">Windows 特定的啟動設定屬性。</target>
      </trans-unit>
      <trans-unit id="debugOSXConfiguration">
        <source xml:lang="en">OS X specific launch configuration attributes.</source>
        <target state="translated">OS X 特定的啟動設定屬性。</target>
      </trans-unit>
      <trans-unit id="debugLinuxConfiguration">
        <source xml:lang="en">Linux specific launch configuration attributes.</source>
        <target state="translated">Linux 特定的啟動設定屬性。</target>
      </trans-unit>
    </body>
  </file>
  <file original="src/vs/workbench/contrib/debug/browser/rawDebugSession" source-language="en" target-language="zh-Hant" datatype="plaintext">
    <body>
      <trans-unit id="noDebugAdapterStart">
        <source xml:lang="en">No debug adapter, can not start debug session.</source>
        <target state="translated">沒有任何偵錯配接器，無法啟動偵錯工作階段。</target>
      </trans-unit>
      <trans-unit id="noDebugAdapter">
        <source xml:lang="en">No debug adapter found. Can not send '{0}'.</source>
        <target state="translated">找不到任何偵錯配接器。無法傳送 '{0}'。</target>
      </trans-unit>
      <trans-unit id="moreInfo">
        <source xml:lang="en">More Info</source>
        <target state="translated">詳細資訊</target>
      </trans-unit>
    </body>
  </file>
  <file original="src/vs/workbench/contrib/debug/common/debugSchemas" source-language="en" target-language="zh-Hant" datatype="plaintext">
    <body>
      <trans-unit id="vscode.extension.contributes.debuggers">
        <source xml:lang="en">Contributes debug adapters.</source>
        <target state="translated">提供偵錯配接器。</target>
      </trans-unit>
      <trans-unit id="vscode.extension.contributes.debuggers.type">
        <source xml:lang="en">Unique identifier for this debug adapter.</source>
        <target state="translated">此偵錯配接器的唯一識別碼。</target>
      </trans-unit>
      <trans-unit id="vscode.extension.contributes.debuggers.label">
        <source xml:lang="en">Display name for this debug adapter.</source>
        <target state="translated">此偵錯配接器的顯示名稱。</target>
      </trans-unit>
      <trans-unit id="vscode.extension.contributes.debuggers.program">
        <source xml:lang="en">Path to the debug adapter program. Path is either absolute or relative to the extension folder.</source>
        <target state="translated">偵錯配接器程式的路徑。可以是延伸模組資料夾的絕對或相對路徑。</target>
      </trans-unit>
      <trans-unit id="vscode.extension.contributes.debuggers.args">
        <source xml:lang="en">Optional arguments to pass to the adapter.</source>
        <target state="translated">要傳遞至配接器的選擇性引數。</target>
      </trans-unit>
      <trans-unit id="vscode.extension.contributes.debuggers.runtime">
        <source xml:lang="en">Optional runtime in case the program attribute is not an executable but requires a runtime.</source>
        <target state="translated">程式屬性不是可執行檔但需要執行階段時的選擇性執行階段。</target>
      </trans-unit>
      <trans-unit id="vscode.extension.contributes.debuggers.runtimeArgs">
        <source xml:lang="en">Optional runtime arguments.</source>
        <target state="translated">選擇性執行階段引數。</target>
      </trans-unit>
      <trans-unit id="vscode.extension.contributes.debuggers.variables">
        <source xml:lang="en">Mapping from interactive variables (e.g. ${action.pickProcess}) in `launch.json` to a command.</source>
        <target state="translated">從 `launch.json` 中的互動式變數 (例如 ${action.pickProcess}) 對應至命令。</target>
      </trans-unit>
      <trans-unit id="vscode.extension.contributes.debuggers.initialConfigurations">
        <source xml:lang="en">Configurations for generating the initial 'launch.json'.</source>
        <target state="translated">組態，用於產生初始 'launch.json'。</target>
      </trans-unit>
      <trans-unit id="vscode.extension.contributes.debuggers.languages">
        <source xml:lang="en">List of languages for which the debug extension could be considered the "default debugger".</source>
        <target state="translated">可將偵錯延伸模組視為「預設偵錯工具」的語言清單。</target>
      </trans-unit>
      <trans-unit id="vscode.extension.contributes.debuggers.configurationSnippets">
        <source xml:lang="en">Snippets for adding new configurations in 'launch.json'.</source>
        <target state="translated">用於在 'launch.json' 中新增組態的程式碼片段。</target>
      </trans-unit>
      <trans-unit id="vscode.extension.contributes.debuggers.configurationAttributes">
        <source xml:lang="en">JSON schema configurations for validating 'launch.json'.</source>
        <target state="translated">JSON 結構描述組態，用於驗證 'launch.json'。</target>
      </trans-unit>
      <trans-unit id="vscode.extension.contributes.debuggers.windows">
        <source xml:lang="en">Windows specific settings.</source>
        <target state="translated">Windows 特定設定。</target>
      </trans-unit>
      <trans-unit id="vscode.extension.contributes.debuggers.windows.runtime">
        <source xml:lang="en">Runtime used for Windows.</source>
        <target state="translated">用於 Windows 的執行階段。</target>
      </trans-unit>
      <trans-unit id="vscode.extension.contributes.debuggers.osx">
        <source xml:lang="en">macOS specific settings.</source>
        <target state="translated">macOS 特定設定。</target>
      </trans-unit>
      <trans-unit id="vscode.extension.contributes.debuggers.osx.runtime">
        <source xml:lang="en">Runtime used for macOS.</source>
        <target state="translated">用於 macOS 的執行階段。</target>
      </trans-unit>
      <trans-unit id="vscode.extension.contributes.debuggers.linux">
        <source xml:lang="en">Linux specific settings.</source>
        <target state="translated">Linux 特定設定。</target>
      </trans-unit>
      <trans-unit id="vscode.extension.contributes.debuggers.linux.runtime">
        <source xml:lang="en">Runtime used for Linux.</source>
        <target state="translated">用於 Linux 的執行階段。</target>
      </trans-unit>
      <trans-unit id="vscode.extension.contributes.breakpoints">
        <source xml:lang="en">Contributes breakpoints.</source>
        <target state="translated">提供中斷點。</target>
      </trans-unit>
      <trans-unit id="vscode.extension.contributes.breakpoints.language">
        <source xml:lang="en">Allow breakpoints for this language.</source>
        <target state="translated">允許此語言使用中斷點。</target>
      </trans-unit>
      <trans-unit id="presentation">
        <source xml:lang="en">Presentation options on how to show this configuration in the debug configuration dropdown and the command palette.</source>
        <target state="translated">簡報選項，用來表達如何在偵錯組態下拉式清單和命令選擇區內顯示此組態。</target>
      </trans-unit>
      <trans-unit id="presentation.hidden">
        <source xml:lang="en">Controls if this configuration should be shown in the configuration dropdown and the command palette.</source>
        <target state="translated">控制此組態是否應在組態下拉式清單和命令選擇區內顯示。</target>
      </trans-unit>
      <trans-unit id="presentation.group">
        <source xml:lang="en">Group that this configuration belongs to. Used for grouping and sorting in the configuration dropdown and the command palette.</source>
        <target state="translated">這個組態所屬的群組。用於在組態下拉式清單和命令選擇區中進行分組和排序。</target>
      </trans-unit>
      <trans-unit id="presentation.order">
        <source xml:lang="en">Order of this configuration within a group. Used for grouping and sorting in the configuration dropdown and the command palette.</source>
        <target state="translated">這個組態在群組中的順序。用於在組態下拉式清單和命令選擇區中進行分組和排序。</target>
      </trans-unit>
      <trans-unit id="app.launch.json.title">
        <source xml:lang="en">Launch</source>
        <target state="translated">啟動</target>
      </trans-unit>
      <trans-unit id="app.launch.json.version">
        <source xml:lang="en">Version of this file format.</source>
        <target state="translated">此檔案格式的版本。</target>
      </trans-unit>
      <trans-unit id="app.launch.json.configurations">
        <source xml:lang="en">List of configurations. Add new configurations or edit existing ones by using IntelliSense.</source>
        <target state="translated">組態清單。請使用 IntelliSense 新增新的組態或編輯現有的組態。</target>
      </trans-unit>
      <trans-unit id="app.launch.json.compounds">
        <source xml:lang="en">List of compounds. Each compound references multiple configurations which will get launched together.</source>
        <target state="translated">複合的清單。每個複合都參考將會同時啟動的多重組態。</target>
      </trans-unit>
      <trans-unit id="app.launch.json.compound.name">
        <source xml:lang="en">Name of compound. Appears in the launch configuration drop down menu.</source>
        <target state="translated">複合的名稱。顯示於啟動組態下拉式功能表。</target>
      </trans-unit>
      <trans-unit id="useUniqueNames">
        <source xml:lang="en">Please use unique configuration names.</source>
        <target state="translated">請使用唯一的組態名稱。</target>
      </trans-unit>
      <trans-unit id="app.launch.json.compound.folder">
        <source xml:lang="en">Name of folder in which the compound is located.</source>
        <target state="translated">複合所在的資料夾名稱。</target>
      </trans-unit>
      <trans-unit id="app.launch.json.compounds.configurations">
        <source xml:lang="en">Names of configurations that will be started as part of this compound.</source>
        <target state="translated">將會作為此複合一部份而啟動之組態的名稱。</target>
      </trans-unit>
      <trans-unit id="compoundPrelaunchTask">
        <source xml:lang="en">Task to run before any of the compound configurations start.</source>
        <target state="translated">要在任何複合設定開始前執行的工作。</target>
      </trans-unit>
    </body>
  </file>
</xliff>