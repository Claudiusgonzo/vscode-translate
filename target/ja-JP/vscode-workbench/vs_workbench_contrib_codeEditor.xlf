<?xml version="1.0" encoding="utf-8"?>
<xliff version="1.2" xmlns="urn:oasis:names:tc:xliff:document:1.2">
  <file original="src/vs/workbench/contrib/codeEditor/electron-browser/selectionClipboard" source-language="en" target-language="ja" datatype="plaintext">
    <body>
      <trans-unit id="actions.pasteSelectionClipboard">
        <source xml:lang="en">Paste Selection Clipboard</source>
        <target state="translated">選択範囲クリップボードの貼り付け</target>
      </trans-unit>
    </body>
  </file>
  <file original="src/vs/workbench/contrib/codeEditor/browser/inspectKeybindings" source-language="en" target-language="ja" datatype="plaintext">
    <body>
      <trans-unit id="workbench.action.inspectKeyMap">
        <source xml:lang="en">Developer: Inspect Key Mappings</source>
        <target state="translated">開発者: キー マッピングを検査する</target>
      </trans-unit>
      <trans-unit id="workbench.action.inspectKeyMapJSON">
        <source xml:lang="en">Inspect Key Mappings (JSON)</source>
        <target state="translated">キー マッピングの検査 (JSON)</target>
      </trans-unit>
      <trans-unit id="developer">
        <source xml:lang="en">Developer</source>
        <target state="translated">開発者</target>
      </trans-unit>
    </body>
  </file>
  <file original="src/vs/workbench/contrib/codeEditor/browser/diffEditorHelper" source-language="en" target-language="ja" datatype="plaintext">
    <body>
      <trans-unit id="hintTimeout">
        <source xml:lang="en">The diff algorithm was stopped early (after {0} ms.)</source>
        <target state="translated">差分アルゴリズムは早く停止しました ({0} ミリ秒後)。</target>
      </trans-unit>
      <trans-unit id="removeTimeout">
        <source xml:lang="en">Remove limit</source>
        <target state="translated">制限の削除</target>
      </trans-unit>
      <trans-unit id="hintWhitespace">
        <source xml:lang="en">Show Whitespace Differences</source>
        <target state="translated">スペースによる違いを表示する</target>
      </trans-unit>
    </body>
  </file>
  <file original="src/vs/workbench/contrib/codeEditor/browser/toggleMultiCursorModifier" source-language="en" target-language="ja" datatype="plaintext">
    <body>
      <trans-unit id="toggleLocation">
        <source xml:lang="en">Toggle Multi-Cursor Modifier</source>
        <target state="translated">マルチカーソル修飾子の切り替え</target>
      </trans-unit>
      <trans-unit id="miMultiCursorAlt">
        <source xml:lang="en">Switch to Alt+Click for Multi-Cursor</source>
        <target state="translated">マルチ カーソルを Alt+Click に切り替える</target>
      </trans-unit>
      <trans-unit id="miMultiCursorCmd">
        <source xml:lang="en">Switch to Cmd+Click for Multi-Cursor</source>
        <target state="translated">マルチ カーソルを Cmd+Click に切り替える</target>
      </trans-unit>
      <trans-unit id="miMultiCursorCtrl">
        <source xml:lang="en">Switch to Ctrl+Click for Multi-Cursor</source>
        <target state="translated">マルチ カーソルを Ctrl+Click に切り替える</target>
      </trans-unit>
    </body>
  </file>
  <file original="src/vs/workbench/contrib/codeEditor/browser/toggleMinimap" source-language="en" target-language="ja" datatype="plaintext">
    <body>
      <trans-unit id="toggleMinimap">
        <source xml:lang="en">Toggle Minimap</source>
        <target state="translated">ミニマップの切り替え</target>
      </trans-unit>
      <trans-unit id="view">
        <source xml:lang="en">View</source>
        <target state="translated">ビュー</target>
      </trans-unit>
      <trans-unit id="miShowMinimap">
        <source xml:lang="en">Show &amp;&amp;Minimap</source>
        <target state="translated">ミニマップを表示(&amp;&amp;M)</target>
        <note>&amp;&amp; denotes a mnemonic</note>
      </trans-unit>
    </body>
  </file>
  <file original="src/vs/workbench/contrib/codeEditor/browser/toggleColumnSelection" source-language="en" target-language="ja" datatype="plaintext">
    <body>
      <trans-unit id="toggleColumnSelection">
        <source xml:lang="en">Toggle Column Selection Mode</source>
        <target state="translated">列選択モードの切り替え</target>
      </trans-unit>
      <trans-unit id="view">
        <source xml:lang="en">View</source>
        <target state="translated">ビュー</target>
      </trans-unit>
      <trans-unit id="miColumnSelection">
        <source xml:lang="en">Column &amp;&amp;Selection Mode</source>
        <target state="translated">列選択モード(&amp;&amp;S)</target>
        <note>&amp;&amp; denotes a mnemonic</note>
      </trans-unit>
    </body>
  </file>
  <file original="src/vs/workbench/contrib/codeEditor/browser/toggleRenderControlCharacter" source-language="en" target-language="ja" datatype="plaintext">
    <body>
      <trans-unit id="toggleRenderControlCharacters">
        <source xml:lang="en">Toggle Control Characters</source>
        <target state="translated">制御文字の切り替え</target>
      </trans-unit>
      <trans-unit id="view">
        <source xml:lang="en">View</source>
        <target state="translated">ビュー</target>
      </trans-unit>
      <trans-unit id="miToggleRenderControlCharacters">
        <source xml:lang="en">Render &amp;&amp;Control Characters</source>
        <target state="translated">制御文字を表示(&amp;&amp;C)</target>
        <note>&amp;&amp; denotes a mnemonic</note>
      </trans-unit>
    </body>
  </file>
  <file original="src/vs/workbench/contrib/codeEditor/browser/largeFileOptimizations" source-language="en" target-language="ja" datatype="plaintext">
    <body>
      <trans-unit id="largeFile">
        <source xml:lang="en">{0}: tokenization, wrapping and folding have been turned off for this large file in order to reduce memory usage and avoid freezing or crashing.</source>
        <target state="translated">{0}: トークン化、折り返し、折りたたみは、メモリの使用量を減らしてフリーズやクラッシュを回避するために、この大きいファイルで無効化されています。</target>
        <note>Variable 0 will be a file name.</note>
      </trans-unit>
      <trans-unit id="removeOptimizations">
        <source xml:lang="en">Forcefully enable features</source>
        <target state="translated">強制的に機能を有効化</target>
      </trans-unit>
      <trans-unit id="reopenFilePrompt">
        <source xml:lang="en">Please reopen file in order for this setting to take effect.</source>
        <target state="translated">この設定を有効にするためにファイルを再度開いてください。</target>
      </trans-unit>
    </body>
  </file>
  <file original="src/vs/workbench/contrib/codeEditor/browser/toggleRenderWhitespace" source-language="en" target-language="ja" datatype="plaintext">
    <body>
      <trans-unit id="toggleRenderWhitespace">
        <source xml:lang="en">Toggle Render Whitespace</source>
        <target state="translated">空白文字の表示の切り替え</target>
      </trans-unit>
      <trans-unit id="view">
        <source xml:lang="en">View</source>
        <target state="translated">ビュー</target>
      </trans-unit>
      <trans-unit id="miToggleRenderWhitespace">
        <source xml:lang="en">&amp;&amp;Render Whitespace</source>
        <target state="translated">空白を表示(&amp;&amp;R)</target>
        <note>&amp;&amp; denotes a mnemonic</note>
      </trans-unit>
    </body>
  </file>
  <file original="src/vs/workbench/contrib/codeEditor/browser/accessibility/accessibility" source-language="en" target-language="ja" datatype="plaintext">
    <body>
      <trans-unit id="emergencyConfOn">
        <source xml:lang="en">Now changing the setting `editor.accessibilitySupport` to 'on'.</source>
        <target state="translated">現在 `editor.accessibilitySupport` 設定を 'on' に変更しています。</target>
      </trans-unit>
      <trans-unit id="openingDocs">
        <source xml:lang="en">Now opening the VS Code Accessibility documentation page.</source>
        <target state="translated">現在 VS Code のアクセシビリティ ドキュメントページを開いています。</target>
      </trans-unit>
      <trans-unit id="introMsg">
        <source xml:lang="en">Thank you for trying out VS Code's accessibility options.</source>
        <target state="translated">VS Code のアクセシビリティ オプションをご利用いただき、ありがとうございます。</target>
      </trans-unit>
      <trans-unit id="status">
        <source xml:lang="en">Status:</source>
        <target state="translated">状態:</target>
      </trans-unit>
      <trans-unit id="changeConfigToOnMac">
        <source xml:lang="en">To configure the editor to be permanently optimized for usage with a Screen Reader press Command+E now.</source>
        <target state="translated">スクリーン リーダーで使用するためにエディターを永続的に最適化するように設定するには、Command + E を押してください。</target>
      </trans-unit>
      <trans-unit id="changeConfigToOnWinLinux">
        <source xml:lang="en">To configure the editor to be permanently optimized for usage with a Screen Reader press Control+E now.</source>
        <target state="translated">スクリーン リーダーで使用するためにエディターを永続的に最適化するように設定するには、Control + E を押してください。</target>
      </trans-unit>
      <trans-unit id="auto_unknown">
        <source xml:lang="en">The editor is configured to use platform APIs to detect when a Screen Reader is attached, but the current runtime does not support this.</source>
        <target state="translated">エディターは、プラットフォーム API を使用してスクリーン リーダーがいつ接続されたかを検出するように設定されていますが、現在のランタイムはこれをサポートしていません。</target>
      </trans-unit>
      <trans-unit id="auto_on">
        <source xml:lang="en">The editor has automatically detected a Screen Reader is attached.</source>
        <target state="translated">エディターはスクリーン リーダーの接続を自動検出しました。</target>
      </trans-unit>
      <trans-unit id="auto_off">
        <source xml:lang="en">The editor is configured to automatically detect when a Screen Reader is attached, which is not the case at this time.</source>
        <target state="translated">エディターは、スクリーン リーダーが接続されると自動的に検出するように構成されていますが、今回は検出できませんでした。</target>
      </trans-unit>
      <trans-unit id="configuredOn">
        <source xml:lang="en">The editor is configured to be permanently optimized for usage with a Screen Reader - you can change this by editing the setting `editor.accessibilitySupport`.</source>
        <target state="translated">エディターはスクリーン リーダーで使用するために永続的に最適化されるように設定されています。これは `editor.accessibilitySupport` の設定を編集することで変更できます。</target>
      </trans-unit>
      <trans-unit id="configuredOff">
        <source xml:lang="en">The editor is configured to never be optimized for usage with a Screen Reader.</source>
        <target state="translated">エディターはスクリーン リーダー向けに最適化しないように構成されています。</target>
      </trans-unit>
      <trans-unit id="tabFocusModeOnMsg">
        <source xml:lang="en">Pressing Tab in the current editor will move focus to the next focusable element. Toggle this behavior by pressing {0}.</source>
        <target state="translated">現在のエディターで Tab キーを押すと、次のフォーカス可能な要素にフォーカスを移動します。{0} を押すと、この動作が切り替わります。</target>
      </trans-unit>
      <trans-unit id="tabFocusModeOnMsgNoKb">
        <source xml:lang="en">Pressing Tab in the current editor will move focus to the next focusable element. The command {0} is currently not triggerable by a keybinding.</source>
        <target state="translated">現在のエディターで Tab キーを押すと、次のフォーカス可能な要素にフォーカスを移動します。コマンド {0} は、キー バインドでは現在トリガーできません。</target>
      </trans-unit>
      <trans-unit id="tabFocusModeOffMsg">
        <source xml:lang="en">Pressing Tab in the current editor will insert the tab character. Toggle this behavior by pressing {0}.</source>
        <target state="translated">現在のエディターで Tab キーを押すと、タブ文字が挿入されます。{0} を押すと、この動作が切り替わります。</target>
      </trans-unit>
      <trans-unit id="tabFocusModeOffMsgNoKb">
        <source xml:lang="en">Pressing Tab in the current editor will insert the tab character. The command {0} is currently not triggerable by a keybinding.</source>
        <target state="translated">現在のエディターで Tab キーを押すと、タブ文字が挿入されます。コマンド {0} は、キー バインドでは現在トリガーできません。</target>
      </trans-unit>
      <trans-unit id="openDocMac">
        <source xml:lang="en">Press Command+H now to open a browser window with more VS Code information related to Accessibility.</source>
        <target state="translated">command + H キーを押して、ブラウザー ウィンドウを今すぐ開き、アクセシビリティに関連する他の VS Code 情報を確認します。</target>
      </trans-unit>
      <trans-unit id="openDocWinLinux">
        <source xml:lang="en">Press Control+H now to open a browser window with more VS Code information related to Accessibility.</source>
        <target state="translated">エディターのアクセシビリティに関する詳細情報が記されたブラウザー ウィンドウを開くには、Control+H を押してください。</target>
      </trans-unit>
      <trans-unit id="outroMsg">
        <source xml:lang="en">You can dismiss this tooltip and return to the editor by pressing Escape or Shift+Escape.</source>
        <target state="translated">Esc キー か Shift+Esc を押すと、ヒントを消してエディターに戻ることができます。</target>
      </trans-unit>
      <trans-unit id="ShowAccessibilityHelpAction">
        <source xml:lang="en">Show Accessibility Help</source>
        <target state="translated">アクセシビリティのヘルプを表示します</target>
      </trans-unit>
    </body>
  </file>
  <file original="src/vs/workbench/contrib/codeEditor/browser/toggleWordWrap" source-language="en" target-language="ja" datatype="plaintext">
    <body>
      <trans-unit id="toggle.wordwrap">
        <source xml:lang="en">View: Toggle Word Wrap</source>
        <target state="translated">表示: [右端で折り返す] の設定/解除</target>
      </trans-unit>
      <trans-unit id="wordWrap.notInDiffEditor">
        <source xml:lang="en">Cannot toggle word wrap in a diff editor.</source>
        <target state="translated">差分エディターで折り返しの切り替えができません。</target>
      </trans-unit>
      <trans-unit id="unwrapMinified">
        <source xml:lang="en">Disable wrapping for this file</source>
        <target state="translated">このファイルでの折り返しを無効にする</target>
      </trans-unit>
      <trans-unit id="wrapMinified">
        <source xml:lang="en">Enable wrapping for this file</source>
        <target state="translated">このファイルでの折り返しを有効にする</target>
      </trans-unit>
      <trans-unit id="miToggleWordWrap">
        <source xml:lang="en">Toggle &amp;&amp;Word Wrap</source>
        <target state="translated">折り返しの切り替え(&amp;&amp;W)</target>
        <note>&amp;&amp; denotes a mnemonic</note>
      </trans-unit>
    </body>
  </file>
  <file original="src/vs/workbench/contrib/codeEditor/browser/saveParticipants" source-language="en" target-language="ja" datatype="plaintext">
    <body>
      <trans-unit id="formatting">
        <source xml:lang="en">Running '{0}' Formatter ([configure](command:workbench.action.openSettings?%5B%22editor.formatOnSave%22%5D)).</source>
        <target state="translated">'{0}' フォーマッタ([構成](command:workbench.action.openSettings?%5B%22editor.formatOnSave%22%5D))を実行しています。</target>
      </trans-unit>
      <trans-unit id="codeaction">
        <source xml:lang="en">Quick Fixes</source>
        <target state="translated">クイック修正</target>
      </trans-unit>
      <trans-unit id="codeaction.get">
        <source xml:lang="en">Getting code actions from '{0}' ([configure](command:workbench.action.openSettings?%5B%22editor.codeActionsOnSave%22%5D)).</source>
        <target state="translated">'{0}' ([構成](command:workbench.action.openSettings?%5B%22editor.codeActionsOnSave%22%5D))からコード アクションを取得します。</target>
      </trans-unit>
      <trans-unit id="codeAction.apply">
        <source xml:lang="en">Applying code action '{0}'.</source>
        <target state="translated">コード アクション '{0}' を適用しています。</target>
      </trans-unit>
    </body>
  </file>
  <file original="src/vs/workbench/contrib/codeEditor/browser/languageConfigurationExtensionPoint" source-language="en" target-language="ja" datatype="plaintext">
    <body>
      <trans-unit id="parseErrors">
        <source xml:lang="en">Errors parsing {0}: {1}</source>
        <target state="translated">{0} を解析中のエラー: {1}</target>
      </trans-unit>
      <trans-unit id="formatError">
        <source xml:lang="en">{0}: Invalid format, JSON object expected.</source>
        <target state="translated">{0}: 無効な形式です。JSON オブジェクトが必要です。</target>
      </trans-unit>
      <trans-unit id="schema.openBracket">
        <source xml:lang="en">The opening bracket character or string sequence.</source>
        <target state="translated">左角かっこまたは文字列シーケンス。</target>
      </trans-unit>
      <trans-unit id="schema.closeBracket">
        <source xml:lang="en">The closing bracket character or string sequence.</source>
        <target state="translated">右角かっこまたは文字列シーケンス。</target>
      </trans-unit>
      <trans-unit id="schema.comments">
        <source xml:lang="en">Defines the comment symbols</source>
        <target state="translated">コメント記号を定義します。</target>
      </trans-unit>
      <trans-unit id="schema.blockComments">
        <source xml:lang="en">Defines how block comments are marked.</source>
        <target state="translated">ブロック コメントのマーク方法を定義します。</target>
      </trans-unit>
      <trans-unit id="schema.blockComment.begin">
        <source xml:lang="en">The character sequence that starts a block comment.</source>
        <target state="translated">ブロック コメントを開始する文字シーケンス。</target>
      </trans-unit>
      <trans-unit id="schema.blockComment.end">
        <source xml:lang="en">The character sequence that ends a block comment.</source>
        <target state="translated">ブロック コメントを終了する文字シーケンス。</target>
      </trans-unit>
      <trans-unit id="schema.lineComment">
        <source xml:lang="en">The character sequence that starts a line comment.</source>
        <target state="translated">行コメントを開始する文字シーケンス。</target>
      </trans-unit>
      <trans-unit id="schema.brackets">
        <source xml:lang="en">Defines the bracket symbols that increase or decrease the indentation.</source>
        <target state="translated">インデントを増減する角かっこを定義します。</target>
      </trans-unit>
      <trans-unit id="schema.autoClosingPairs">
        <source xml:lang="en">Defines the bracket pairs. When a opening bracket is entered, the closing bracket is inserted automatically.</source>
        <target state="translated">角かっこのペアを定義します。左角かっこが入力されると、右角かっこが自動的に挿入されます。</target>
      </trans-unit>
      <trans-unit id="schema.autoClosingPairs.notIn">
        <source xml:lang="en">Defines a list of scopes where the auto pairs are disabled.</source>
        <target state="translated">自動ペアが無効なスコープの一覧を定義します。</target>
      </trans-unit>
      <trans-unit id="schema.autoCloseBefore">
        <source xml:lang="en">Defines what characters must be after the cursor in order for bracket or quote autoclosing to occur when using the 'languageDefined' autoclosing setting. This is typically the set of characters which can not start an expression.</source>
        <target state="translated">'languageDefined' 自動閉じ設定を使用しているときに、かっこや引用符の自動閉じを行うためにカーソルの後ろに置かれる文字を定義します。これは通常、式を開始しない文字のセットです。</target>
      </trans-unit>
      <trans-unit id="schema.surroundingPairs">
        <source xml:lang="en">Defines the bracket pairs that can be used to surround a selected string.</source>
        <target state="translated">選択文字列を囲むときに使用できる角かっこのペアを定義します。</target>
      </trans-unit>
      <trans-unit id="schema.wordPattern">
        <source xml:lang="en">Defines what is considered to be a word in the programming language.</source>
        <target state="translated">プログラミング言語で単語とみなされるものを定義します。</target>
      </trans-unit>
      <trans-unit id="schema.wordPattern.pattern">
        <source xml:lang="en">The RegExp pattern used to match words.</source>
        <target state="translated">言葉の照合に使用する正規表現パターン。</target>
      </trans-unit>
      <trans-unit id="schema.wordPattern.flags">
        <source xml:lang="en">The RegExp flags used to match words.</source>
        <target state="translated">言葉の照合に使用する正規表現フラグ。</target>
      </trans-unit>
      <trans-unit id="schema.wordPattern.flags.errorMessage">
        <source xml:lang="en">Must match the pattern `/^([gimuy]+)$/`.</source>
        <target state="translated">`/^([gimuy]+)$/` パターンに一致する必要があります。</target>
      </trans-unit>
      <trans-unit id="schema.indentationRules">
        <source xml:lang="en">The language's indentation settings.</source>
        <target state="translated">言語のインデント設定。</target>
      </trans-unit>
      <trans-unit id="schema.indentationRules.increaseIndentPattern">
        <source xml:lang="en">If a line matches this pattern, then all the lines after it should be indented once (until another rule matches).</source>
        <target state="translated">ある行がこのパターンと一致する場合は、それ以降のすべての行を一度インデントする必要があります (別のルールが一致するまで)。</target>
      </trans-unit>
      <trans-unit id="schema.indentationRules.increaseIndentPattern.pattern">
        <source xml:lang="en">The RegExp pattern for increaseIndentPattern.</source>
        <target state="translated">increaseIndentPattern に使用する正規表現パターン。</target>
      </trans-unit>
      <trans-unit id="schema.indentationRules.increaseIndentPattern.flags">
        <source xml:lang="en">The RegExp flags for increaseIndentPattern.</source>
        <target state="translated">increaseIndentPattern に使用する正規表現フラグ。</target>
      </trans-unit>
      <trans-unit id="schema.indentationRules.increaseIndentPattern.errorMessage">
        <source xml:lang="en">Must match the pattern `/^([gimuy]+)$/`.</source>
        <target state="translated">`/^([gimuy]+)$/` パターンに一致する必要があります。</target>
      </trans-unit>
      <trans-unit id="schema.indentationRules.decreaseIndentPattern">
        <source xml:lang="en">If a line matches this pattern, then all the lines after it should be unindented once (until another rule matches).</source>
        <target state="translated">行がこのパターンに一致する場合、それ以後のすべての行はいったんインデント解除される必要があります (別のルールが一致するまで)。</target>
      </trans-unit>
      <trans-unit id="schema.indentationRules.decreaseIndentPattern.pattern">
        <source xml:lang="en">The RegExp pattern for decreaseIndentPattern.</source>
        <target state="translated">decreaseIndentPattern に使用する正規表現パターン。</target>
      </trans-unit>
      <trans-unit id="schema.indentationRules.decreaseIndentPattern.flags">
        <source xml:lang="en">The RegExp flags for decreaseIndentPattern.</source>
        <target state="translated">decreaseIndentPattern に使用する正規表現フラグ。</target>
      </trans-unit>
      <trans-unit id="schema.indentationRules.decreaseIndentPattern.errorMessage">
        <source xml:lang="en">Must match the pattern `/^([gimuy]+)$/`.</source>
        <target state="translated">`/^([gimuy]+)$/` パターンに一致する必要があります。</target>
      </trans-unit>
      <trans-unit id="schema.indentationRules.indentNextLinePattern">
        <source xml:lang="en">If a line matches this pattern, then **only the next line** after it should be indented once.</source>
        <target state="translated">ある行がこのパターンと一致する場合は、**次の行のみ** を一度インデントする必要があります。</target>
      </trans-unit>
      <trans-unit id="schema.indentationRules.indentNextLinePattern.pattern">
        <source xml:lang="en">The RegExp pattern for indentNextLinePattern.</source>
        <target state="translated">indentNextLinePattern に使用する正規表現パターン。</target>
      </trans-unit>
      <trans-unit id="schema.indentationRules.indentNextLinePattern.flags">
        <source xml:lang="en">The RegExp flags for indentNextLinePattern.</source>
        <target state="translated">indentNextLinePattern に使用する正規表現フラグ。</target>
      </trans-unit>
      <trans-unit id="schema.indentationRules.indentNextLinePattern.errorMessage">
        <source xml:lang="en">Must match the pattern `/^([gimuy]+)$/`.</source>
        <target state="translated">`/^([gimuy]+)$/` パターンに一致する必要があります。</target>
      </trans-unit>
      <trans-unit id="schema.indentationRules.unIndentedLinePattern">
        <source xml:lang="en">If a line matches this pattern, then its indentation should not be changed and it should not be evaluated against the other rules.</source>
        <target state="translated">ある行がこのパターンと一致する場合は、そのインデントを変更してはならず、他のルールに対して評価してもなりません。</target>
      </trans-unit>
      <trans-unit id="schema.indentationRules.unIndentedLinePattern.pattern">
        <source xml:lang="en">The RegExp pattern for unIndentedLinePattern.</source>
        <target state="translated">unIndentedLinePattern に使用する正規表現パターン。</target>
      </trans-unit>
      <trans-unit id="schema.indentationRules.unIndentedLinePattern.flags">
        <source xml:lang="en">The RegExp flags for unIndentedLinePattern.</source>
        <target state="translated">unIndentedLinePattern に使用する正規表現フラグ。</target>
      </trans-unit>
      <trans-unit id="schema.indentationRules.unIndentedLinePattern.errorMessage">
        <source xml:lang="en">Must match the pattern `/^([gimuy]+)$/`.</source>
        <target state="translated">`/^([gimuy]+)$/` パターンに一致する必要があります。</target>
      </trans-unit>
      <trans-unit id="schema.folding">
        <source xml:lang="en">The language's folding settings.</source>
        <target state="translated">言語の折り畳み設定。</target>
      </trans-unit>
      <trans-unit id="schema.folding.offSide">
        <source xml:lang="en">A language adheres to the off-side rule if blocks in that language are expressed by their indentation. If set, empty lines belong to the subsequent block.</source>
        <target state="translated">その言語のブロックがインデントで表現されている場合、言語はオフサイドルールに従います。 設定されている場合、空行は後続のブロックに属します。</target>
      </trans-unit>
      <trans-unit id="schema.folding.markers">
        <source xml:lang="en">Language specific folding markers such as '#region' and '#endregion'. The start and end regexes will be tested against the contents of all lines and must be designed efficiently</source>
        <target state="translated">'#region'や '#endregion'などの言語固有の折りたたみマーカー。開始と終了の正規表現はすべての行の内容に対してテストし効率的に設計してください。</target>
      </trans-unit>
      <trans-unit id="schema.folding.markers.start">
        <source xml:lang="en">The RegExp pattern for the start marker. The regexp must start with '^'.</source>
        <target state="translated">開始マーカーの正規表現パターン。 正規表現は '^' で始めてください。</target>
      </trans-unit>
      <trans-unit id="schema.folding.markers.end">
        <source xml:lang="en">The RegExp pattern for the end marker. The regexp must start with '^'.</source>
        <target state="translated">終了マーカーの正規表現パターン。 正規表現は '^' で始めてください。</target>
      </trans-unit>
    </body>
  </file>
  <file original="src/vs/workbench/contrib/codeEditor/browser/inspectEditorTokens/inspectEditorTokens" source-language="en" target-language="ja" datatype="plaintext">
    <body>
      <trans-unit id="inspectEditorTokens">
        <source xml:lang="en">Developer: Inspect Editor Tokens and Scopes</source>
        <target state="translated">開発者: エディター トークンとスコープの検査</target>
      </trans-unit>
      <trans-unit id="inspectTMScopesWidget.loading">
        <source xml:lang="en">Loading...</source>
        <target state="translated">読み込んでいます...</target>
      </trans-unit>
    </body>
  </file>
  <file original="src/vs/workbench/contrib/codeEditor/browser/find/simpleFindWidget" source-language="en" target-language="ja" datatype="plaintext">
    <body>
      <trans-unit id="label.find">
        <source xml:lang="en">Find</source>
        <target state="translated">検索</target>
      </trans-unit>
      <trans-unit id="placeholder.find">
        <source xml:lang="en">Find</source>
        <target state="translated">検索</target>
      </trans-unit>
      <trans-unit id="label.previousMatchButton">
        <source xml:lang="en">Previous match</source>
        <target state="translated">前の検索結果</target>
      </trans-unit>
      <trans-unit id="label.nextMatchButton">
        <source xml:lang="en">Next match</source>
        <target state="translated">次の一致項目</target>
      </trans-unit>
      <trans-unit id="label.closeButton">
        <source xml:lang="en">Close</source>
        <target state="translated">閉じる</target>
      </trans-unit>
    </body>
  </file>
</xliff>