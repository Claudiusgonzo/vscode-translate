<?xml version="1.0" encoding="utf-8"?>
<xliff version="1.2" xmlns="urn:oasis:names:tc:xliff:document:1.2">
  <file original="src/vs/workbench/contrib/tasks/node/processRunnerDetector" source-language="en" target-language="zh-Hans" datatype="plaintext">
    <body>
      <trans-unit id="TaskSystemDetector.noGulpTasks">
        <source xml:lang="en">Running gulp --tasks-simple didn't list any tasks. Did you run npm install?</source>
        <target state="translated">正在运行的 gulp --tasks-simple 没有列出任何任务。你运行 npm 安装了吗?</target>
      </trans-unit>
      <trans-unit id="TaskSystemDetector.noJakeTasks">
        <source xml:lang="en">Running jake --tasks didn't list any tasks. Did you run npm install?</source>
        <target state="translated">正在运行的 jake --tasks 没有列出任何任务。你运行 npm 安装了吗?</target>
      </trans-unit>
      <trans-unit id="TaskSystemDetector.noGulpProgram">
        <source xml:lang="en">Gulp is not installed on your system. Run npm install -g gulp to install it.</source>
        <target state="translated">你的系统上没有安装 Gulp。运行 npm install -g gulp 以安装它。</target>
      </trans-unit>
      <trans-unit id="TaskSystemDetector.noJakeProgram">
        <source xml:lang="en">Jake is not installed on your system. Run npm install -g jake to install it.</source>
        <target state="translated">你的系统上没有安装 Jake。运行 npm install -g jake 以安装它。</target>
      </trans-unit>
      <trans-unit id="TaskSystemDetector.noGruntProgram">
        <source xml:lang="en">Grunt is not installed on your system. Run npm install -g grunt to install it.</source>
        <target state="translated">你的系统上没有安装 Grunt。运行 npm install -g grunt 以安装它。</target>
      </trans-unit>
      <trans-unit id="TaskSystemDetector.noProgram">
        <source xml:lang="en">Program {0} was not found. Message is {1}</source>
        <target state="translated">找不到程序 {0}。消息是 {1}</target>
      </trans-unit>
      <trans-unit id="TaskSystemDetector.buildTaskDetected">
        <source xml:lang="en">Build task named '{0}' detected.</source>
        <target state="translated">检测到名为“{0}”的生成任务。</target>
      </trans-unit>
      <trans-unit id="TaskSystemDetector.testTaskDetected">
        <source xml:lang="en">Test task named '{0}' detected.</source>
        <target state="translated">测试检测到的名为“{0}”的测试任务。</target>
      </trans-unit>
    </body>
  </file>
  <file original="src/vs/workbench/contrib/tasks/node/processTaskSystem" source-language="en" target-language="zh-Hans" datatype="plaintext">
    <body>
      <trans-unit id="version1_0">
        <source xml:lang="en">The task system is configured for version 0.1.0 (see tasks.json file), which can only execute custom tasks. Upgrade to version 2.0.0 to run the task: {0}</source>
        <target state="translated">任务系统配置的版本为 0.1.0 (可参见 tasks.json 文件)，只能执行自定义任务。请升级到版本 2.0.0 以运行任务: {0}</target>
      </trans-unit>
      <trans-unit id="TaskRunnerSystem.unknownError">
        <source xml:lang="en">A unknown error has occurred while executing a task. See task output log for details.</source>
        <target state="translated">在执行任务时发生未知错误。请参见任务输出日志了解详细信息。</target>
      </trans-unit>
      <trans-unit id="TaskRunnerSystem.watchingBuildTaskFinished">
        <source xml:lang="en">
Watching build tasks has finished.</source>
        <target state="translated">
监视生成任务已完成</target>
      </trans-unit>
      <trans-unit id="TaskRunnerSystem.childProcessError">
        <source xml:lang="en">Failed to launch external program {0} {1}.</source>
        <target state="translated">启动外部程序{0} {1}失败。</target>
      </trans-unit>
      <trans-unit id="TaskRunnerSystem.cancelRequested">
        <source xml:lang="en">
The task '{0}' was terminated per user request.</source>
        <target state="translated">已根据用户请求终止了任务'{0}'。</target>
      </trans-unit>
      <trans-unit id="unknownProblemMatcher">
        <source xml:lang="en">Problem matcher {0} can't be resolved. The matcher will be ignored</source>
        <target state="translated">无法解析问题匹配程序 {0}。此匹配程序将被忽略</target>
      </trans-unit>
    </body>
  </file>
  <file original="src/vs/workbench/contrib/tasks/browser/task.contribution" source-language="en" target-language="zh-Hans" datatype="plaintext">
    <body>
      <trans-unit id="tasksCategory">
        <source xml:lang="en">Tasks</source>
        <target state="translated">任务</target>
      </trans-unit>
      <trans-unit id="building">
        <source xml:lang="en">Building...</source>
        <target state="translated">正在生成...</target>
      </trans-unit>
      <trans-unit id="runningTasks">
        <source xml:lang="en">Show Running Tasks</source>
        <target state="translated">显示运行中的任务</target>
      </trans-unit>
      <trans-unit id="status.runningTasks">
        <source xml:lang="en">Running Tasks</source>
        <target state="translated">运行任务</target>
      </trans-unit>
      <trans-unit id="miRunTask">
        <source xml:lang="en">&amp;&amp;Run Task...</source>
        <target state="translated">运行任务(&amp;&amp;R)...</target>
        <note>&amp;&amp; denotes a mnemonic</note>
      </trans-unit>
      <trans-unit id="miBuildTask">
        <source xml:lang="en">Run &amp;&amp;Build Task...</source>
        <target state="translated">运行生成任务(&amp;&amp;B)...</target>
        <note>&amp;&amp; denotes a mnemonic</note>
      </trans-unit>
      <trans-unit id="miRunningTask">
        <source xml:lang="en">Show Runnin&amp;&amp;g Tasks...</source>
        <target state="translated">显示正在运行的任务(&amp;&amp;G)...</target>
        <note>&amp;&amp; denotes a mnemonic</note>
      </trans-unit>
      <trans-unit id="miRestartTask">
        <source xml:lang="en">R&amp;&amp;estart Running Task...</source>
        <target state="translated">重启正在运行的任务(&amp;&amp;E)...</target>
        <note>&amp;&amp; denotes a mnemonic</note>
      </trans-unit>
      <trans-unit id="miTerminateTask">
        <source xml:lang="en">&amp;&amp;Terminate Task...</source>
        <target state="translated">终止任务(&amp;&amp;T)...</target>
        <note>&amp;&amp; denotes a mnemonic</note>
      </trans-unit>
      <trans-unit id="miConfigureTask">
        <source xml:lang="en">&amp;&amp;Configure Tasks...</source>
        <target state="translated">配置任务(&amp;&amp;C)...</target>
        <note>&amp;&amp; denotes a mnemonic</note>
      </trans-unit>
      <trans-unit id="miConfigureBuildTask">
        <source xml:lang="en">Configure De&amp;&amp;fault Build Task...</source>
        <target state="translated">配置默认生成任务(&amp;&amp;F)...</target>
        <note>&amp;&amp; denotes a mnemonic</note>
      </trans-unit>
      <trans-unit id="workbench.action.tasks.openWorkspaceFileTasks">
        <source xml:lang="en">Open Workspace Tasks</source>
        <target state="translated">打开工作区任务</target>
      </trans-unit>
      <trans-unit id="ShowLogAction.label">
        <source xml:lang="en">Show Task Log</source>
        <target state="translated">显示任务日志</target>
      </trans-unit>
      <trans-unit id="RunTaskAction.label">
        <source xml:lang="en">Run Task</source>
        <target state="translated">运行任务</target>
      </trans-unit>
      <trans-unit id="ReRunTaskAction.label">
        <source xml:lang="en">Rerun Last Task</source>
        <target state="translated">重新运行上一个任务</target>
      </trans-unit>
      <trans-unit id="RestartTaskAction.label">
        <source xml:lang="en">Restart Running Task</source>
        <target state="translated">重启正在运行的任务</target>
      </trans-unit>
      <trans-unit id="ShowTasksAction.label">
        <source xml:lang="en">Show Running Tasks</source>
        <target state="translated">显示运行中的任务</target>
      </trans-unit>
      <trans-unit id="TerminateAction.label">
        <source xml:lang="en">Terminate Task</source>
        <target state="translated">终止任务</target>
      </trans-unit>
      <trans-unit id="BuildAction.label">
        <source xml:lang="en">Run Build Task</source>
        <target state="translated">运行生成任务</target>
      </trans-unit>
      <trans-unit id="TestAction.label">
        <source xml:lang="en">Run Test Task</source>
        <target state="translated">运行测试任务</target>
      </trans-unit>
      <trans-unit id="ConfigureDefaultBuildTask.label">
        <source xml:lang="en">Configure Default Build Task</source>
        <target state="translated">配置默认生成任务</target>
      </trans-unit>
      <trans-unit id="ConfigureDefaultTestTask.label">
        <source xml:lang="en">Configure Default Test Task</source>
        <target state="translated">配置默认测试任务</target>
      </trans-unit>
      <trans-unit id="workbench.action.tasks.openUserTasks">
        <source xml:lang="en">Open User Tasks</source>
        <target state="translated">打开用户任务</target>
      </trans-unit>
      <trans-unit id="quickOpen.task">
        <source xml:lang="en">Run Task</source>
        <target state="translated">运行任务</target>
      </trans-unit>
      <trans-unit id="tasksConfigurationTitle">
        <source xml:lang="en">Tasks</source>
        <target state="translated">任务</target>
      </trans-unit>
      <trans-unit id="task.problemMatchers.neverPrompt">
        <source xml:lang="en">Configures whether to show the problem matcher prompt when running a task. Set to `true` to never prompt, or use a dictionary of task types to turn off prompting only for specific task types.</source>
        <target state="translated">配置在运行任务时是否显示问题匹配器提示。设置为"true"从不提示，或使用任务类型的字典仅关闭特定任务类型的提示。</target>
      </trans-unit>
      <trans-unit id="task.problemMatchers.neverPrompt.boolean">
        <source xml:lang="en">Sets problem matcher prompting behavior for all tasks.</source>
        <target state="translated">为所有任务设置问题匹配器提示行为。</target>
      </trans-unit>
      <trans-unit id="task.problemMatchers.neverPrompt.array">
        <source xml:lang="en">An object containing task type-boolean pairs to never prompt for problem matchers on.</source>
        <target state="translated">包含任务类型布尔对的对象，从不提示有问题的匹配者。</target>
      </trans-unit>
      <trans-unit id="task.autoDetect">
        <source xml:lang="en">Controls enablement of `provideTasks` for all task provider extension. If the Tasks: Run Task command is slow, disabling auto detect for task providers may help. Individual extensions may also provide settings that disable auto detection.</source>
        <target state="translated">控制为所有任务提供程序扩展启用"提供任务"。如果"任务：运行任务"命令速度较慢，则禁用任务提供程序的自动检测可能会提供帮助。单个扩展还可以提供禁用自动检测的设置。</target>
      </trans-unit>
      <trans-unit id="task.slowProviderWarning">
        <source xml:lang="en">Configures whether a warning is shown when a provider is slow</source>
        <target state="translated">配置当提供程序速度较慢时是否显示警告</target>
      </trans-unit>
      <trans-unit id="task.slowProviderWarning.boolean">
        <source xml:lang="en">Sets the slow provider warning for all tasks.</source>
        <target state="translated">为所有任务设置慢速提供程序警告。</target>
      </trans-unit>
      <trans-unit id="task.slowProviderWarning.array">
        <source xml:lang="en">An array of task types to never show the slow provider warning.</source>
        <target state="translated">从不显示慢速提供程序警告的任务类型的数组。</target>
      </trans-unit>
      <trans-unit id="task.quickOpen.history">
        <source xml:lang="en">Controls the number of recent items tracked in task quick open dialog.</source>
        <target state="translated">控制任务快速打开对话框中跟踪的最近项目数。</target>
      </trans-unit>
      <trans-unit id="task.quickOpen.detail">
        <source xml:lang="en">Controls whether to show the task detail for task that have a detail in the Run Task quick pick.</source>
        <target state="translated">控制是否显示在“运行任务”快速选取中具有详细信息的任务的任务详细信息。</target>
      </trans-unit>
      <trans-unit id="task.quickOpen.skip">
        <source xml:lang="en">Controls whether the task quick pick is skipped when there is only one task to pick from.</source>
        <target state="translated">控制当只有一个任务要选取时是否跳过任务快速选取。</target>
      </trans-unit>
    </body>
  </file>
  <file original="src/vs/workbench/contrib/tasks/common/tasks" source-language="en" target-language="zh-Hans" datatype="plaintext">
    <body>
      <trans-unit id="TaskDefinition.missingRequiredProperty">
        <source xml:lang="en">Error: the task identifier '{0}' is missing the required property '{1}'. The task identifier will be ignored.</source>
        <target state="translated">错误: 任务标识符“{0}”缺失必要属性“{1}”。将忽略该标识符。</target>
      </trans-unit>
    </body>
  </file>
  <file original="src/vs/workbench/contrib/tasks/browser/taskQuickOpen" source-language="en" target-language="zh-Hans" datatype="plaintext">
    <body>
      <trans-unit id="tasksAriaLabel">
        <source xml:lang="en">Type the name of a task to run</source>
        <target state="translated">键入要运行的任务的名称</target>
      </trans-unit>
      <trans-unit id="noTasksMatching">
        <source xml:lang="en">No tasks matching</source>
        <target state="translated">没有匹配的任务</target>
      </trans-unit>
      <trans-unit id="noTasksFound">
        <source xml:lang="en">No tasks found</source>
        <target state="translated">找不到任务</target>
      </trans-unit>
    </body>
  </file>
  <file original="src/vs/workbench/contrib/tasks/common/jsonSchema_v1" source-language="en" target-language="zh-Hans" datatype="plaintext">
    <body>
      <trans-unit id="JsonSchema.version.deprecated">
        <source xml:lang="en">Task version 0.1.0 is deprecated. Please use 2.0.0</source>
        <target state="translated">任务版本 0.1.0 已被弃用。请使用 2.0.0</target>
      </trans-unit>
      <trans-unit id="JsonSchema.version">
        <source xml:lang="en">The config's version number</source>
        <target state="translated">配置的版本号</target>
      </trans-unit>
      <trans-unit id="JsonSchema._runner">
        <source xml:lang="en">The runner has graduated. Use the offical runner property</source>
        <target state="translated">此 runner 已完成使命。请使用官方 runner 属性</target>
      </trans-unit>
      <trans-unit id="JsonSchema.runner">
        <source xml:lang="en">Defines whether the task is executed as a process and the output is shown in the output window or inside the terminal.</source>
        <target state="translated">定义任务是否作为进程执行，输出显示在输出窗口还是在终端内。</target>
      </trans-unit>
      <trans-unit id="JsonSchema.windows">
        <source xml:lang="en">Windows specific command configuration</source>
        <target state="translated">Windows 特定的命令配置</target>
      </trans-unit>
      <trans-unit id="JsonSchema.mac">
        <source xml:lang="en">Mac specific command configuration</source>
        <target state="translated">Mac 特定的命令配置</target>
      </trans-unit>
      <trans-unit id="JsonSchema.linux">
        <source xml:lang="en">Linux specific command configuration</source>
        <target state="translated">Linux 特定的命令配置</target>
      </trans-unit>
      <trans-unit id="JsonSchema.shell">
        <source xml:lang="en">Specifies whether the command is a shell command or an external program. Defaults to false if omitted.</source>
        <target state="translated">指定命令是 shell 命令还是外部程序。如果省略，默认值是 false。</target>
      </trans-unit>
    </body>
  </file>
  <file original="src/vs/workbench/contrib/tasks/common/taskDefinitionRegistry" source-language="en" target-language="zh-Hans" datatype="plaintext">
    <body>
      <trans-unit id="TaskDefinition.description">
        <source xml:lang="en">The actual task type. Please note that types starting with a '$' are reserved for internal usage.</source>
        <target state="translated">实际任务类型。请注意，以 "$" 开头的类型仅保留内部使用。</target>
      </trans-unit>
      <trans-unit id="TaskDefinition.properties">
        <source xml:lang="en">Additional properties of the task type</source>
        <target state="translated">任务类型的其他属性</target>
      </trans-unit>
      <trans-unit id="TaskTypeConfiguration.noType">
        <source xml:lang="en">The task type configuration is missing the required 'taskType' property</source>
        <target state="translated">任务类型配置缺少必需的 "taskType" 属性</target>
      </trans-unit>
      <trans-unit id="TaskDefinitionExtPoint">
        <source xml:lang="en">Contributes task kinds</source>
        <target state="translated">配置任务种类</target>
      </trans-unit>
    </body>
  </file>
  <file original="src/vs/workbench/contrib/tasks/browser/runAutomaticTasks" source-language="en" target-language="zh-Hans" datatype="plaintext">
    <body>
      <trans-unit id="tasks.run.allowAutomatic">
        <source xml:lang="en">This folder has tasks ({0}) defined in 'tasks.json' that run automatically when you open this folder. Do you allow automatic tasks to run when you open this folder?</source>
        <target state="translated">此文件夹已在 "tasks.json" 中定义任务({0})；打开此文件夹时，这些任务将自动运行。是否自动任务在你打开此文件夹时运行?</target>
      </trans-unit>
      <trans-unit id="allow">
        <source xml:lang="en">Allow and run</source>
        <target state="translated">允许并运行</target>
      </trans-unit>
      <trans-unit id="disallow">
        <source xml:lang="en">Disallow</source>
        <target state="translated">Disallow</target>
      </trans-unit>
      <trans-unit id="openTasks">
        <source xml:lang="en">Open tasks.json</source>
        <target state="translated">打开tasks.json</target>
      </trans-unit>
      <trans-unit id="workbench.action.tasks.manageAutomaticRunning">
        <source xml:lang="en">Manage Automatic Tasks in Folder</source>
        <target state="translated">管理文件夹中的自动任务</target>
      </trans-unit>
      <trans-unit id="workbench.action.tasks.allowAutomaticTasks">
        <source xml:lang="en">Allow Automatic Tasks in Folder</source>
        <target state="translated">允许文件夹中的自动任务</target>
      </trans-unit>
      <trans-unit id="workbench.action.tasks.disallowAutomaticTasks">
        <source xml:lang="en">Disallow Automatic Tasks in Folder</source>
        <target state="translated">禁止文件夹中的自动任务</target>
      </trans-unit>
    </body>
  </file>
  <file original="src/vs/workbench/contrib/tasks/browser/quickOpen" source-language="en" target-language="zh-Hans" datatype="plaintext">
    <body>
      <trans-unit id="entryAriaLabel">
        <source xml:lang="en">{0}, tasks</source>
        <target state="translated">{0}，任务</target>
      </trans-unit>
      <trans-unit id="recentlyUsed">
        <source xml:lang="en">recently used tasks</source>
        <target state="translated">最近使用的任务</target>
      </trans-unit>
      <trans-unit id="configured">
        <source xml:lang="en">configured tasks</source>
        <target state="translated">已配置的任务</target>
      </trans-unit>
      <trans-unit id="detected">
        <source xml:lang="en">detected tasks</source>
        <target state="translated">检测到的任务</target>
      </trans-unit>
      <trans-unit id="customizeTask">
        <source xml:lang="en">Configure Task</source>
        <target state="translated">配置任务</target>
      </trans-unit>
    </body>
  </file>
  <file original="src/vs/workbench/contrib/tasks/common/taskConfiguration" source-language="en" target-language="zh-Hans" datatype="plaintext">
    <body>
      <trans-unit id="ConfigurationParser.invalidCWD">
        <source xml:lang="en">Warning: options.cwd must be of type string. Ignoring value {0}
</source>
        <target state="translated">警告: options.cwd 必须为 "string" 类型。将忽略值 {0}
</target>
      </trans-unit>
      <trans-unit id="ConfigurationParser.inValidArg">
        <source xml:lang="en">Error: command argument must either be a string or a quoted string. Provided value is:
{0}</source>
        <target state="translated">错误: 命令参数必须是字符串或有效引用的字符串。提供的值为: {0}</target>
      </trans-unit>
      <trans-unit id="ConfigurationParser.noShell">
        <source xml:lang="en">Warning: shell configuration is only supported when executing tasks in the terminal.</source>
        <target state="translated">警告: 仅当在终端中执行任务时支持 shell 配置。</target>
      </trans-unit>
      <trans-unit id="ConfigurationParser.noName">
        <source xml:lang="en">Error: Problem Matcher in declare scope must have a name:
{0}
</source>
        <target state="translated">错误: 声明范围内的问题匹配程序必须具有名称:
{0}
</target>
      </trans-unit>
      <trans-unit id="ConfigurationParser.unknownMatcherKind">
        <source xml:lang="en">Warning: the defined problem matcher is unknown. Supported types are string | ProblemMatcher | Array&lt;string | ProblemMatcher&gt;.
{0}
</source>
        <target state="translated">警告: 定义的问题匹配程序未知。支持的类型为 string | ProblemMatcher | Array&lt;string | ProblemMatcher&gt;.
{0}</target>
      </trans-unit>
      <trans-unit id="ConfigurationParser.invalidVariableReference">
        <source xml:lang="en">Error: Invalid problemMatcher reference: {0}
</source>
        <target state="translated">错误: 无效的 problemMatcher 引用: {0}
</target>
      </trans-unit>
      <trans-unit id="ConfigurationParser.noTaskType">
        <source xml:lang="en">Error: tasks configuration must have a type property. The configuration will be ignored.
{0}
</source>
        <target state="translated">错误: 任务必须提供 type 属性。将忽略该任务。
{0}
</target>
      </trans-unit>
      <trans-unit id="ConfigurationParser.noTypeDefinition">
        <source xml:lang="en">Error: there is no registered task type '{0}'. Did you miss to install an extension that provides a corresponding task provider?</source>
        <target state="translated">错误: 没有注册任务类型“{0}”。你是不是忘记安装含有相应任务提供器的扩展?</target>
      </trans-unit>
      <trans-unit id="ConfigurationParser.missingType">
        <source xml:lang="en">Error: the task configuration '{0}' is missing the required property 'type'. The task configuration will be ignored.</source>
        <target state="translated">错误: 任务配置“{0}”缺失必要属性 "type"。将忽略该配置。</target>
      </trans-unit>
      <trans-unit id="ConfigurationParser.incorrectType">
        <source xml:lang="en">Error: the task configuration '{0}' is using an unknown type. The task configuration will be ignored.</source>
        <target state="translated">错误: 任务配置“{0}”使用了未知类型。将忽略该配置。</target>
      </trans-unit>
      <trans-unit id="ConfigurationParser.notCustom">
        <source xml:lang="en">Error: tasks is not declared as a custom task. The configuration will be ignored.
{0}
</source>
        <target state="translated">错误: 任务未声明为自定义任务。将忽略配置。
{0}
</target>
      </trans-unit>
      <trans-unit id="ConfigurationParser.noTaskName">
        <source xml:lang="en">Error: a task must provide a label property. The task will be ignored.
{0}
</source>
        <target state="translated">错误: 任务必须提供 label 属性。将忽略该任务。
{0}
</target>
      </trans-unit>
      <trans-unit id="taskConfiguration.noCommandOrDependsOn">
        <source xml:lang="en">Error: the task '{0}' neither specifies a command nor a dependsOn property. The task will be ignored. Its definition is:
{1}</source>
        <target state="translated">错误：任务“{0}”既不指定命令，也不指定 dependsOn 属性。将忽略该任务。其定义为:
{1}</target>
      </trans-unit>
      <trans-unit id="taskConfiguration.noCommand">
        <source xml:lang="en">Error: the task '{0}' doesn't define a command. The task will be ignored. Its definition is:
{1}</source>
        <target state="translated">错误: 任务“{0}”未定义命令。将忽略该任务。其定义为:
{1}</target>
      </trans-unit>
      <trans-unit id="TaskParse.noOsSpecificGlobalTasks">
        <source xml:lang="en">Task version 2.0.0 doesn't support global OS specific tasks. Convert them to a task with a OS specific command. Affected tasks are:
{0}</source>
        <target state="translated">任务版本 2.0.0 不支持全局操作系统特定任务。请将他们转换为含有操作系统特定命令的任务。受影响的任务有:
{0}</target>
      </trans-unit>
    </body>
  </file>
  <file original="src/vs/workbench/contrib/tasks/common/jsonSchema_v2" source-language="en" target-language="zh-Hans" datatype="plaintext">
    <body>
      <trans-unit id="JsonSchema.shell">
        <source xml:lang="en">Specifies whether the command is a shell command or an external program. Defaults to false if omitted.</source>
        <target state="translated">指定命令是 shell 命令还是外部程序。如果省略，默认值是 false。</target>
      </trans-unit>
      <trans-unit id="JsonSchema.tasks.isShellCommand.deprecated">
        <source xml:lang="en">The property isShellCommand is deprecated. Use the type property of the task and the shell property in the options instead. See also the 1.14 release notes.</source>
        <target state="translated">isShellCommand 属性已被弃用。请改为使用任务的 type 属性和选项中的 shell 属性。另请参阅 1.14 发行说明。</target>
      </trans-unit>
      <trans-unit id="JsonSchema.tasks.dependsOn.identifier">
        <source xml:lang="en">The task identifier.</source>
        <target state="translated">任务标识符。</target>
      </trans-unit>
      <trans-unit id="JsonSchema.tasks.dependsOn.string">
        <source xml:lang="en">Another task this task depends on.</source>
        <target state="translated">此任务依赖的另一任务。</target>
      </trans-unit>
      <trans-unit id="JsonSchema.tasks.dependsOn.array">
        <source xml:lang="en">The other tasks this task depends on.</source>
        <target state="translated">此任务依赖的其他任务。</target>
      </trans-unit>
      <trans-unit id="JsonSchema.tasks.dependsOn">
        <source xml:lang="en">Either a string representing another task or an array of other tasks that this task depends on.</source>
        <target state="translated">表示另一个任务的字符串或此任务所依赖的其他任务的数组。</target>
      </trans-unit>
      <trans-unit id="JsonSchema.tasks.dependsOrder.parallel">
        <source xml:lang="en">Run all dependsOn tasks in parallel.</source>
        <target state="translated">并行运行所有 dependsOn 任务。</target>
      </trans-unit>
      <trans-unit id="JsonSchema.tasks.dependsOrder.sequence">
        <source xml:lang="en">Run all dependsOn tasks in sequence.</source>
        <target state="translated">按顺序运行所有 dependsOn 任务。</target>
      </trans-unit>
      <trans-unit id="JsonSchema.tasks.dependsOrder">
        <source xml:lang="en">Determines the order of the dependsOn tasks for this task. Note that this property is not recursive.</source>
        <target state="translated">确定此任务的依赖任务的顺序。请注意，此属性不是递归的。</target>
      </trans-unit>
      <trans-unit id="JsonSchema.tasks.detail">
        <source xml:lang="en">An optional description of a task that shows in the Run Task quick pick as a detail.</source>
        <target state="translated">任务的可选说明，在“运行任务”快速选取中作为详细信息显示。</target>
      </trans-unit>
      <trans-unit id="JsonSchema.tasks.presentation">
        <source xml:lang="en">Configures the panel that is used to present the task's output and reads its input.</source>
        <target state="translated">配置用于显示任务输出并读取其输入的面板。</target>
      </trans-unit>
      <trans-unit id="JsonSchema.tasks.presentation.echo">
        <source xml:lang="en">Controls whether the executed command is echoed to the panel. Default is true.</source>
        <target state="translated">控制是否将执行的命令显示到面板中。默认值为“true”。</target>
      </trans-unit>
      <trans-unit id="JsonSchema.tasks.presentation.focus">
        <source xml:lang="en">Controls whether the panel takes focus. Default is false. If set to true the panel is revealed as well.</source>
        <target state="translated">控制面板是否获取焦点。默认值为“false”。如果设置为“true”，面板也会显示。</target>
      </trans-unit>
      <trans-unit id="JsonSchema.tasks.presentation.revealProblems.always">
        <source xml:lang="en">Always reveals the problems panel when this task is executed.</source>
        <target state="translated">执行此任务时, 始终显示问题面板。</target>
      </trans-unit>
      <trans-unit id="JsonSchema.tasks.presentation.revealProblems.onProblem">
        <source xml:lang="en">Only reveals the problems panel if a problem is found.</source>
        <target state="translated">只有在发现问题时, 才会显示问题面板。</target>
      </trans-unit>
      <trans-unit id="JsonSchema.tasks.presentation.revealProblems.never">
        <source xml:lang="en">Never reveals the problems panel when this task is executed.</source>
        <target state="translated">执行此任务时, 永远不会显示问题面板。</target>
      </trans-unit>
      <trans-unit id="JsonSchema.tasks.presentation.revealProblems">
        <source xml:lang="en">Controls whether the problems panel is revealed when running this task or not. Takes precedence over option "reveal". Default is "never".</source>
        <target state="translated">控制在运行此任务时是否显示问题面板。优先于 "显示" 选项。默认值为 "从不"。</target>
      </trans-unit>
      <trans-unit id="JsonSchema.tasks.presentation.reveal.always">
        <source xml:lang="en">Always reveals the terminal when this task is executed.</source>
        <target state="translated">总是在此任务执行时显示终端。</target>
      </trans-unit>
      <trans-unit id="JsonSchema.tasks.presentation.reveal.silent">
        <source xml:lang="en">Only reveals the terminal if the task exits with an error or the problem matcher finds an error.</source>
        <target state="translated">只有当任务因错误而退出或者问题匹配器发现错误时，才会显示终端。</target>
      </trans-unit>
      <trans-unit id="JsonSchema.tasks.presentation.reveal.never">
        <source xml:lang="en">Never reveals the terminal when this task is executed.</source>
        <target state="translated">不要在此任务执行时显示终端。</target>
      </trans-unit>
      <trans-unit id="JsonSchema.tasks.presentation.reveal">
        <source xml:lang="en">Controls whether the terminal running the task is revealed or not. May be overridden by option "revealProblems". Default is "always".</source>
        <target state="translated">控制运行任务的终端是否显示。可按选项 "revealProblems" 进行替代。默认设置为“始终”。</target>
      </trans-unit>
      <trans-unit id="JsonSchema.tasks.presentation.instance">
        <source xml:lang="en">Controls if the panel is shared between tasks, dedicated to this task or a new one is created on every run.</source>
        <target state="translated">控制是否在任务间共享面板。同一个任务使用相同面板还是每次运行时新创建一个面板。</target>
      </trans-unit>
      <trans-unit id="JsonSchema.tasks.presentation.showReuseMessage">
        <source xml:lang="en">Controls whether to show the `Terminal will be reused by tasks, press any key to close it` message.</source>
        <target state="translated">控制是否显示“终端将被任务重用，按任意键关闭”提示。</target>
      </trans-unit>
      <trans-unit id="JsonSchema.tasks.presentation.clear">
        <source xml:lang="en">Controls whether the terminal is cleared before executing the task.</source>
        <target state="translated">控制是否在执行任务之前清除终端。</target>
      </trans-unit>
      <trans-unit id="JsonSchema.tasks.presentation.group">
        <source xml:lang="en">Controls whether the task is executed in a specific terminal group using split panes.</source>
        <target state="translated">控制是否使用拆分窗格在特定终端组中执行任务。</target>
      </trans-unit>
      <trans-unit id="JsonSchema.tasks.terminal">
        <source xml:lang="en">The terminal property is deprecated. Use presentation instead</source>
        <target state="translated">terminal 属性已被弃用。请改为使用 presentation</target>
      </trans-unit>
      <trans-unit id="JsonSchema.tasks.group.kind">
        <source xml:lang="en">The task's execution group.</source>
        <target state="translated">任务的执行组。</target>
      </trans-unit>
      <trans-unit id="JsonSchema.tasks.group.isDefault">
        <source xml:lang="en">Defines if this task is the default task in the group.</source>
        <target state="translated">定义此任务是否为组中的默认任务。</target>
      </trans-unit>
      <trans-unit id="JsonSchema.tasks.group.defaultBuild">
        <source xml:lang="en">Marks the task as the default build task.</source>
        <target state="translated">将此任务标记为默认生成任务。</target>
      </trans-unit>
      <trans-unit id="JsonSchema.tasks.group.defaultTest">
        <source xml:lang="en">Marks the task as the default test task.</source>
        <target state="translated">将此任务标记为默认测试任务。</target>
      </trans-unit>
      <trans-unit id="JsonSchema.tasks.group.build">
        <source xml:lang="en">Marks the task as a build task accessible through the 'Run Build Task' command.</source>
        <target state="translated">将任务标记为可通过 "运行生成任务" 命令访问的生成任务。</target>
      </trans-unit>
      <trans-unit id="JsonSchema.tasks.group.test">
        <source xml:lang="en">Marks the task as a test task accessible through the 'Run Test Task' command.</source>
        <target state="translated">将任务标记为可通过 "Run Test Task" 命令访问的测试任务。</target>
      </trans-unit>
      <trans-unit id="JsonSchema.tasks.group.none">
        <source xml:lang="en">Assigns the task to no group</source>
        <target state="translated">将任务分配为没有组</target>
      </trans-unit>
      <trans-unit id="JsonSchema.tasks.group">
        <source xml:lang="en">Defines to which execution group this task belongs to. It supports "build" to add it to the build group and "test" to add it to the test group.</source>
        <target state="translated">定义此任务属于的执行组。它支持 "build" 以将其添加到生成组，也支持 "test" 以将其添加到测试组。</target>
      </trans-unit>
      <trans-unit id="JsonSchema.tasks.type">
        <source xml:lang="en">Defines whether the task is run as a process or as a command inside a shell.</source>
        <target state="translated">定义任务是被作为进程运行还是在 shell 中作为命令运行。</target>
      </trans-unit>
      <trans-unit id="JsonSchema.commandArray">
        <source xml:lang="en">The shell command to be executed. Array items will be joined using a space character</source>
        <target state="translated">执行的 Shell 命令。数组项将使用空格连接</target>
      </trans-unit>
      <trans-unit id="JsonSchema.command.quotedString.value">
        <source xml:lang="en">The actual command value</source>
        <target state="translated">实际命令值</target>
      </trans-unit>
      <trans-unit id="JsonSchema.tasks.quoting.escape">
        <source xml:lang="en">Escapes characters using the shell's escape character (e.g. ` under PowerShell and \ under bash).</source>
        <target state="translated">使用 Shell 的转义字符来转义文本 (如，PowerShell 下的 ` 和 bash 下的 \ )</target>
      </trans-unit>
      <trans-unit id="JsonSchema.tasks.quoting.strong">
        <source xml:lang="en">Quotes the argument using the shell's strong quote character (e.g. " under PowerShell and bash).</source>
        <target state="translated">使用 Shell 的强引用字符来引用参数 (如，在 PowerShell 和 bash 下的 " )。</target>
      </trans-unit>
      <trans-unit id="JsonSchema.tasks.quoting.weak">
        <source xml:lang="en">Quotes the argument using the shell's weak quote character (e.g. ' under PowerShell and bash).</source>
        <target state="translated">使用 Shell 的弱引用字符来引用参数 (如，在 PowerShell 和 bash 下的 ' )。</target>
      </trans-unit>
      <trans-unit id="JsonSchema.command.quotesString.quote">
        <source xml:lang="en">How the command value should be quoted.</source>
        <target state="translated">如何引用命令值。</target>
      </trans-unit>
      <trans-unit id="JsonSchema.command">
        <source xml:lang="en">The command to be executed. Can be an external program or a shell command.</source>
        <target state="translated">要执行的命令。可以是外部程序或 shell 命令。</target>
      </trans-unit>
      <trans-unit id="JsonSchema.args.quotedString.value">
        <source xml:lang="en">The actual argument value</source>
        <target state="translated">实际参数值</target>
      </trans-unit>
      <trans-unit id="JsonSchema.args.quotesString.quote">
        <source xml:lang="en">How the argument value should be quoted.</source>
        <target state="translated">参数值应该如何引用。</target>
      </trans-unit>
      <trans-unit id="JsonSchema.tasks.args">
        <source xml:lang="en">Arguments passed to the command when this task is invoked.</source>
        <target state="translated">在调用此任务时传递给命令的参数。</target>
      </trans-unit>
      <trans-unit id="JsonSchema.tasks.label">
        <source xml:lang="en">The task's user interface label</source>
        <target state="translated">任务的用户界面标签</target>
      </trans-unit>
      <trans-unit id="JsonSchema.version">
        <source xml:lang="en">The config's version number.</source>
        <target state="translated">配置的版本号。</target>
      </trans-unit>
      <trans-unit id="JsonSchema.tasks.identifier">
        <source xml:lang="en">A user defined identifier to reference the task in launch.json or a dependsOn clause.</source>
        <target state="translated">用于在 launch.json 或 dependsOn 子句中引用任务的用户定义标识符。</target>
      </trans-unit>
      <trans-unit id="JsonSchema.tasks.identifier.deprecated">
        <source xml:lang="en">User defined identifiers are deprecated. For custom task use the name as a reference and for tasks provided by extensions use their defined task identifier.</source>
        <target state="translated">已弃用用户定义的标识符。对于自定义任务，请使用名称进行引用；对于由扩展提供的任务，请使用其中定义的任务标识符。</target>
      </trans-unit>
      <trans-unit id="JsonSchema.tasks.reevaluateOnRerun">
        <source xml:lang="en">Whether to reevaluate task variables on rerun.</source>
        <target state="translated">是否在重新运行时重新评估任务变量。</target>
      </trans-unit>
      <trans-unit id="JsonSchema.tasks.runOn">
        <source xml:lang="en">Configures when the task should be run. If set to folderOpen, then the task will be run automatically when the folder is opened.</source>
        <target state="translated">对该任务何时运行进行配置。如果设置为 folderOpen，那么该任务将在文件夹打开时自动运行。</target>
      </trans-unit>
      <trans-unit id="JsonSchema.tasks.instanceLimit">
        <source xml:lang="en">The number of instances of the task that are allowed to run simultaneously.</source>
        <target state="translated">允许同时运行的任务的实例数。</target>
      </trans-unit>
      <trans-unit id="JsonSchema.tasks.runOptions">
        <source xml:lang="en">The task's run related options</source>
        <target state="translated">任务的运行相关选项</target>
      </trans-unit>
      <trans-unit id="JsonSchema.tasks.taskLabel">
        <source xml:lang="en">The task's label</source>
        <target state="translated">任务标签</target>
      </trans-unit>
      <trans-unit id="JsonSchema.tasks.taskName">
        <source xml:lang="en">The task's name</source>
        <target state="translated">任务名称</target>
      </trans-unit>
      <trans-unit id="JsonSchema.tasks.taskName.deprecated">
        <source xml:lang="en">The task's name property is deprecated. Use the label property instead.</source>
        <target state="translated">任务的 name 属性已被弃用。请改为使用 label 属性。</target>
      </trans-unit>
      <trans-unit id="JsonSchema.tasks.background">
        <source xml:lang="en">Whether the executed task is kept alive and is running in the background.</source>
        <target state="translated">已执行的任务是否保持活动状态并在后台运行。</target>
      </trans-unit>
      <trans-unit id="JsonSchema.tasks.promptOnClose">
        <source xml:lang="en">Whether the user is prompted when VS Code closes with a running task.</source>
        <target state="translated">当 VS 代码与运行的任务一起关闭时是否提示用户。</target>
      </trans-unit>
      <trans-unit id="JsonSchema.tasks.matchers">
        <source xml:lang="en">The problem matcher(s) to use. Can either be a string or a problem matcher definition or an array of strings and problem matchers.</source>
        <target state="translated">要使用的问题匹配程序。可以是字符串或问题匹配程序定义，或字符串和问题匹配程序数组。</target>
      </trans-unit>
      <trans-unit id="JsonSchema.customizations.customizes.type">
        <source xml:lang="en">The task type to customize</source>
        <target state="translated">要自定义的任务类型</target>
      </trans-unit>
      <trans-unit id="JsonSchema.tasks.customize.deprecated">
        <source xml:lang="en">The customize property is deprecated. See the 1.14 release notes on how to migrate to the new task customization approach</source>
        <target state="translated">customize 属性已被弃用。请参阅 1.14 发行说明了解如何迁移到新的任务自定义方法</target>
      </trans-unit>
      <trans-unit id="JsonSchema.tasks.showOutput.deprecated">
        <source xml:lang="en">The property showOutput is deprecated. Use the reveal property inside the presentation property instead. See also the 1.14 release notes.</source>
        <target state="translated">showOutput 属性已被弃用。请改为使用 presentation 属性内的 reveal 属性。另请参阅 1.14 发行说明。</target>
      </trans-unit>
      <trans-unit id="JsonSchema.tasks.echoCommand.deprecated">
        <source xml:lang="en">The property echoCommand is deprecated. Use the echo property inside the presentation property instead. See also the 1.14 release notes.</source>
        <target state="translated">isBuildCommand 属性已被弃用。请改为使用 presentation 属性内的 echo 属性。另请参阅 1.14 发行说明。</target>
      </trans-unit>
      <trans-unit id="JsonSchema.tasks.suppressTaskName.deprecated">
        <source xml:lang="en">The property suppressTaskName is deprecated. Inline the command with its arguments into the task instead. See also the 1.14 release notes.</source>
        <target state="translated">suppressTaskName 属性已被弃用。请改为在任务中内嵌命令及其参数。另请参阅 1.14 发行说明。</target>
      </trans-unit>
      <trans-unit id="JsonSchema.tasks.isBuildCommand.deprecated">
        <source xml:lang="en">The property isBuildCommand is deprecated. Use the group property instead. See also the 1.14 release notes.</source>
        <target state="translated">isBuildCommand 属性已被弃用。请改为使用 group 属性。另请参阅 1.14 发行说明。</target>
      </trans-unit>
      <trans-unit id="JsonSchema.tasks.isTestCommand.deprecated">
        <source xml:lang="en">The property isTestCommand is deprecated. Use the group property instead. See also the 1.14 release notes.</source>
        <target state="translated">isTestCommand 属性已被弃用。请改为使用 group 属性。另请参阅 1.14 发行说明。</target>
      </trans-unit>
      <trans-unit id="JsonSchema.tasks.taskSelector.deprecated">
        <source xml:lang="en">The property taskSelector is deprecated. Inline the command with its arguments into the task instead. See also the 1.14 release notes.</source>
        <target state="translated">taskSelector 属性已被弃用。请改为在任务中内嵌命令及其参数。另请参阅 1.14 发行说明。</target>
      </trans-unit>
      <trans-unit id="JsonSchema.windows">
        <source xml:lang="en">Windows specific command configuration</source>
        <target state="translated">Windows 特定的命令配置</target>
      </trans-unit>
      <trans-unit id="JsonSchema.mac">
        <source xml:lang="en">Mac specific command configuration</source>
        <target state="translated">Mac 特定的命令配置</target>
      </trans-unit>
      <trans-unit id="JsonSchema.linux">
        <source xml:lang="en">Linux specific command configuration</source>
        <target state="translated">Linux 特定的命令配置</target>
      </trans-unit>
    </body>
  </file>
  <file original="src/vs/workbench/contrib/tasks/common/jsonSchemaCommon" source-language="en" target-language="zh-Hans" datatype="plaintext">
    <body>
      <trans-unit id="JsonSchema.options">
        <source xml:lang="en">Additional command options</source>
        <target state="translated">其他命令选项</target>
      </trans-unit>
      <trans-unit id="JsonSchema.options.cwd">
        <source xml:lang="en">The current working directory of the executed program or script. If omitted Code's current workspace root is used.</source>
        <target state="translated">已执行程序或脚本的当前工作目录。如果省略，则使用代码的当前工作区根。</target>
      </trans-unit>
      <trans-unit id="JsonSchema.options.env">
        <source xml:lang="en">The environment of the executed program or shell. If omitted the parent process' environment is used.</source>
        <target state="translated">已执行程序或 shell 的环境。如果省略，则使用父进程的环境。</target>
      </trans-unit>
      <trans-unit id="JsonSchema.shellConfiguration">
        <source xml:lang="en">Configures the shell to be used.</source>
        <target state="translated">配置使用的 shell。</target>
      </trans-unit>
      <trans-unit id="JsonSchema.shell.executable">
        <source xml:lang="en">The shell to be used.</source>
        <target state="translated">待使用的 shell。</target>
      </trans-unit>
      <trans-unit id="JsonSchema.shell.args">
        <source xml:lang="en">The shell arguments.</source>
        <target state="translated">shell 参数。</target>
      </trans-unit>
      <trans-unit id="JsonSchema.command">
        <source xml:lang="en">The command to be executed. Can be an external program or a shell command.</source>
        <target state="translated">要执行的命令。可以是外部程序或 shell 命令。</target>
      </trans-unit>
      <trans-unit id="JsonSchema.tasks.args">
        <source xml:lang="en">Arguments passed to the command when this task is invoked.</source>
        <target state="translated">在调用此任务时传递给命令的参数。</target>
      </trans-unit>
      <trans-unit id="JsonSchema.tasks.taskName">
        <source xml:lang="en">The task's name</source>
        <target state="translated">任务名称</target>
      </trans-unit>
      <trans-unit id="JsonSchema.tasks.windows">
        <source xml:lang="en">Windows specific command configuration</source>
        <target state="translated">Windows 特定的命令配置</target>
      </trans-unit>
      <trans-unit id="JsonSchema.tasks.matchers">
        <source xml:lang="en">The problem matcher(s) to use. Can either be a string or a problem matcher definition or an array of strings and problem matchers.</source>
        <target state="translated">要使用的问题匹配程序。可以是字符串或问题匹配程序定义，或字符串和问题匹配程序数组。</target>
      </trans-unit>
      <trans-unit id="JsonSchema.tasks.mac">
        <source xml:lang="en">Mac specific command configuration</source>
        <target state="translated">Mac 特定的命令配置</target>
      </trans-unit>
      <trans-unit id="JsonSchema.tasks.linux">
        <source xml:lang="en">Linux specific command configuration</source>
        <target state="translated">Linux 特定的命令配置</target>
      </trans-unit>
      <trans-unit id="JsonSchema.tasks.suppressTaskName">
        <source xml:lang="en">Controls whether the task name is added as an argument to the command. If omitted the globally defined value is used.</source>
        <target state="translated">控制是否将任务名作为参数添加到命令。如果省略，则使用全局定义的值。</target>
      </trans-unit>
      <trans-unit id="JsonSchema.tasks.showOutput">
        <source xml:lang="en">Controls whether the output of the running task is shown or not. If omitted the globally defined value is used.</source>
        <target state="translated">控制是否显示正在运行的任务的输出。如果省略，则使用全局定义的值。</target>
      </trans-unit>
      <trans-unit id="JsonSchema.echoCommand">
        <source xml:lang="en">Controls whether the executed command is echoed to the output. Default is false.</source>
        <target state="translated">控制是否将已执行的命令回显到输出。默认值为 false。</target>
      </trans-unit>
      <trans-unit id="JsonSchema.tasks.watching.deprecation">
        <source xml:lang="en">Deprecated. Use isBackground instead.</source>
        <target state="translated">已弃用。改用 isBackground。</target>
      </trans-unit>
      <trans-unit id="JsonSchema.tasks.watching">
        <source xml:lang="en">Whether the executed task is kept alive and is watching the file system.</source>
        <target state="translated">已执行的任务是否保持活动状态，并且是否在监视文件系统。</target>
      </trans-unit>
      <trans-unit id="JsonSchema.tasks.background">
        <source xml:lang="en">Whether the executed task is kept alive and is running in the background.</source>
        <target state="translated">已执行的任务是否保持活动状态并在后台运行。</target>
      </trans-unit>
      <trans-unit id="JsonSchema.tasks.promptOnClose">
        <source xml:lang="en">Whether the user is prompted when VS Code closes with a running task.</source>
        <target state="translated">当 VS 代码与运行的任务一起关闭时是否提示用户。</target>
      </trans-unit>
      <trans-unit id="JsonSchema.tasks.build">
        <source xml:lang="en">Maps this task to Code's default build command.</source>
        <target state="translated">将此任务映射到代码的默认生成命令。</target>
      </trans-unit>
      <trans-unit id="JsonSchema.tasks.test">
        <source xml:lang="en">Maps this task to Code's default test command.</source>
        <target state="translated">将此任务映射到代码的默认测试命令。</target>
      </trans-unit>
      <trans-unit id="JsonSchema.args">
        <source xml:lang="en">Additional arguments passed to the command.</source>
        <target state="translated">传递到命令的其他参数。</target>
      </trans-unit>
      <trans-unit id="JsonSchema.showOutput">
        <source xml:lang="en">Controls whether the output of the running task is shown or not. If omitted 'always' is used.</source>
        <target state="translated">控制是否显示运行任务的输出。如果省略，则使用“始终”。</target>
      </trans-unit>
      <trans-unit id="JsonSchema.watching.deprecation">
        <source xml:lang="en">Deprecated. Use isBackground instead.</source>
        <target state="translated">已弃用。改用 isBackground。</target>
      </trans-unit>
      <trans-unit id="JsonSchema.watching">
        <source xml:lang="en">Whether the executed task is kept alive and is watching the file system.</source>
        <target state="translated">已执行的任务是否保持活动状态，并且是否在监视文件系统。</target>
      </trans-unit>
      <trans-unit id="JsonSchema.background">
        <source xml:lang="en">Whether the executed task is kept alive and is running in the background.</source>
        <target state="translated">已执行的任务是否保持活动状态并在后台运行。</target>
      </trans-unit>
      <trans-unit id="JsonSchema.promptOnClose">
        <source xml:lang="en">Whether the user is prompted when VS Code closes with a running background task.</source>
        <target state="translated">在具有正在运行的后台任务的情况下关闭 VS 代码时是否提示用户。</target>
      </trans-unit>
      <trans-unit id="JsonSchema.suppressTaskName">
        <source xml:lang="en">Controls whether the task name is added as an argument to the command. Default is false.</source>
        <target state="translated">控制是否将任务名作为参数添加到命令。默认值是 false。</target>
      </trans-unit>
      <trans-unit id="JsonSchema.taskSelector">
        <source xml:lang="en">Prefix to indicate that an argument is task.</source>
        <target state="translated">指示参数是任务的前缀。</target>
      </trans-unit>
      <trans-unit id="JsonSchema.matchers">
        <source xml:lang="en">The problem matcher(s) to use. Can either be a string or a problem matcher definition or an array of strings and problem matchers.</source>
        <target state="translated">要使用的问题匹配程序。可以是字符串或问题匹配程序定义，或字符串和问题匹配程序数组。</target>
      </trans-unit>
      <trans-unit id="JsonSchema.tasks">
        <source xml:lang="en">The task configurations. Usually these are enrichments of task already defined in the external task runner.</source>
        <target state="translated">任务配置。通常是外部任务运行程序中已定义任务的扩充。</target>
      </trans-unit>
    </body>
  </file>
  <file original="src/vs/workbench/contrib/tasks/common/problemMatcher" source-language="en" target-language="zh-Hans" datatype="plaintext">
    <body>
      <trans-unit id="ProblemPatternParser.problemPattern.missingRegExp">
        <source xml:lang="en">The problem pattern is missing a regular expression.</source>
        <target state="translated">问题模式缺少正则表达式。</target>
      </trans-unit>
      <trans-unit id="ProblemPatternParser.loopProperty.notLast">
        <source xml:lang="en">The loop property is only supported on the last line matcher.</source>
        <target state="translated">循环属性仅在最一个行匹配程序上受支持。</target>
      </trans-unit>
      <trans-unit id="ProblemPatternParser.problemPattern.kindProperty.notFirst">
        <source xml:lang="en">The problem pattern is invalid. The kind property must be provided only in the first element</source>
        <target state="translated">问题模式无效。"kind" 属性必须提供，且仅能为第一个元素</target>
      </trans-unit>
      <trans-unit id="ProblemPatternParser.problemPattern.missingProperty">
        <source xml:lang="en">The problem pattern is invalid. It must have at least have a file and a message.</source>
        <target state="translated">问题模式无效。必须至少包含一个文件和一条消息。</target>
      </trans-unit>
      <trans-unit id="ProblemPatternParser.problemPattern.missingLocation">
        <source xml:lang="en">The problem pattern is invalid. It must either have kind: "file" or have a line or location match group.</source>
        <target state="translated">问题模式无效。它必须为“file”，代码行或消息匹配组其中的一项。</target>
      </trans-unit>
      <trans-unit id="ProblemPatternParser.invalidRegexp">
        <source xml:lang="en">Error: The string {0} is not a valid regular expression.
</source>
        <target state="translated">错误：字符串 {0} 不是有效的正则表达式。
</target>
      </trans-unit>
      <trans-unit id="ProblemPatternSchema.regexp">
        <source xml:lang="en">The regular expression to find an error, warning or info in the output.</source>
        <target state="translated">用于在输出中查找错误、警告或信息的正则表达式。</target>
      </trans-unit>
      <trans-unit id="ProblemPatternSchema.kind">
        <source xml:lang="en">whether the pattern matches a location (file and line) or only a file.</source>
        <target state="translated">模式匹配的是一个位置 (文件、一行) 还是仅为一个文件。</target>
      </trans-unit>
      <trans-unit id="ProblemPatternSchema.file">
        <source xml:lang="en">The match group index of the filename. If omitted 1 is used.</source>
        <target state="translated">文件名的匹配组索引。如果省略，则使用 1。</target>
      </trans-unit>
      <trans-unit id="ProblemPatternSchema.location">
        <source xml:lang="en">The match group index of the problem's location. Valid location patterns are: (line), (line,column) and (startLine,startColumn,endLine,endColumn). If omitted (line,column) is assumed.</source>
        <target state="translated">问题位置的匹配组索引。有效的位置模式为(line)、(line,column)和(startLine,startColumn,endLine,endColumn)。如果省略了，将假定(line,column)。</target>
      </trans-unit>
      <trans-unit id="ProblemPatternSchema.line">
        <source xml:lang="en">The match group index of the problem's line. Defaults to 2</source>
        <target state="translated">问题行的匹配组索引。默认值为 2</target>
      </trans-unit>
      <trans-unit id="ProblemPatternSchema.column">
        <source xml:lang="en">The match group index of the problem's line character. Defaults to 3</source>
        <target state="translated">问题行字符的匹配组索引。默认值为 3</target>
      </trans-unit>
      <trans-unit id="ProblemPatternSchema.endLine">
        <source xml:lang="en">The match group index of the problem's end line. Defaults to undefined</source>
        <target state="translated">问题结束行的匹配组索引。默认为 undefined</target>
      </trans-unit>
      <trans-unit id="ProblemPatternSchema.endColumn">
        <source xml:lang="en">The match group index of the problem's end line character. Defaults to undefined</source>
        <target state="translated">问题结束行字符的匹配组索引。默认为 undefined</target>
      </trans-unit>
      <trans-unit id="ProblemPatternSchema.severity">
        <source xml:lang="en">The match group index of the problem's severity. Defaults to undefined</source>
        <target state="translated">问题严重性的匹配组索引。默认为 undefined</target>
      </trans-unit>
      <trans-unit id="ProblemPatternSchema.code">
        <source xml:lang="en">The match group index of the problem's code. Defaults to undefined</source>
        <target state="translated">问题代码的匹配组索引。默认为 undefined</target>
      </trans-unit>
      <trans-unit id="ProblemPatternSchema.message">
        <source xml:lang="en">The match group index of the message. If omitted it defaults to 4 if location is specified. Otherwise it defaults to 5.</source>
        <target state="translated">消息的匹配组索引。如果省略，则在指定了位置时默认值为 4，在其他情况下默认值为 5。</target>
      </trans-unit>
      <trans-unit id="ProblemPatternSchema.loop">
        <source xml:lang="en">In a multi line matcher loop indicated whether this pattern is executed in a loop as long as it matches. Can only specified on a last pattern in a multi line pattern.</source>
        <target state="translated">在多行中，匹配程序循环指示是否只要匹配就在循环中执行此模式。只能在多行模式的最后一个模式上指定。</target>
      </trans-unit>
      <trans-unit id="NamedProblemPatternSchema.name">
        <source xml:lang="en">The name of the problem pattern.</source>
        <target state="translated">问题模式的名称。</target>
      </trans-unit>
      <trans-unit id="NamedMultiLineProblemPatternSchema.name">
        <source xml:lang="en">The name of the problem multi line problem pattern.</source>
        <target state="translated">问题多行问题模式的名称。</target>
      </trans-unit>
      <trans-unit id="NamedMultiLineProblemPatternSchema.patterns">
        <source xml:lang="en">The actual patterns.</source>
        <target state="translated">实际模式。</target>
      </trans-unit>
      <trans-unit id="ProblemPatternExtPoint">
        <source xml:lang="en">Contributes problem patterns</source>
        <target state="translated">提供问题模式</target>
      </trans-unit>
      <trans-unit id="ProblemPatternRegistry.error">
        <source xml:lang="en">Invalid problem pattern. The pattern will be ignored.</source>
        <target state="translated">无效问题模式。此模式将被忽略。</target>
      </trans-unit>
      <trans-unit id="ProblemMatcherParser.noProblemMatcher">
        <source xml:lang="en">Error: the description can't be converted into a problem matcher:
{0}
</source>
        <target state="translated">错误: 描述无法转换为问题匹配程序:
{0}
</target>
      </trans-unit>
      <trans-unit id="ProblemMatcherParser.noProblemPattern">
        <source xml:lang="en">Error: the description doesn't define a valid problem pattern:
{0}
</source>
        <target state="translated">错误: 描述未定义有效的问题模式:
{0}
</target>
      </trans-unit>
      <trans-unit id="ProblemMatcherParser.noOwner">
        <source xml:lang="en">Error: the description doesn't define an owner:
{0}
</source>
        <target state="translated">错误: 描述未定义所有者:
{0}
</target>
      </trans-unit>
      <trans-unit id="ProblemMatcherParser.noFileLocation">
        <source xml:lang="en">Error: the description doesn't define a file location:
{0}
</source>
        <target state="translated">错误: 描述未定义文件位置:
{0}
</target>
      </trans-unit>
      <trans-unit id="ProblemMatcherParser.unknownSeverity">
        <source xml:lang="en">Info: unknown severity {0}. Valid values are error, warning and info.
</source>
        <target state="translated">信息：未知严重性 {0}。有效值为“error”、“warning”和“info”。
</target>
      </trans-unit>
      <trans-unit id="ProblemMatcherParser.noDefinedPatter">
        <source xml:lang="en">Error: the pattern with the identifier {0} doesn't exist.</source>
        <target state="translated">错误: 标识符为 {0} 的模式不存在。</target>
      </trans-unit>
      <trans-unit id="ProblemMatcherParser.noIdentifier">
        <source xml:lang="en">Error: the pattern property refers to an empty identifier.</source>
        <target state="translated">错误: 模式属性引用空标识符。</target>
      </trans-unit>
      <trans-unit id="ProblemMatcherParser.noValidIdentifier">
        <source xml:lang="en">Error: the pattern property {0} is not a valid pattern variable name.</source>
        <target state="translated">错误: 模式属性 {0} 是无效的模式变量名。</target>
      </trans-unit>
      <trans-unit id="ProblemMatcherParser.problemPattern.watchingMatcher">
        <source xml:lang="en">A problem matcher must define both a begin pattern and an end pattern for watching.</source>
        <target state="translated">问题匹配程序必须定义监视的开始模式和结束模式。</target>
      </trans-unit>
      <trans-unit id="ProblemMatcherParser.invalidRegexp">
        <source xml:lang="en">Error: The string {0} is not a valid regular expression.
</source>
        <target state="translated">错误：字符串 {0} 不是有效的正则表达式。
</target>
      </trans-unit>
      <trans-unit id="WatchingPatternSchema.regexp">
        <source xml:lang="en">The regular expression to detect the begin or end of a background task.</source>
        <target state="translated">用于检测后台任务开始或结束的正则表达式。</target>
      </trans-unit>
      <trans-unit id="WatchingPatternSchema.file">
        <source xml:lang="en">The match group index of the filename. Can be omitted.</source>
        <target state="translated">文件名的匹配组索引。可以省略。</target>
      </trans-unit>
      <trans-unit id="PatternTypeSchema.name">
        <source xml:lang="en">The name of a contributed or predefined pattern</source>
        <target state="translated">所提供或预定义模式的名称</target>
      </trans-unit>
      <trans-unit id="PatternTypeSchema.description">
        <source xml:lang="en">A problem pattern or the name of a contributed or predefined problem pattern. Can be omitted if base is specified.</source>
        <target state="translated">问题模式或者所提供或预定义问题模式的名称。如果已指定基准，则可以省略。</target>
      </trans-unit>
      <trans-unit id="ProblemMatcherSchema.base">
        <source xml:lang="en">The name of a base problem matcher to use.</source>
        <target state="translated">要使用的基问题匹配程序的名称。</target>
      </trans-unit>
      <trans-unit id="ProblemMatcherSchema.owner">
        <source xml:lang="en">The owner of the problem inside Code. Can be omitted if base is specified. Defaults to 'external' if omitted and base is not specified.</source>
        <target state="translated">代码内问题的所有者。如果指定了基准，则可省略。如果省略，并且未指定基准，则默认值为“外部”。</target>
      </trans-unit>
      <trans-unit id="ProblemMatcherSchema.source">
        <source xml:lang="en">A human-readable string describing the source of this diagnostic, e.g. 'typescript' or 'super lint'.</source>
        <target state="translated">描述此诊断信息来源的人类可读字符串。如，"typescript" 或 "super lint"。</target>
      </trans-unit>
      <trans-unit id="ProblemMatcherSchema.severity">
        <source xml:lang="en">The default severity for captures problems. Is used if the pattern doesn't define a match group for severity.</source>
        <target state="translated">捕获问题的默认严重性。如果模式未定义严重性的匹配组，则使用。</target>
      </trans-unit>
      <trans-unit id="ProblemMatcherSchema.applyTo">
        <source xml:lang="en">Controls if a problem reported on a text document is applied only to open, closed or all documents.</source>
        <target state="translated">控制文本文档上报告的问题是否仅应用于打开、关闭或所有文档。</target>
      </trans-unit>
      <trans-unit id="ProblemMatcherSchema.fileLocation">
        <source xml:lang="en">Defines how file names reported in a problem pattern should be interpreted.</source>
        <target state="translated">定义应如何解释问题模式中报告的文件名。</target>
      </trans-unit>
      <trans-unit id="ProblemMatcherSchema.background">
        <source xml:lang="en">Patterns to track the begin and end of a matcher active on a background task.</source>
        <target state="translated">用于跟踪在后台任务上激活的匹配程序的开始和结束的模式。</target>
      </trans-unit>
      <trans-unit id="ProblemMatcherSchema.background.activeOnStart">
        <source xml:lang="en">If set to true the background monitor is in active mode when the task starts. This is equals of issuing a line that matches the beginsPattern</source>
        <target state="translated">如果设置为 true，则任务启动时后台监视器处于活动模式。这相当于发出与 beginsPattern 匹配的行</target>
      </trans-unit>
      <trans-unit id="ProblemMatcherSchema.background.beginsPattern">
        <source xml:lang="en">If matched in the output the start of a background task is signaled.</source>
        <target state="translated">如果在输出内匹配，则会发出后台任务开始的信号。</target>
      </trans-unit>
      <trans-unit id="ProblemMatcherSchema.background.endsPattern">
        <source xml:lang="en">If matched in the output the end of a background task is signaled.</source>
        <target state="translated">如果在输出内匹配，则会发出后台任务结束的信号。</target>
      </trans-unit>
      <trans-unit id="ProblemMatcherSchema.watching.deprecated">
        <source xml:lang="en">The watching property is deprecated. Use background instead.</source>
        <target state="translated">"watching" 属性已被弃用，请改用 "background"。</target>
      </trans-unit>
      <trans-unit id="ProblemMatcherSchema.watching">
        <source xml:lang="en">Patterns to track the begin and end of a watching matcher.</source>
        <target state="translated">用于跟踪监视匹配程序开始和结束的模式。</target>
      </trans-unit>
      <trans-unit id="ProblemMatcherSchema.watching.activeOnStart">
        <source xml:lang="en">If set to true the watcher is in active mode when the task starts. This is equals of issuing a line that matches the beginPattern</source>
        <target state="translated">如果设置为 true，则当任务开始时观察程序处于活动模式。这相当于发出与 beginPattern 匹配的行。</target>
      </trans-unit>
      <trans-unit id="ProblemMatcherSchema.watching.beginsPattern">
        <source xml:lang="en">If matched in the output the start of a watching task is signaled.</source>
        <target state="translated">如果在输出内匹配，则在监视任务开始时会发出信号。</target>
      </trans-unit>
      <trans-unit id="ProblemMatcherSchema.watching.endsPattern">
        <source xml:lang="en">If matched in the output the end of a watching task is signaled.</source>
        <target state="translated">如果在输出内匹配，则在监视任务结束时会发出信号。</target>
      </trans-unit>
      <trans-unit id="LegacyProblemMatcherSchema.watchedBegin.deprecated">
        <source xml:lang="en">This property is deprecated. Use the watching property instead.</source>
        <target state="translated">此属性已弃用。请改用观看属性。</target>
      </trans-unit>
      <trans-unit id="LegacyProblemMatcherSchema.watchedBegin">
        <source xml:lang="en">A regular expression signaling that a watched tasks begins executing triggered through file watching.</source>
        <target state="translated">一个正则表达式，发出受监视任务开始执行(通过文件监视触发)的信号。</target>
      </trans-unit>
      <trans-unit id="LegacyProblemMatcherSchema.watchedEnd.deprecated">
        <source xml:lang="en">This property is deprecated. Use the watching property instead.</source>
        <target state="translated">此属性已弃用。请改用观看属性。</target>
      </trans-unit>
      <trans-unit id="LegacyProblemMatcherSchema.watchedEnd">
        <source xml:lang="en">A regular expression signaling that a watched tasks ends executing.</source>
        <target state="translated">一个正则表达式，发出受监视任务结束执行的信号。</target>
      </trans-unit>
      <trans-unit id="NamedProblemMatcherSchema.name">
        <source xml:lang="en">The name of the problem matcher used to refer to it.</source>
        <target state="translated">要引用的问题匹配程序的名称。</target>
      </trans-unit>
      <trans-unit id="NamedProblemMatcherSchema.label">
        <source xml:lang="en">A human readable label of the problem matcher.</source>
        <target state="translated">问题匹配程序的人类可读标签。</target>
      </trans-unit>
      <trans-unit id="ProblemMatcherExtPoint">
        <source xml:lang="en">Contributes problem matchers</source>
        <target state="translated">提供问题匹配程序</target>
      </trans-unit>
      <trans-unit id="msCompile">
        <source xml:lang="en">Microsoft compiler problems</source>
        <target state="translated">微软编译器问题</target>
      </trans-unit>
      <trans-unit id="lessCompile">
        <source xml:lang="en">Less problems</source>
        <target state="translated">Less 问题</target>
      </trans-unit>
      <trans-unit id="gulp-tsc">
        <source xml:lang="en">Gulp TSC Problems</source>
        <target state="translated">Gulp TSC 问题</target>
      </trans-unit>
      <trans-unit id="jshint">
        <source xml:lang="en">JSHint problems</source>
        <target state="translated">JSHint 问题</target>
      </trans-unit>
      <trans-unit id="jshint-stylish">
        <source xml:lang="en">JSHint stylish problems</source>
        <target state="translated">JSHint stylish 问题</target>
      </trans-unit>
      <trans-unit id="eslint-compact">
        <source xml:lang="en">ESLint compact problems</source>
        <target state="translated">ESLint compact 问题</target>
      </trans-unit>
      <trans-unit id="eslint-stylish">
        <source xml:lang="en">ESLint stylish problems</source>
        <target state="translated">ESLint stylish 问题</target>
      </trans-unit>
      <trans-unit id="go">
        <source xml:lang="en">Go problems</source>
        <target state="translated">Go 问题</target>
      </trans-unit>
    </body>
  </file>
  <file original="src/vs/workbench/contrib/tasks/browser/abstractTaskService" source-language="en" target-language="zh-Hans" datatype="plaintext">
    <body>
      <trans-unit id="ConfigureTaskRunnerAction.label">
        <source xml:lang="en">Configure Task</source>
        <target state="translated">配置任务</target>
      </trans-unit>
      <trans-unit id="tasks">
        <source xml:lang="en">Tasks</source>
        <target state="translated">任务</target>
      </trans-unit>
      <trans-unit id="TaskSystem.noHotSwap">
        <source xml:lang="en">Changing the task execution engine with an active task running requires to reload the Window</source>
        <target state="translated">在有活动任务运行时更换任务执行引擎需要重新加载窗口</target>
      </trans-unit>
      <trans-unit id="reloadWindow">
        <source xml:lang="en">Reload Window</source>
        <target state="translated">重新加载窗口</target>
      </trans-unit>
      <trans-unit id="TaskService.pickBuildTaskForLabel">
        <source xml:lang="en">Select the build task (there is no default build task defined)</source>
        <target state="translated">选择生成任务（未定义默认生成任务）</target>
      </trans-unit>
      <trans-unit id="taskServiceOutputPrompt">
        <source xml:lang="en">There are task errors. See the output for details.</source>
        <target state="translated">任务出现错误。请查看输出结果，了解更多详细信息</target>
      </trans-unit>
      <trans-unit id="showOutput">
        <source xml:lang="en">Show output</source>
        <target state="translated">显示输出</target>
      </trans-unit>
      <trans-unit id="TaskServer.folderIgnored">
        <source xml:lang="en">The folder {0} is ignored since it uses task version 0.1.0</source>
        <target state="translated">由于使用任务版本 0.1.0，文件夹 {0} 将被忽略</target>
      </trans-unit>
      <trans-unit id="TaskService.noBuildTask1">
        <source xml:lang="en">No build task defined. Mark a task with 'isBuildCommand' in the tasks.json file.</source>
        <target state="translated">未定义任何生成任务。使用 "isBuildCommand" 在 tasks.json 文件中标记任务。</target>
      </trans-unit>
      <trans-unit id="TaskService.noBuildTask2">
        <source xml:lang="en">No build task defined. Mark a task with as a 'build' group in the tasks.json file.</source>
        <target state="translated">未定义任何生成任务。在 tasks.json 文件中将任务标记为 "build" 组。</target>
      </trans-unit>
      <trans-unit id="TaskService.noTestTask1">
        <source xml:lang="en">No test task defined. Mark a task with 'isTestCommand' in the tasks.json file.</source>
        <target state="translated">未定义任何测试任务。使用 "isTestCommand" 在 tasks.json 文件中标记任务。</target>
      </trans-unit>
      <trans-unit id="TaskService.noTestTask2">
        <source xml:lang="en">No test task defined. Mark a task with as a 'test' group in the tasks.json file.</source>
        <target state="translated">未定义任何测试任务。在 tasks.json 文件中将任务标记为 "test" 组。</target>
      </trans-unit>
      <trans-unit id="TaskServer.noTask">
        <source xml:lang="en">Task to execute is undefined</source>
        <target state="translated">未定义要执行的任务</target>
      </trans-unit>
      <trans-unit id="TaskService.associate">
        <source xml:lang="en">associate</source>
        <target state="translated">关联</target>
      </trans-unit>
      <trans-unit id="TaskService.attachProblemMatcher.continueWithout">
        <source xml:lang="en">Continue without scanning the task output</source>
        <target state="translated">继续而不扫描任务输出</target>
      </trans-unit>
      <trans-unit id="TaskService.attachProblemMatcher.never">
        <source xml:lang="en">Never scan the task output for this task</source>
        <target state="translated">从不扫描此任务的任务输出</target>
      </trans-unit>
      <trans-unit id="TaskService.attachProblemMatcher.neverType">
        <source xml:lang="en">Never scan the task output for {0} tasks</source>
        <target state="translated">从不扫描 {0} 个任务的任务输出</target>
      </trans-unit>
      <trans-unit id="TaskService.attachProblemMatcher.learnMoreAbout">
        <source xml:lang="en">Learn more about scanning the task output</source>
        <target state="translated">了解有关扫描任务输出的详细信息</target>
      </trans-unit>
      <trans-unit id="selectProblemMatcher">
        <source xml:lang="en">Select for which kind of errors and warnings to scan the task output</source>
        <target state="translated">选择针对何种错误和警告扫描任务输出</target>
      </trans-unit>
      <trans-unit id="customizeParseErrors">
        <source xml:lang="en">The current task configuration has errors. Please fix the errors first before customizing a task.</source>
        <target state="translated">当前任务配置存在错误。请先更正错误，再自定义任务。</target>
      </trans-unit>
      <trans-unit id="tasksJsonComment">
        <source xml:lang="en">	// See https://go.microsoft.com/fwlink/?LinkId=733558 
	// for the documentation about the tasks.json format</source>
        <target state="translated">// 有关 tasks.json 格式的文档，请参见
	// https://go.microsoft.com/fwlink/?LinkId=733558</target>
      </trans-unit>
      <trans-unit id="moreThanOneBuildTask">
        <source xml:lang="en">There are many build tasks defined in the tasks.json. Executing the first one.
</source>
        <target state="translated">当前 tasks.json 中定义了多个生成任务。正在执行第一个。
</target>
      </trans-unit>
      <trans-unit id="TaskSystem.activeSame.noBackground">
        <source xml:lang="en">The task '{0}' is already active.</source>
        <target state="translated">任务“{0}”已处于活动状态。</target>
      </trans-unit>
      <trans-unit id="terminateTask">
        <source xml:lang="en">Terminate Task</source>
        <target state="translated">终止任务</target>
      </trans-unit>
      <trans-unit id="restartTask">
        <source xml:lang="en">Restart Task</source>
        <target state="translated">重启任务</target>
      </trans-unit>
      <trans-unit id="TaskSystem.active">
        <source xml:lang="en">There is already a task running. Terminate it first before executing another task.</source>
        <target state="translated">当前已有任务正在运行。请先终止它，然后再执行另一项任务。</target>
      </trans-unit>
      <trans-unit id="TaskSystem.restartFailed">
        <source xml:lang="en">Failed to terminate and restart task {0}</source>
        <target state="translated">未能终止并重启任务 {0}</target>
      </trans-unit>
      <trans-unit id="TaskService.noConfiguration">
        <source xml:lang="en">Error: The {0} task detection didn't contribute a task for the following configuration:
{1}
The task will be ignored.
</source>
        <target state="translated">错误: {0} 任务检测没有提供拥有下列配置的任务:
{1}
将忽略此任务。
</target>
      </trans-unit>
      <trans-unit id="TaskSystem.configurationErrors">
        <source xml:lang="en">Error: the provided task configuration has validation errors and can't not be used. Please correct the errors first.</source>
        <target state="translated">错误: 提供的任务配置具有验证错误，无法使用。请首先改正错误。</target>
      </trans-unit>
      <trans-unit id="TaskSystem.invalidTaskJsonOther">
        <source xml:lang="en">Error: The content of the tasks json in {0} has syntax errors. Please correct them before executing a task.
</source>
        <target state="translated">错误： {0} 中的任务 json 的内容存在语法错误。请在执行任务之前更正它们。
</target>
      </trans-unit>
      <trans-unit id="TasksSystem.locationWorkspaceConfig">
        <source xml:lang="en">workspace file</source>
        <target state="translated">工作区文件</target>
      </trans-unit>
      <trans-unit id="TaskSystem.versionWorkspaceFile">
        <source xml:lang="en">Only tasks version 2.0.0 permitted in .codeworkspace.</source>
        <target state="translated">.code 工作区中只允许 2.0.0 版本的任务。</target>
      </trans-unit>
      <trans-unit id="TasksSystem.locationUserConfig">
        <source xml:lang="en">user settings</source>
        <target state="translated">用户设置</target>
      </trans-unit>
      <trans-unit id="TaskSystem.versionSettings">
        <source xml:lang="en">Only tasks version 2.0.0 permitted in user settings.</source>
        <target state="translated">用户设置中只允许版本为 2.0.0 的任务。</target>
      </trans-unit>
      <trans-unit id="taskService.ignoreingFolder">
        <source xml:lang="en">Ignoring task configurations for workspace folder {0}. Multi folder workspace task support requires that all folders use task version 2.0.0
</source>
        <target state="translated">将忽略工作区文件夹 {0} 的任务配置。多文件夹工作区任务支持要求所有文件夹使用任务版本 2.0.0
</target>
      </trans-unit>
      <trans-unit id="TaskSystem.invalidTaskJson">
        <source xml:lang="en">Error: The content of the tasks.json file has syntax errors. Please correct them before executing a task.
</source>
        <target state="translated">错误: tasks.json 文件的内容具有语法错误。请先更正错误然后再执行任务。
</target>
      </trans-unit>
      <trans-unit id="TaskSystem.runningTask">
        <source xml:lang="en">There is a task running. Do you want to terminate it?</source>
        <target state="translated">存在运行中的任务。要终止它吗?</target>
      </trans-unit>
      <trans-unit id="TaskSystem.terminateTask">
        <source xml:lang="en">&amp;&amp;Terminate Task</source>
        <target state="translated">终止任务(&amp;&amp;T)</target>
        <note>&amp;&amp; denotes a mnemonic</note>
      </trans-unit>
      <trans-unit id="TaskSystem.noProcess">
        <source xml:lang="en">The launched task doesn't exist anymore. If the task spawned background processes exiting VS Code might result in orphaned processes. To avoid this start the last background process with a wait flag.</source>
        <target state="translated">启动的任务不再存在。如果任务已生成出后台进程，则退出 VS Code 可能会导致出现孤立的进程。若要避免此情况，请使用等待标记启动最后一个后台进程。</target>
      </trans-unit>
      <trans-unit id="TaskSystem.exitAnyways">
        <source xml:lang="en">&amp;&amp;Exit Anyways</source>
        <target state="translated">仍然退出(&amp;&amp;E)</target>
        <note>&amp;&amp; denotes a mnemonic</note>
      </trans-unit>
      <trans-unit id="TerminateAction.label">
        <source xml:lang="en">Terminate Task</source>
        <target state="translated">终止任务</target>
      </trans-unit>
      <trans-unit id="TaskSystem.unknownError">
        <source xml:lang="en">An error has occurred while running a task. See task log for details.</source>
        <target state="translated">运行任务时发生了错误。请参见任务日志了解详细信息。</target>
      </trans-unit>
      <trans-unit id="TaskService.noWorkspace">
        <source xml:lang="en">Tasks are only available on a workspace folder.</source>
        <target state="translated">任务仅在工作区文件夹上可用。</target>
      </trans-unit>
      <trans-unit id="TaskService.learnMore">
        <source xml:lang="en">Learn More</source>
        <target state="translated">了解详细信息</target>
      </trans-unit>
      <trans-unit id="configureTask">
        <source xml:lang="en">Configure Task</source>
        <target state="translated">配置任务</target>
      </trans-unit>
      <trans-unit id="recentlyUsed">
        <source xml:lang="en">recently used tasks</source>
        <target state="translated">最近使用的任务</target>
      </trans-unit>
      <trans-unit id="configured">
        <source xml:lang="en">configured tasks</source>
        <target state="translated">已配置的任务</target>
      </trans-unit>
      <trans-unit id="detected">
        <source xml:lang="en">detected tasks</source>
        <target state="translated">检测到的任务</target>
      </trans-unit>
      <trans-unit id="pickProgressManager.description">
        <source xml:lang="en">Detecting tasks ({0} of {1}): {2} in progress</source>
        <target state="translated">正在检测任务（第 {0} 项，共 {1} 项） ：正在进行{2}</target>
      </trans-unit>
      <trans-unit id="taskQuickPick.cancel">
        <source xml:lang="en">Stop detecting</source>
        <target state="translated">停止检测</target>
      </trans-unit>
      <trans-unit id="TaskService.ignoredFolder">
        <source xml:lang="en">The following workspace folders are ignored since they use task version 0.1.0: {0}</source>
        <target state="translated">由于使用任务版本 0.1.0，以下工作区文件夹将被忽略: {0}</target>
      </trans-unit>
      <trans-unit id="TaskService.notAgain">
        <source xml:lang="en">Don't Show Again</source>
        <target state="translated">不再显示</target>
      </trans-unit>
      <trans-unit id="TaskService.pickRunTask">
        <source xml:lang="en">Select the task to run</source>
        <target state="translated">选择要运行的任务</target>
      </trans-unit>
      <trans-unit id="TaskService.noEntryToRun">
        <source xml:lang="en">No task to run found. Configure Tasks...</source>
        <target state="translated">没有找到要运行的任务。配置任务...</target>
      </trans-unit>
      <trans-unit id="TaskService.fetchingBuildTasks">
        <source xml:lang="en">Fetching build tasks...</source>
        <target state="translated">正在获取生成任务...</target>
      </trans-unit>
      <trans-unit id="TaskService.pickBuildTask">
        <source xml:lang="en">Select the build task to run</source>
        <target state="translated">选择要运行的生成任务</target>
      </trans-unit>
      <trans-unit id="TaskService.noBuildTask">
        <source xml:lang="en">No build task to run found. Configure Build Task...</source>
        <target state="translated">没有找到要运行的生成任务。配置生成任务...</target>
      </trans-unit>
      <trans-unit id="TaskService.fetchingTestTasks">
        <source xml:lang="en">Fetching test tasks...</source>
        <target state="translated">正在获取测试任务...</target>
      </trans-unit>
      <trans-unit id="TaskService.pickTestTask">
        <source xml:lang="en">Select the test task to run</source>
        <target state="translated">选择要运行的测试任务</target>
      </trans-unit>
      <trans-unit id="TaskService.noTestTaskTerminal">
        <source xml:lang="en">No test task to run found. Configure Tasks...</source>
        <target state="translated">没有找到要运行的测试任务。配置任务...</target>
      </trans-unit>
      <trans-unit id="TaskService.taskToTerminate">
        <source xml:lang="en">Select a task to terminate</source>
        <target state="translated">选择要终止的任务</target>
      </trans-unit>
      <trans-unit id="TaskService.noTaskRunning">
        <source xml:lang="en">No task is currently running</source>
        <target state="translated">当前没有运行中的任务</target>
      </trans-unit>
      <trans-unit id="TaskService.terminateAllRunningTasks">
        <source xml:lang="en">All Running Tasks</source>
        <target state="translated">所有正在运行的任务</target>
      </trans-unit>
      <trans-unit id="TerminateAction.noProcess">
        <source xml:lang="en">The launched process doesn't exist anymore. If the task spawned background tasks exiting VS Code might result in orphaned processes.</source>
        <target state="translated">启动的进程不再存在。如果任务生成的后台任务退出 VS Code，则可能会导致出现孤立的进程。</target>
      </trans-unit>
      <trans-unit id="TerminateAction.failed">
        <source xml:lang="en">Failed to terminate running task</source>
        <target state="translated">未能终止运行中的任务</target>
      </trans-unit>
      <trans-unit id="TaskService.taskToRestart">
        <source xml:lang="en">Select the task to restart</source>
        <target state="translated">选择要重启的任务</target>
      </trans-unit>
      <trans-unit id="TaskService.noTaskToRestart">
        <source xml:lang="en">No task to restart</source>
        <target state="translated">没有要重启的任务</target>
      </trans-unit>
      <trans-unit id="TaskService.template">
        <source xml:lang="en">Select a Task Template</source>
        <target state="translated">选择任务模板</target>
      </trans-unit>
      <trans-unit id="taskQuickPick.userSettings">
        <source xml:lang="en">User Settings</source>
        <target state="translated">用户设置</target>
      </trans-unit>
      <trans-unit id="TaskService.createJsonFile">
        <source xml:lang="en">Create tasks.json file from template</source>
        <target state="translated">使用模板创建 tasks.json 文件</target>
      </trans-unit>
      <trans-unit id="TaskService.openJsonFile">
        <source xml:lang="en">Open tasks.json file</source>
        <target state="translated">打开 tasks.json 文件</target>
      </trans-unit>
      <trans-unit id="TaskService.pickTask">
        <source xml:lang="en">Select a task to configure</source>
        <target state="translated">选择要配置的任务</target>
      </trans-unit>
      <trans-unit id="TaskService.defaultBuildTaskExists">
        <source xml:lang="en">{0} is already marked as the default build task</source>
        <target state="translated">{0} 已被标记为默认生成任务</target>
      </trans-unit>
      <trans-unit id="TaskService.pickDefaultBuildTask">
        <source xml:lang="en">Select the task to be used as the default build task</source>
        <target state="translated">选择要用作默认生成任务的任务</target>
      </trans-unit>
      <trans-unit id="TaskService.defaultTestTaskExists">
        <source xml:lang="en">{0} is already marked as the default test task.</source>
        <target state="translated">{0} 已被标记为默认测试任务。</target>
      </trans-unit>
      <trans-unit id="TaskService.pickDefaultTestTask">
        <source xml:lang="en">Select the task to be used as the default test task</source>
        <target state="translated">选择要用作默认测试任务的任务</target>
      </trans-unit>
      <trans-unit id="TaskService.pickShowTask">
        <source xml:lang="en">Select the task to show its output</source>
        <target state="translated">选择要显示输出的任务</target>
      </trans-unit>
      <trans-unit id="TaskService.noTaskIsRunning">
        <source xml:lang="en">No task is running</source>
        <target state="translated">没有运行中的任务</target>
      </trans-unit>
    </body>
  </file>
  <file original="src/vs/workbench/contrib/tasks/common/taskTemplates" source-language="en" target-language="zh-Hans" datatype="plaintext">
    <body>
      <trans-unit id="dotnetCore">
        <source xml:lang="en">Executes .NET Core build command</source>
        <target state="translated">执行 .NET Core 生成命令</target>
      </trans-unit>
      <trans-unit id="msbuild">
        <source xml:lang="en">Executes the build target</source>
        <target state="translated">执行生成目标</target>
      </trans-unit>
      <trans-unit id="externalCommand">
        <source xml:lang="en">Example to run an arbitrary external command</source>
        <target state="translated">运行任意外部命令的示例</target>
      </trans-unit>
      <trans-unit id="Maven">
        <source xml:lang="en">Executes common maven commands</source>
        <target state="translated">执行常见的 maven 命令</target>
      </trans-unit>
    </body>
  </file>
  <file original="src/vs/workbench/contrib/tasks/browser/terminalTaskSystem" source-language="en" target-language="zh-Hans" datatype="plaintext">
    <body>
      <trans-unit id="TerminalTaskSystem.unknownError">
        <source xml:lang="en">A unknown error has occurred while executing a task. See task output log for details.</source>
        <target state="translated">在执行任务时发生未知错误。请参见任务输出日志了解详细信息。</target>
      </trans-unit>
      <trans-unit id="dependencyFailed">
        <source xml:lang="en">Couldn't resolve dependent task '{0}' in workspace folder '{1}'</source>
        <target state="translated">无法解析在工作区文件夹“{1}”中的依赖任务“{0}”</target>
      </trans-unit>
      <trans-unit id="TerminalTaskSystem.nonWatchingMatcher">
        <source xml:lang="en">Task {0} is a background task but uses a problem matcher without a background pattern</source>
        <target state="translated">任务 {0} 是后台任务，但使用的问题匹配器没有后台模式</target>
      </trans-unit>
      <trans-unit id="TerminalTaskSystem.terminalName">
        <source xml:lang="en">Task - {0}</source>
        <target state="translated">任务 - {0}</target>
      </trans-unit>
      <trans-unit id="closeTerminal">
        <source xml:lang="en">Press any key to close the terminal.</source>
        <target state="translated">按任意键关闭终端。</target>
      </trans-unit>
      <trans-unit id="reuseTerminal">
        <source xml:lang="en">Terminal will be reused by tasks, press any key to close it.</source>
        <target state="translated">终端将被任务重用，按任意键关闭。</target>
      </trans-unit>
      <trans-unit id="TerminalTaskSystem">
        <source xml:lang="en">Can't execute a shell command on an UNC drive using cmd.exe.</source>
        <target state="translated">无法使用 cmd.exe 在 UNC 驱动器上执行 Shell 命令。</target>
      </trans-unit>
      <trans-unit id="unknownProblemMatcher">
        <source xml:lang="en">Problem matcher {0} can't be resolved. The matcher will be ignored</source>
        <target state="translated">无法解析问题匹配程序 {0}。此匹配程序将被忽略</target>
      </trans-unit>
    </body>
  </file>
</xliff>