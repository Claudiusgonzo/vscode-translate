<?xml version="1.0" encoding="utf-8"?>
<xliff version="1.2" xmlns="urn:oasis:names:tc:xliff:document:1.2">
  <file original="src/vs/workbench/services/themes/common/colorExtensionPoint" source-language="en" target-language="zh-Hans" datatype="plaintext">
    <body>
      <trans-unit id="contributes.color">
        <source xml:lang="en">Contributes extension defined themable colors</source>
        <target state="translated">提供由扩展定义的主题颜色</target>
      </trans-unit>
      <trans-unit id="contributes.color.id">
        <source xml:lang="en">The identifier of the themable color</source>
        <target state="translated">主题颜色标识符</target>
      </trans-unit>
      <trans-unit id="contributes.color.id.format">
        <source xml:lang="en">Identifiers should be in the form aa[.bb]*</source>
        <target state="translated">标识符应满足 aa[.bb]*</target>
      </trans-unit>
      <trans-unit id="contributes.color.description">
        <source xml:lang="en">The description of the themable color</source>
        <target state="translated">主题颜色描述</target>
      </trans-unit>
      <trans-unit id="contributes.defaults.light">
        <source xml:lang="en">The default color for light themes. Either a color value in hex (#RRGGBB[AA]) or the identifier of a themable color which provides the default.</source>
        <target state="translated">浅色主题的默认颜色。应为十六进制颜色值 (#RRGGBB[AA]) 或是主题颜色标识符，其提供默认值。</target>
      </trans-unit>
      <trans-unit id="contributes.defaults.dark">
        <source xml:lang="en">The default color for dark themes. Either a color value in hex (#RRGGBB[AA]) or the identifier of a themable color which provides the default.</source>
        <target state="translated">深色主题的默认颜色。应为十六进制颜色值 (#RRGGBB[AA]) 或是主题颜色标识符，其提供默认值。</target>
      </trans-unit>
      <trans-unit id="contributes.defaults.highContrast">
        <source xml:lang="en">The default color for high contrast themes. Either a color value in hex (#RRGGBB[AA]) or the identifier of a themable color which provides the default.</source>
        <target state="translated">高对比度主题的默认颜色。应为十六进制颜色值 (#RRGGBB[AA]) 或是主题颜色标识符，其提供默认值。</target>
      </trans-unit>
      <trans-unit id="invalid.colorConfiguration">
        <source xml:lang="en">'configuration.colors' must be a array</source>
        <target state="translated">"configuration.colors" 必须是数组</target>
      </trans-unit>
      <trans-unit id="invalid.default.colorType">
        <source xml:lang="en">{0} must be either a color value in hex (#RRGGBB[AA] or #RGB[A]) or the identifier of a themable color which provides the default.</source>
        <target state="translated">{0} 必须为十六进制颜色值 (#RRGGBB[AA] 或 #RGB[A]) 或是主题颜色标识符，其提供默认值。</target>
      </trans-unit>
      <trans-unit id="invalid.id">
        <source xml:lang="en">'configuration.colors.id' must be defined and can not be empty</source>
        <target state="translated">必须定义 "configuration.colors.id"，且不能为空</target>
      </trans-unit>
      <trans-unit id="invalid.id.format">
        <source xml:lang="en">'configuration.colors.id' must follow the word[.word]*</source>
        <target state="translated">"configuration.colors.id" 必须满足 word[.word]*</target>
      </trans-unit>
      <trans-unit id="invalid.description">
        <source xml:lang="en">'configuration.colors.description' must be defined and can not be empty</source>
        <target state="translated">必须定义 "configuration.colors.description"，且不能为空</target>
      </trans-unit>
      <trans-unit id="invalid.defaults">
        <source xml:lang="en">'configuration.colors.defaults' must be defined and must contain 'light', 'dark' and 'highContrast'</source>
        <target state="translated">必须定义 “configuration.colors.defaults”，且须包含 "light"(浅色)、"dark"(深色) 和 "highContrast"(高对比度)</target>
      </trans-unit>
    </body>
  </file>
  <file original="src/vs/workbench/services/themes/common/tokenClassificationExtensionPoint" source-language="en" target-language="zh-Hans" datatype="plaintext">
    <body>
      <trans-unit id="contributes.semanticTokenTypes">
        <source xml:lang="en">Contributes semantic token types.</source>
        <target state="translated">贡献语义令牌类型。</target>
      </trans-unit>
      <trans-unit id="contributes.semanticTokenTypes.id">
        <source xml:lang="en">The identifier of the semantic token type</source>
        <target state="translated">语义令牌类型的标识符</target>
      </trans-unit>
      <trans-unit id="contributes.semanticTokenTypes.id.format">
        <source xml:lang="en">Identifiers should be in the form letterOrDigit[_-letterOrDigit]*</source>
        <target state="translated">标识符的格式应为letterOrDigit[_-letterOrDigit]*</target>
      </trans-unit>
      <trans-unit id="contributes.color.description">
        <source xml:lang="en">The description of the semantic token type</source>
        <target state="translated">语义令牌类型的描述</target>
      </trans-unit>
      <trans-unit id="contributes.semanticTokenModifiers">
        <source xml:lang="en">Contributes semantic token modifiers.</source>
        <target state="translated">提供语义标记修饰符。</target>
      </trans-unit>
      <trans-unit id="contributes.semanticTokenModifiers.id">
        <source xml:lang="en">The identifier of the semantic token modifier</source>
        <target state="translated">语义令牌修饰符的标识符</target>
      </trans-unit>
      <trans-unit id="contributes.semanticTokenModifiers.id.format">
        <source xml:lang="en">Identifiers should be in the form letterOrDigit[_-letterOrDigit]*</source>
        <target state="translated">标识符的格式应为letterOrDigit[_-letterOrDigit]*</target>
      </trans-unit>
      <trans-unit id="contributes.semanticTokenModifiers.description">
        <source xml:lang="en">The description of the semantic token modifier</source>
        <target state="translated">语义令牌修饰符的说明</target>
      </trans-unit>
      <trans-unit id="contributes.semanticTokenStyleDefaults">
        <source xml:lang="en">Contributes semantic token style defaults.</source>
        <target state="translated">提供语义令牌样式默认值。</target>
      </trans-unit>
      <trans-unit id="contributes.semanticTokenStyleDefaults.selector">
        <source xml:lang="en">The selector matching token types and modifiers.</source>
        <target state="translated">与令牌类型和修饰符匹配的选择器。</target>
      </trans-unit>
      <trans-unit id="contributes.semanticTokenStyleDefaults.selector.format">
        <source xml:lang="en">Selectors should be in the form (type|*)(.modifier)*</source>
        <target state="translated">选择器的格式应为(type|*)(.modifier)*</target>
      </trans-unit>
      <trans-unit id="contributes.semanticTokenStyleDefaults.scope">
        <source xml:lang="en">A TextMate scope against the current color theme is matched to find the style for the given selector</source>
        <target state="translated">根据当前颜色主题匹配 TextMate 范围以查找给定选择器的样式</target>
      </trans-unit>
      <trans-unit id="contributes.semanticTokenStyleDefaults.light">
        <source xml:lang="en">The default style used for light themes</source>
        <target state="translated">用于浅色主题的默认样式</target>
      </trans-unit>
      <trans-unit id="contributes.semanticTokenStyleDefaults.dark">
        <source xml:lang="en">The default style used for dark themes</source>
        <target state="translated">用于深色主题的默认样式</target>
      </trans-unit>
      <trans-unit id="contributes.semanticTokenStyleDefaults.hc">
        <source xml:lang="en">The default style used for high contrast themes</source>
        <target state="translated">用于高对比度主题的默认样式</target>
      </trans-unit>
      <trans-unit id="invalid.id">
        <source xml:lang="en">'configuration.{0}.id' must be defined and can not be empty</source>
        <target state="translated">"configuration.{0}.id"必须定义，不能为空</target>
      </trans-unit>
      <trans-unit id="invalid.id.format">
        <source xml:lang="en">'configuration.{0}.id' must follow the pattern letterOrDigit[-_letterOrDigit]*</source>
        <target state="translated">"configuration.{0}.id"必须遵循模式letterOrDigit[-_letterOrDigit]*</target>
      </trans-unit>
      <trans-unit id="invalid.superType.format">
        <source xml:lang="en">'configuration.{0}.superType' must follow the pattern letterOrDigit[-_letterOrDigit]*</source>
        <target state="translated">“ configuration.{0}.superType”必须遵循格式 letterOrDigit [-_ letterOrDigit] *</target>
      </trans-unit>
      <trans-unit id="invalid.description">
        <source xml:lang="en">'configuration.{0}.description' must be defined and can not be empty</source>
        <target state="translated">"configuration.{0}.description"必须定义，不能为空</target>
      </trans-unit>
      <trans-unit id="invalid.color">
        <source xml:lang="en">'configuration.{0}.foreground'  must follow the pattern #RRGGBB[AA]</source>
        <target state="translated">"configuration.{0}.foreground"必须遵循模式#RRGGBB[AA]</target>
      </trans-unit>
      <trans-unit id="invalid.fontStyle">
        <source xml:lang="en">'configuration.{0}.fontStyle'  must be one or a combination of  'italic', 'bold' or 'underline' or the empty string</source>
        <target state="translated">“ configuration.{0}.fontStyle”必须是“斜体”，“粗体”或“下划线”之一或组合，或者是空字符串</target>
      </trans-unit>
      <trans-unit id="invalid.semanticTokenTypeConfiguration">
        <source xml:lang="en">'configuration.semanticTokenType' must be an array</source>
        <target state="translated">“configuration.semanticTokenType”必须是数组</target>
      </trans-unit>
      <trans-unit id="invalid.semanticTokenModifierConfiguration">
        <source xml:lang="en">'configuration.semanticTokenModifier' must be an array</source>
        <target state="translated">“configuration.semanticTokenModifier” 必须是数组</target>
      </trans-unit>
      <trans-unit id="invalid.semanticTokenStyleDefaultConfiguration">
        <source xml:lang="en">'configuration.semanticTokenStyleDefaults' must be an array</source>
        <target state="translated">“configuration.semanticTokenStyleDefaults”必须是数组</target>
      </trans-unit>
      <trans-unit id="invalid.selector">
        <source xml:lang="en">'configuration.semanticTokenStyleDefaults.selector' must be defined and can not be empty</source>
        <target state="translated">“configuration.semanticTokenStyleDefaults.selector” 必须定义，不能为空</target>
      </trans-unit>
      <trans-unit id="invalid.selector.format">
        <source xml:lang="en">'configuration.semanticTokenStyleDefaults.selector' must be in the form (type|*)(.modifier)*</source>
        <target state="translated">“configuration.semanticTokenStyleDefaults.selector”的格式必须为 (type|*)(.modifier)*</target>
      </trans-unit>
      <trans-unit id="invalid.scope">
        <source xml:lang="en">If defined, 'configuration.semanticTokenStyleDefaults.scope' must be an array of strings</source>
        <target state="translated">如果定义，则“ configuration.semanticTokenStyleDefaults.scope”必须是字符串数组</target>
      </trans-unit>
      <trans-unit id="invalid.selector.parsing">
        <source xml:lang="en">configuration.semanticTokenStyleDefaults.selector': Problems parsing {0}.</source>
        <target state="translated">“configuration.semanticTokenStyleDefaults.selector”：解析{0}时出现问题。</target>
      </trans-unit>
    </body>
  </file>
  <file original="src/vs/workbench/services/themes/browser/workbenchThemeService" source-language="en" target-language="zh-Hans" datatype="plaintext">
    <body>
      <trans-unit id="error.cannotloadtheme">
        <source xml:lang="en">Unable to load {0}: {1}</source>
        <target state="translated">无法加载 {0}: {1}</target>
      </trans-unit>
      <trans-unit id="colorTheme">
        <source xml:lang="en">Specifies the color theme used in the workbench.</source>
        <target state="translated">指定用在工作台中的颜色主题。</target>
      </trans-unit>
      <trans-unit id="colorThemeError">
        <source xml:lang="en">Theme is unknown or not installed.</source>
        <target state="translated">主题未知或未安装。</target>
      </trans-unit>
      <trans-unit id="preferredDarkColorTheme">
        <source xml:lang="en">Specifies the preferred color theme for dark OS appearance when '{0}' is enabled.</source>
        <target state="translated">指定启用"{0}"时深色操作系统外观的首选颜色主题。</target>
      </trans-unit>
      <trans-unit id="preferredLightColorTheme">
        <source xml:lang="en">Specifies the preferred color theme for light OS appearance when '{0}' is enabled.</source>
        <target state="translated">指定启用"{0}"时浅色操作系统外观的首选颜色主题。</target>
      </trans-unit>
      <trans-unit id="preferredHCColorTheme">
        <source xml:lang="en">Specifies the preferred color theme used in high contrast mode when '{0}' is enabled.</source>
        <target state="translated">指定启用"{0}"时在高对比度模式下使用的首选颜色主题。</target>
      </trans-unit>
      <trans-unit id="detectColorScheme">
        <source xml:lang="en">If set, automatically switch to the preferred color theme based on the OS appearance.</source>
        <target state="translated">如果设置，则根据操作系统外观自动切换到首选颜色主题。</target>
      </trans-unit>
      <trans-unit id="iconTheme">
        <source xml:lang="en">Specifies the icon theme used in the workbench or 'null' to not show any file icons.</source>
        <target state="translated">指定在工作台中使用的图标主题，或指定 "null" 以不显示任何文件图标。</target>
      </trans-unit>
      <trans-unit id="noIconThemeDesc">
        <source xml:lang="en">No file icons</source>
        <target state="translated">无文件图标</target>
      </trans-unit>
      <trans-unit id="iconThemeError">
        <source xml:lang="en">File icon theme is unknown or not installed.</source>
        <target state="translated">文件图标主题未知或未安装。</target>
      </trans-unit>
      <trans-unit id="workbenchColors">
        <source xml:lang="en">Overrides colors from the currently selected color theme.</source>
        <target state="translated">覆盖当前所选颜色主题的颜色。</target>
      </trans-unit>
      <trans-unit id="editorColors.comments">
        <source xml:lang="en">Sets the colors and styles for comments</source>
        <target state="translated">设置注释的颜色和样式</target>
      </trans-unit>
      <trans-unit id="editorColors.strings">
        <source xml:lang="en">Sets the colors and styles for strings literals.</source>
        <target state="translated">设置字符串文本的颜色和样式</target>
      </trans-unit>
      <trans-unit id="editorColors.keywords">
        <source xml:lang="en">Sets the colors and styles for keywords.</source>
        <target state="translated">设置关键字的颜色和样式。</target>
      </trans-unit>
      <trans-unit id="editorColors.numbers">
        <source xml:lang="en">Sets the colors and styles for number literals.</source>
        <target state="translated">设置数字的颜色和样式。</target>
      </trans-unit>
      <trans-unit id="editorColors.types">
        <source xml:lang="en">Sets the colors and styles for type declarations and references.</source>
        <target state="translated">设置类型定义与引用的颜色和样式。</target>
      </trans-unit>
      <trans-unit id="editorColors.functions">
        <source xml:lang="en">Sets the colors and styles for functions declarations and references.</source>
        <target state="translated">设置函数定义与引用的颜色和样式。</target>
      </trans-unit>
      <trans-unit id="editorColors.variables">
        <source xml:lang="en">Sets the colors and styles for variables declarations and references.</source>
        <target state="translated">设置变量定义和引用的颜色和样式。</target>
      </trans-unit>
      <trans-unit id="editorColors.textMateRules">
        <source xml:lang="en">Sets colors and styles using textmate theming rules (advanced).</source>
        <target state="translated">使用 TextMate 主题规则设置颜色和样式(高级)。</target>
      </trans-unit>
      <trans-unit id="editorColors">
        <source xml:lang="en">Overrides editor colors and font style from the currently selected color theme.</source>
        <target state="translated">覆盖当前所选颜色主题中的编辑器颜色和字体样式。</target>
      </trans-unit>
      <trans-unit id="editorColorsTokenStyles">
        <source xml:lang="en">Overrides token color and styles from the currently selected color theme.</source>
        <target state="translated">覆盖当前所选颜色主题中的标记颜色和样式。</target>
      </trans-unit>
    </body>
  </file>
  <file original="src/vs/workbench/services/themes/common/colorThemeSchema" source-language="en" target-language="zh-Hans" datatype="plaintext">
    <body>
      <trans-unit id="schema.token.settings">
        <source xml:lang="en">Colors and styles for the token.</source>
        <target state="translated">标记的颜色和样式。</target>
      </trans-unit>
      <trans-unit id="schema.token.foreground">
        <source xml:lang="en">Foreground color for the token.</source>
        <target state="translated">标记的前景色。</target>
      </trans-unit>
      <trans-unit id="schema.token.background.warning">
        <source xml:lang="en">Token background colors are currently not supported.</source>
        <target state="translated">暂不支持标记背景色。</target>
      </trans-unit>
      <trans-unit id="schema.token.fontStyle">
        <source xml:lang="en">Font style of the rule: 'italic', 'bold' or 'underline' or a combination. The empty string unsets inherited settings.</source>
        <target state="translated">这条规则的字体样式: "italic" (斜体)、"bold" (粗体)、"underline" (下划线) 或是上述的组合。空字符串将清除继承的设置。</target>
      </trans-unit>
      <trans-unit id="schema.fontStyle.error">
        <source xml:lang="en">Font style must be 'italic', 'bold' or 'underline' or a combination or the empty string.</source>
        <target state="translated">字体样式必须为 "italic" (斜体)、"bold" (粗体)、"underline" (下划线) 、上述的组合或是为空字符串。</target>
      </trans-unit>
      <trans-unit id="schema.token.fontStyle.none">
        <source xml:lang="en">None (clear inherited style)</source>
        <target state="translated">无 (清除继承的设置)</target>
      </trans-unit>
      <trans-unit id="schema.properties.name">
        <source xml:lang="en">Description of the rule.</source>
        <target state="translated">规则的描述。</target>
      </trans-unit>
      <trans-unit id="schema.properties.scope">
        <source xml:lang="en">Scope selector against which this rule matches.</source>
        <target state="translated">此规则适用的范围选择器。</target>
      </trans-unit>
      <trans-unit id="schema.workbenchColors">
        <source xml:lang="en">Colors in the workbench</source>
        <target state="translated">工作台中的颜色</target>
      </trans-unit>
      <trans-unit id="schema.tokenColors.path">
        <source xml:lang="en">Path to a tmTheme file (relative to the current file).</source>
        <target state="translated">tmTheme 文件路径(相对于当前文件)。</target>
      </trans-unit>
      <trans-unit id="schema.colors">
        <source xml:lang="en">Colors for syntax highlighting</source>
        <target state="translated">语法突出显示颜色</target>
      </trans-unit>
    </body>
  </file>
  <file original="src/vs/workbench/services/themes/browser/fileIconThemeStore" source-language="en" target-language="zh-Hans" datatype="plaintext">
    <body>
      <trans-unit id="vscode.extension.contributes.iconThemes">
        <source xml:lang="en">Contributes file icon themes.</source>
        <target state="translated">提供文件图标主题。</target>
      </trans-unit>
      <trans-unit id="vscode.extension.contributes.iconThemes.id">
        <source xml:lang="en">Id of the icon theme as used in the user settings.</source>
        <target state="translated">用户设置中使用的图标主题的 ID。</target>
      </trans-unit>
      <trans-unit id="vscode.extension.contributes.iconThemes.label">
        <source xml:lang="en">Label of the icon theme as shown in the UI.</source>
        <target state="translated">UI 中显示的图标主题的标签。</target>
      </trans-unit>
      <trans-unit id="vscode.extension.contributes.iconThemes.path">
        <source xml:lang="en">Path of the icon theme definition file. The path is relative to the extension folder and is typically './icons/awesome-icon-theme.json'.</source>
        <target state="translated">图标主题定义文件的路径。该路径相对于扩展文件夹，通常是 "./icons/awesome-icon-theme.json"。</target>
      </trans-unit>
      <trans-unit id="reqarray">
        <source xml:lang="en">Extension point `{0}` must be an array.</source>
        <target state="translated">扩展点“{0}”必须是数组。 </target>
      </trans-unit>
      <trans-unit id="reqpath">
        <source xml:lang="en">Expected string in `contributes.{0}.path`. Provided value: {1}</source>
        <target state="translated">“contributes.{0}.path”中应为字符串。提供的值: {1}</target>
      </trans-unit>
      <trans-unit id="reqid">
        <source xml:lang="en">Expected string in `contributes.{0}.id`. Provided value: {1}</source>
        <target state="translated">contributes.{0}.id" 中的预期字符串。提供的值: {1}</target>
      </trans-unit>
      <trans-unit id="invalid.path.1">
        <source xml:lang="en">Expected `contributes.{0}.path` ({1}) to be included inside extension's folder ({2}). This might make the extension non-portable.</source>
        <target state="translated">“contributes.{0}.path”({1})应包含在扩展的文件夹({2})内。这可能会使扩展不可移植。</target>
      </trans-unit>
    </body>
  </file>
  <file original="src/vs/workbench/services/themes/common/colorThemeStore" source-language="en" target-language="zh-Hans" datatype="plaintext">
    <body>
      <trans-unit id="vscode.extension.contributes.themes">
        <source xml:lang="en">Contributes textmate color themes.</source>
        <target state="translated">提供 TextMate 颜色主题。</target>
      </trans-unit>
      <trans-unit id="vscode.extension.contributes.themes.id">
        <source xml:lang="en">Id of the icon theme as used in the user settings.</source>
        <target state="translated">用户设置中使用的图标主题的 ID。</target>
      </trans-unit>
      <trans-unit id="vscode.extension.contributes.themes.label">
        <source xml:lang="en">Label of the color theme as shown in the UI.</source>
        <target state="translated">显示在 UI 中的颜色主题标签。</target>
      </trans-unit>
      <trans-unit id="vscode.extension.contributes.themes.uiTheme">
        <source xml:lang="en">Base theme defining the colors around the editor: 'vs' is the light color theme, 'vs-dark' is the dark color theme. 'hc-black' is the dark high contrast theme.</source>
        <target state="translated">用于定义编辑器周围颜色的基本主题: "vs" 是浅色主题，"vs-dark" 是深色主题。"hc-black" 是深色高对比度主题。</target>
      </trans-unit>
      <trans-unit id="vscode.extension.contributes.themes.path">
        <source xml:lang="en">Path of the tmTheme file. The path is relative to the extension folder and is typically './themes/themeFile.tmTheme'.</source>
        <target state="translated">tmTheme 文件的路径。该路径相对于扩展文件夹，通常为 "./themes/themeFile.tmTheme"。</target>
      </trans-unit>
      <trans-unit id="reqarray">
        <source xml:lang="en">Extension point `{0}` must be an array.</source>
        <target state="translated">扩展点“{0}”必须是数组。 </target>
      </trans-unit>
      <trans-unit id="reqpath">
        <source xml:lang="en">Expected string in `contributes.{0}.path`. Provided value: {1}</source>
        <target state="translated">“contributes.{0}.path”中应为字符串。提供的值: {1}</target>
      </trans-unit>
      <trans-unit id="invalid.path.1">
        <source xml:lang="en">Expected `contributes.{0}.path` ({1}) to be included inside extension's folder ({2}). This might make the extension non-portable.</source>
        <target state="translated">“contributes.{0}.path”({1})应包含在扩展的文件夹({2})内。这可能会使扩展不可移植。</target>
      </trans-unit>
    </body>
  </file>
  <file original="src/vs/workbench/services/themes/browser/fileIconThemeData" source-language="en" target-language="zh-Hans" datatype="plaintext">
    <body>
      <trans-unit id="error.cannotparseicontheme">
        <source xml:lang="en">Problems parsing file icons file: {0}</source>
        <target state="translated">解析文件图标文件时出现问题: {0}</target>
      </trans-unit>
      <trans-unit id="error.invalidformat">
        <source xml:lang="en">Invalid format for file icons theme file: Object expected.</source>
        <target state="translated">文件图标主题文件的格式无效: 应为对象。</target>
      </trans-unit>
    </body>
  </file>
  <file original="src/vs/workbench/services/themes/common/fileIconThemeSchema" source-language="en" target-language="zh-Hans" datatype="plaintext">
    <body>
      <trans-unit id="schema.folderExpanded">
        <source xml:lang="en">The folder icon for expanded folders. The expanded folder icon is optional. If not set, the icon defined for folder will be shown.</source>
        <target state="translated">展开文件夹的文件夹图标。展开文件夹图标是可选的。如果未设置，将显示为文件夹定义的图标。</target>
      </trans-unit>
      <trans-unit id="schema.folder">
        <source xml:lang="en">The folder icon for collapsed folders, and if folderExpanded is not set, also for expanded folders.</source>
        <target state="translated">折叠文件夹的文件夹图标，如果未设置 folderExpanded，也指展开文件夹的文件夹图标。</target>
      </trans-unit>
      <trans-unit id="schema.file">
        <source xml:lang="en">The default file icon, shown for all files that don't match any extension, filename or language id.</source>
        <target state="translated">默认文件图标，针对不与任何扩展名、文件名或语言 ID 匹配的所有文件显示。</target>
      </trans-unit>
      <trans-unit id="schema.folderNames">
        <source xml:lang="en">Associates folder names to icons. The object key is the folder name, not including any path segments. No patterns or wildcards are allowed. Folder name matching is case insensitive.</source>
        <target state="translated">将文件夹名关联到图标。对象中的键是文件夹名，其中不含任何路径字段。不允许使用模式或通配符。文件夹名匹配不区分大小写。</target>
      </trans-unit>
      <trans-unit id="schema.folderName">
        <source xml:lang="en">The ID of the icon definition for the association.</source>
        <target state="translated">关联的图标定义的 ID。</target>
      </trans-unit>
      <trans-unit id="schema.folderNamesExpanded">
        <source xml:lang="en">Associates folder names to icons for expanded folders. The object key is the folder name, not including any path segments. No patterns or wildcards are allowed. Folder name matching is case insensitive.</source>
        <target state="translated">将文件夹名关联到展开文件夹的图标。对象中的键是文件夹名，其中不含任何路径字段。不允许使用模式或通配符。文件夹名匹配不区分大小写。</target>
      </trans-unit>
      <trans-unit id="schema.folderNameExpanded">
        <source xml:lang="en">The ID of the icon definition for the association.</source>
        <target state="translated">关联的图标定义的 ID。</target>
      </trans-unit>
      <trans-unit id="schema.fileExtensions">
        <source xml:lang="en">Associates file extensions to icons. The object key is the file extension name. The extension name is the last segment of a file name after the last dot (not including the dot). Extensions are compared case insensitive.</source>
        <target state="translated">将文件扩展名关联到图标。对象中的键是文件扩展名。扩展名是文件名的最后一部分，位于最后一个点之后 (不包括该点)。比较扩展名时不区分大小写。</target>
      </trans-unit>
      <trans-unit id="schema.fileExtension">
        <source xml:lang="en">The ID of the icon definition for the association.</source>
        <target state="translated">关联的图标定义的 ID。</target>
      </trans-unit>
      <trans-unit id="schema.fileNames">
        <source xml:lang="en">Associates file names to icons. The object key is the full file name, but not including any path segments. File name can include dots and a possible file extension. No patterns or wildcards are allowed. File name matching is case insensitive.</source>
        <target state="translated">将文件名关联到图标。对象中的键是完整文件名，其中不含任何路径字段。文件名可以包括点和可能有的文件扩展名。不允许使用模式或通配符。文件名匹配不区分大小写。</target>
      </trans-unit>
      <trans-unit id="schema.fileName">
        <source xml:lang="en">The ID of the icon definition for the association.</source>
        <target state="translated">关联的图标定义的 ID。</target>
      </trans-unit>
      <trans-unit id="schema.languageIds">
        <source xml:lang="en">Associates languages to icons. The object key is the language id as defined in the language contribution point.</source>
        <target state="translated">将语言与图标相关联。对象键是语言贡献点中定义的语言 ID。</target>
      </trans-unit>
      <trans-unit id="schema.languageId">
        <source xml:lang="en">The ID of the icon definition for the association.</source>
        <target state="translated">关联的图标定义的 ID。</target>
      </trans-unit>
      <trans-unit id="schema.fonts">
        <source xml:lang="en">Fonts that are used in the icon definitions.</source>
        <target state="translated">图标定义中使用的字体。</target>
      </trans-unit>
      <trans-unit id="schema.id">
        <source xml:lang="en">The ID of the font.</source>
        <target state="translated">字体的 ID。</target>
      </trans-unit>
      <trans-unit id="schema.src">
        <source xml:lang="en">The location of the font.</source>
        <target state="translated">字体的位置。</target>
      </trans-unit>
      <trans-unit id="schema.font-path">
        <source xml:lang="en">The font path, relative to the current icon theme file.</source>
        <target state="translated">相对于当前图标主题文件的字体路径。</target>
      </trans-unit>
      <trans-unit id="schema.font-format">
        <source xml:lang="en">The format of the font.</source>
        <target state="translated">字体的格式。</target>
      </trans-unit>
      <trans-unit id="schema.font-weight">
        <source xml:lang="en">The weight of the font.</source>
        <target state="translated">字体的粗细。</target>
      </trans-unit>
      <trans-unit id="schema.font-sstyle">
        <source xml:lang="en">The style of the font.</source>
        <target state="translated">字体的样式。</target>
      </trans-unit>
      <trans-unit id="schema.font-size">
        <source xml:lang="en">The default size of the font.</source>
        <target state="translated">字体的默认大小。</target>
      </trans-unit>
      <trans-unit id="schema.iconDefinitions">
        <source xml:lang="en">Description of all icons that can be used when associating files to icons.</source>
        <target state="translated">将文件关联到图标时可以使用的所有图标的说明。</target>
      </trans-unit>
      <trans-unit id="schema.iconDefinition">
        <source xml:lang="en">An icon definition. The object key is the ID of the definition.</source>
        <target state="translated">图标定义。对象键是定义的 ID。</target>
      </trans-unit>
      <trans-unit id="schema.iconPath">
        <source xml:lang="en">When using a SVG or PNG: The path to the image. The path is relative to the icon set file.</source>
        <target state="translated">使用 SVG 或 PNG 时: 到图像的路径。该路径相对于图标设置文件。</target>
      </trans-unit>
      <trans-unit id="schema.fontCharacter">
        <source xml:lang="en">When using a glyph font: The character in the font to use.</source>
        <target state="translated">使用字形字体时: 要使用的字体中的字符。</target>
      </trans-unit>
      <trans-unit id="schema.fontColor">
        <source xml:lang="en">When using a glyph font: The color to use.</source>
        <target state="translated">使用字形字体时: 要使用的颜色。</target>
      </trans-unit>
      <trans-unit id="schema.fontSize">
        <source xml:lang="en">When using a font: The font size in percentage to the text font. If not set, defaults to the size in the font definition.</source>
        <target state="translated">使用某种字体时: 文本字体的字体大小(以百分比表示)。如果未设置，则默认为字体定义中的大小。</target>
      </trans-unit>
      <trans-unit id="schema.fontId">
        <source xml:lang="en">When using a font: The id of the font. If not set, defaults to the first font definition.</source>
        <target state="translated">使用某种字体时: 字体的 ID。如果未设置，则默认为第一个字体定义。</target>
      </trans-unit>
      <trans-unit id="schema.light">
        <source xml:lang="en">Optional associations for file icons in light color themes.</source>
        <target state="translated">浅色主题中文件图标的可选关联。</target>
      </trans-unit>
      <trans-unit id="schema.highContrast">
        <source xml:lang="en">Optional associations for file icons in high contrast color themes.</source>
        <target state="translated">高对比度颜色主题中文件图标的可选关联。</target>
      </trans-unit>
      <trans-unit id="schema.hidesExplorerArrows">
        <source xml:lang="en">Configures whether the file explorer's arrows should be hidden when this theme is active.</source>
        <target state="translated">配置文件资源管理器的箭头是否应在此主题启用时隐藏。</target>
      </trans-unit>
    </body>
  </file>
  <file original="src/vs/workbench/services/themes/common/colorThemeData" source-language="en" target-language="zh-Hans" datatype="plaintext">
    <body>
      <trans-unit id="error.cannotparsejson">
        <source xml:lang="en">Problems parsing JSON theme file: {0}</source>
        <target state="translated">分析 JSON 主题文件 {0} 时出现问题</target>
      </trans-unit>
      <trans-unit id="error.invalidformat">
        <source xml:lang="en">Invalid format for JSON theme file: Object expected.</source>
        <target state="translated">JSON 主题文件的格式无效: 应为对象。</target>
      </trans-unit>
      <trans-unit id="error.invalidformat.colors">
        <source xml:lang="en">Problem parsing color theme file: {0}. Property 'colors' is not of type 'object'.</source>
        <target state="translated">分析颜色主题文件时出现问题：{0}。属性“colors”不是“object”类型。</target>
        <note>{0} will be replaced by a path. Values in quotes should not be translated.</note>
      </trans-unit>
      <trans-unit id="error.invalidformat.tokenColors">
        <source xml:lang="en">Problem parsing color theme file: {0}. Property 'tokenColors' should be either an array specifying colors or a path to a TextMate theme file</source>
        <target state="translated">分析颜色主题文件时出现问题：{0}。属性 "tokenColors" 应为指定颜色的数组或是指向 TextMate 主题文件的路径</target>
        <note>{0} will be replaced by a path. Values in quotes should not be translated.</note>
      </trans-unit>
      <trans-unit id="error.plist.invalidformat">
        <source xml:lang="en">Problem parsing tmTheme file: {0}. 'settings' is not array.</source>
        <target state="translated">分析 tmTheme 文件时出现问题: {0}。"settings" 不是数组。</target>
      </trans-unit>
      <trans-unit id="error.cannotparse">
        <source xml:lang="en">Problems parsing tmTheme file: {0}</source>
        <target state="translated">分析 tmTheme 文件时出现问题：{0}</target>
      </trans-unit>
      <trans-unit id="error.cannotload">
        <source xml:lang="en">Problems loading tmTheme file {0}: {1}</source>
        <target state="translated">分析 tmTheme 文件 {0} 时出现问题：{1}</target>
      </trans-unit>
    </body>
  </file>
</xliff>