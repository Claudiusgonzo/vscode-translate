<?xml version="1.0" encoding="utf-8"?>
<xliff version="1.2" xmlns="urn:oasis:names:tc:xliff:document:1.2">
  <file original="extensions/ms-vscode.js-debug-nightly/package" source-language="en" target-language="ru" datatype="plaintext">
    <body>
      <trans-unit id="add.browser.breakpoint">
        <source xml:lang="en">Add Browser Breakpoint</source>
        <target state="translated">Добавить точку останова браузера</target>
      </trans-unit>
      <trans-unit id="attach.node.process">
        <source xml:lang="en">Attach to Node Process (preview)</source>
        <target state="translated">Подключение к процессу узла (предварительная версия)</target>
      </trans-unit>
      <trans-unit id="browser.address.description">
        <source xml:lang="en">TCP/IP address of debug port</source>
        <target state="translated">TCP/IP адрес порта отладки</target>
      </trans-unit>
      <trans-unit id="browser.baseUrl.description">
        <source xml:lang="en">Base URL to resolve paths baseUrl. baseURL is trimmed when mapping URLs to the files on disk. Defaults to the launch URL domain.</source>
        <target state="translated">Базовый URL-адрес для разрешения baseUrl путей. baseURL обрезается при сопоставлении URL-адресов с файлами на диске. По умолчанию используется домен URL-адреса запуска.</target>
      </trans-unit>
      <trans-unit id="browser.cwd.description">
        <source xml:lang="en">Optional working directory for the runtime executable.</source>
        <target state="translated">Дополнительный рабочий каталог для исполняемого файла среды выполнения.</target>
      </trans-unit>
      <trans-unit id="browser.disableNetworkCache.description">
        <source xml:lang="en">Controls whether to skip the network cache for each request</source>
        <target state="translated">Определяет, нужно ли пропустить сетевой кэш для каждого запроса</target>
      </trans-unit>
      <trans-unit id="browser.env.description">
        <source xml:lang="en">Optional dictionary of environment key/value pairs for the browser.</source>
        <target state="translated">Дополнительный словарь пар "ключ-значение" среды для браузера.</target>
      </trans-unit>
      <trans-unit id="browser.file.description">
        <source xml:lang="en">A local html file to open in the browser</source>
        <target state="translated">Локальный HTML-файл, открываемый в браузере</target>
      </trans-unit>
      <trans-unit id="browser.includeDefaultArgs.description">
        <source xml:lang="en">Whether default browser launch arguments (to disable features that may make debugging harder) will be included in the launch.</source>
        <target state="translated">Будут ли использованы аргументы запуска браузера по умолчанию (чтобы отключить функции, которые могут усложнить отладку).</target>
      </trans-unit>
      <trans-unit id="browser.inspectUri.description">
        <source xml:lang="en">Format to use to rewrite the inspectUri: It's a template string that interpolates keys in `{curlyBraces}`. Available keys are:
 - `url.*` is the parsed address of the running application. For instance, `{url.port}`, `{url.hostname}`
 - `port` is the debug port that Chrome is listening on.
 - `browserInspectUri` is the inspector URI on the launched browser
 - `wsProtocol` is the hinted websocket protocol. This is set to `wss` if the original URL is `https`, or `ws` otherwise.
</source>
        <target state="translated">Формат, используемый для перезаписи inspectUri: это строка шаблона, которая интерполирует ключи в "{curlyBraces}". Доступные ключи:
 — "url.*" является анализируемым адресом запущенного приложения. Например, "{url.port}", "{url.hostname}".
 — "port" является портом отладки, прослушиваемым Chrome.
 — "browserInspectUri" является URI инспектора в запущенном браузере.
 — "wsProtocol" является предложенным протоколом WebSocket. Для этого параметра задано значение "wss", если оригинальный URL-адрес относится к типу "https", в противном случае — значение "ws".</target>
      </trans-unit>
      <trans-unit id="browser.pathMapping.description">
        <source xml:lang="en">A mapping of URLs/paths to local folders, to resolve scripts in the Browser to scripts on disk</source>
        <target state="translated">Сопоставление URL-адресов/путей с локальными папками для разрешения скриптов в браузере в скрипты на диске</target>
      </trans-unit>
      <trans-unit id="browser.port.description">
        <source xml:lang="en">Port to use for remote debugging the browser.</source>
        <target state="translated">Порт для удаленной отладки в браузере.</target>
      </trans-unit>
      <trans-unit id="browser.runtimeArgs.description">
        <source xml:lang="en">Optional arguments passed to the runtime executable.</source>
        <target state="translated">Необязательные аргументы, переданные исполняемому файлу среды выполнения.</target>
      </trans-unit>
      <trans-unit id="browser.runtimeExecutable.description">
        <source xml:lang="en">Either 'canary', 'stable', 'custom' or path to the browser executable. Custom means a custom wrapper, custom build or CHROME_PATH environment variable.</source>
        <target state="translated">Это "canary", "stable", "custom" или путь к исполняемому файлу браузера. Значение "custom" означает настраиваемую программу-оболочку, пользовательскую сборку или переменную среды CHROME_PATH.</target>
      </trans-unit>
      <trans-unit id="browser.server.description">
        <source xml:lang="en">Configures a web server to start up. Takes the same configuration as the 'node' launch task.</source>
        <target state="translated">Настраивает веб-сервер для запуска. Принимает ту же конфигурацию, что и задача запуска "node".</target>
      </trans-unit>
      <trans-unit id="browser.skipFiles.description">
        <source xml:lang="en">An array of file or folder names, or path globs, to skip when debugging.</source>
        <target state="translated">Массив имен файлов, имен папок или стандартных масок, которые следует пропустить при отладке.</target>
      </trans-unit>
      <trans-unit id="browser.smartStep.description">
        <source xml:lang="en">Automatically step through unmapped lines in sourcemapped files. For example, code that TypeScript produces automatically when downcompiling async/await or other features.</source>
        <target state="translated">Автоматически обрабатывать несопоставленные строки в файлах сопоставлений исходного кода, например, код, который TypeScript формирует автоматически при компиляции с async/await и другими параметрами.</target>
      </trans-unit>
      <trans-unit id="browser.sourceMapPathOverrides.description">
        <source xml:lang="en">A set of mappings for rewriting the locations of source files from what the sourcemap says, to their locations on disk. See README for details.</source>
        <target state="translated">Набор сопоставлений для изменения расположения исходных файлов с расположения, указанного в карте исходного кода, на расположение этих файлов на диске. Дополнительные сведения см. в файле README.</target>
      </trans-unit>
      <trans-unit id="browser.sourceMaps.description">
        <source xml:lang="en">Use JavaScript source maps (if they exist).</source>
        <target state="translated">Использовать карты исходного кода JavaScript (если они существуют).</target>
      </trans-unit>
      <trans-unit id="browser.timeout.description">
        <source xml:lang="en">Retry for this number of milliseconds to connect to the browser. Default is 10000 ms.</source>
        <target state="translated">Длительность повторных попыток подключения к браузеру в миллисекундах. Значение по умолчанию — 10 000 мс.</target>
      </trans-unit>
      <trans-unit id="browser.url.description">
        <source xml:lang="en">Will search for a tab with this exact url and attach to it, if found</source>
        <target state="translated">Будет искать вкладку с этим точным URL-адресом и подключаться к нему, если он найден</target>
      </trans-unit>
      <trans-unit id="browser.urlFilter.description">
        <source xml:lang="en">Will search for a page with this url and attach to it, if found. Can have * wildcards.</source>
        <target state="translated">Найдет страницу с указанным URL-адресом и присоединится к ней, если она найдена. Можно указывать подстановочные знаки *.</target>
      </trans-unit>
      <trans-unit id="browser.userDataDir.description">
        <source xml:lang="en">By default, the browser is launched with a separate user profile in a temp folder. Use this option to override it. Set to false to launch with your default user profile.</source>
        <target state="translated">По умолчанию браузер запускается с отдельным профилем пользователя во временной папке. Используйте этот параметр, чтобы переопределить его. Задайте значение false, чтобы запустить с использованием профиля пользователя по умолчанию.</target>
      </trans-unit>
      <trans-unit id="browser.webRoot.description">
        <source xml:lang="en">This specifies the workspace absolute path to the webserver root. Used to resolve paths like `/app.js` to files on disk. Shorthand for a pathMapping for "/"</source>
        <target state="translated">Указывает абсолютный путь рабочей области начиная с корневого каталога веб-сервера. Используется для преобразования путей вида "/app.js" в пути к файлам на диске. Сокращенный вариант pathMapping для "/"</target>
      </trans-unit>
      <trans-unit id="chrome.attach.description">
        <source xml:lang="en">Attach to an instance of Chrome already in debug mode</source>
        <target state="translated">Прикрепить к экземпляру Chrome, уже находящемуся в режиме отладки</target>
      </trans-unit>
      <trans-unit id="chrome.attach.label">
        <source xml:lang="en">Chrome: Attach</source>
        <target state="translated">Chrome: вложение</target>
      </trans-unit>
      <trans-unit id="chrome.label">
        <source xml:lang="en">Chrome (preview)</source>
        <target state="translated">Chrome (предварительная версия)</target>
      </trans-unit>
      <trans-unit id="chrome.launch.description">
        <source xml:lang="en">Launch Chrome to debug a URL</source>
        <target state="translated">Запуск Chrome для отладки URL-адреса</target>
      </trans-unit>
      <trans-unit id="chrome.launch.label">
        <source xml:lang="en">Chrome: Launch</source>
        <target state="translated">Chrome: запуск</target>
      </trans-unit>
      <trans-unit id="configuration.automaticallyTunnelRemoteServer">
        <source xml:lang="en">When debugging a remote web app, configures whether to automatically tunnel the remote server to your local machine.</source>
        <target state="translated">При отладке удаленного веб-приложения определяет, следует ли автоматически туннелировать удаленный сервер на локальный компьютер.</target>
      </trans-unit>
      <trans-unit id="configuration.debugByLinkOptions">
        <source xml:lang="en">Options used when debugging open links clicked from inside the debug terminal. Can be set to "false" to disable this behavior.</source>
        <target state="translated">Параметры, используемые при отладке открытых ссылок, выбранных изнутри терминала отладки. Можно задать значение "false", чтобы отключить это поведение.</target>
      </trans-unit>
      <trans-unit id="configuration.npmScriptLensLocation">
        <source xml:lang="en">Where a "Run" and "Debug" code lens should be shown in your npm scripts. It may be on "all", scripts, on "top" of the script section, or "never".</source>
        <target state="translated">Где требуется отобразить группы связанных элементов кода "Run" и "Debug" в ваших скриптах npm. Можно использовать значение "all" — во всех скриптах, "top" — сверху раздела скриптов или "never" — нигде.</target>
      </trans-unit>
      <trans-unit id="configuration.suggestPrettyPrinting">
        <source xml:lang="en">Whether to suggest pretty printing JavaScript code that looks minified when you step into it.</source>
        <target state="translated">Следует ли предлагать код автоматического форматирования JavaScript, который выглядит минифицированным при заходе в него.</target>
      </trans-unit>
      <trans-unit id="configuration.terminalOptions">
        <source xml:lang="en">Default launch options for the JavaScript debug terminal and npm scripts.</source>
        <target state="translated">Параметры запуска по умолчанию для терминала отладки JavaScript и скриптов npm.</target>
      </trans-unit>
      <trans-unit id="configuration.usePreview">
        <source xml:lang="en">Use the new in-preview JavaScript debugger for Node.js and Chrome.</source>
        <target state="translated">Используйте предварительную версию нового отладчика JavaScript для Node.js и Chrome.</target>
      </trans-unit>
      <trans-unit id="configuration.warnOnLongPrediction">
        <source xml:lang="en">Whether a loading prompt should be shown if breakpoint prediction takes a while.</source>
        <target state="translated">Следует ли выводить запрос на загрузку, если прогнозирование точки останова занимает некоторое время.</target>
      </trans-unit>
      <trans-unit id="debug.npm.edit">
        <source xml:lang="en">Edit package.json</source>
        <target state="translated">Изменить package.json</target>
      </trans-unit>
      <trans-unit id="debug.npm.noScripts">
        <source xml:lang="en">No npm scripts found in your package.json</source>
        <target state="translated">Скрипты npm в вашем package.json не найдены</target>
      </trans-unit>
      <trans-unit id="debug.npm.noWorkspaceFolder">
        <source xml:lang="en">You need to open a workspace folder to debug npm scripts.</source>
        <target state="translated">Для отладки скриптов npm нужно открыть папку рабочей области.</target>
      </trans-unit>
      <trans-unit id="debug.npm.parseError">
        <source xml:lang="en">Could not read {0}: {1}</source>
        <target state="translated">Не удалось считать {0}: {1}</target>
      </trans-unit>
      <trans-unit id="debug.npm.script">
        <source xml:lang="en">Debug NPM Script</source>
        <target state="translated">Отладка скрипта NPM</target>
      </trans-unit>
      <trans-unit id="debug.terminal.label">
        <source xml:lang="en">Create JavaScript Debug Terminal</source>
        <target state="translated">Создание терминала отладки JavaScript</target>
      </trans-unit>
      <trans-unit id="debug.terminal.program.description">
        <source xml:lang="en">Command to run in the launched terminal. If not provided, the terminal will open without launching a program.</source>
        <target state="translated">Команда для выполнения в запущенном терминале. Если параметр не задан, терминал откроется без запуска программы.</target>
      </trans-unit>
      <trans-unit id="debug.terminal.snippet.label">
        <source xml:lang="en">Run "npm start" in a debug terminal</source>
        <target state="translated">Выполнить "npm start" в терминале отладки</target>
      </trans-unit>
      <trans-unit id="debug.terminal.welcome">
        <source xml:lang="en">[Node.js Debug Terminal](command:extension.pwa-node-debug.createDebuggerTerminal)

You can use the Node.js Debug Terminal to instantly debug JavaScript you run from the command line.</source>
        <target state="translated">[Отладочный терминал Node.js](command:extension.pwa-node-debug.createDebuggerTerminal)

Вы можете использовать отладочный терминал Node.js для мгновенной отладки кода JavaScript, запущенного из командной строки.</target>
      </trans-unit>
      <trans-unit id="edge.attach.description">
        <source xml:lang="en">Attach to an instance of Edge already in debug mode</source>
        <target state="translated">Подключить к экземпляру Microsoft Edge уже в режиме отладки</target>
      </trans-unit>
      <trans-unit id="edge.attach.label">
        <source xml:lang="en">Edge: Attach</source>
        <target state="translated">Microsoft Edge: подключение</target>
      </trans-unit>
      <trans-unit id="edge.label">
        <source xml:lang="en">Edge (preview)</source>
        <target state="translated">Microsoft Edge (предварительная версия)</target>
      </trans-unit>
      <trans-unit id="edge.launch.description">
        <source xml:lang="en">Launch Edge to debug a URL</source>
        <target state="translated">Запустить Microsoft Edge для отладки URL-адреса</target>
      </trans-unit>
      <trans-unit id="edge.launch.label">
        <source xml:lang="en">Edge: Launch</source>
        <target state="translated">Microsoft Edge: запуск</target>
      </trans-unit>
      <trans-unit id="edge.useWebView.description">
        <source xml:lang="en">(Edge (Chromium) only) When 'true', the debugger will treat the runtime executable as a host application that contains a WebView allowing you to debug the WebView script content.</source>
        <target state="translated">(Только Microsoft Edge (Chromium)) Когда задано значение "true", отладчик будет обрабатывать исполняемый файл среды выполнения как ведущее приложение, содержащее WebView. что позволяет вам производить отладку содержимого скрипта WebView.</target>
      </trans-unit>
      <trans-unit id="errors.timeout">
        <source xml:lang="en">{0}: timeout after {1}ms</source>
        <target state="translated">{0}: время ожидания истекает через {1} мс</target>
      </trans-unit>
      <trans-unit id="extension.description">
        <source xml:lang="en">An extension for debugging Node.js programs and Chrome.</source>
        <target state="translated">Расширение для отладки программ Node.js и Chrome.</target>
      </trans-unit>
      <trans-unit id="extensionHost.label">
        <source xml:lang="en">VS Code Extension Development (preview)</source>
        <target state="translated">Разработка расширений VS Code (предварительная версия)</target>
      </trans-unit>
      <trans-unit id="extensionHost.launch.config.name">
        <source xml:lang="en">Launch Extension</source>
        <target state="translated">Запуск расширения</target>
      </trans-unit>
      <trans-unit id="extensionHost.launch.env.description">
        <source xml:lang="en">Environment variables passed to the extension host.</source>
        <target state="translated">Переменные среды переданы в хост-процесс для расширений.</target>
      </trans-unit>
      <trans-unit id="extensionHost.launch.runtimeExecutable.description">
        <source xml:lang="en">Absolute path to VS Code.</source>
        <target state="translated">Абсолютный путь к VS Code.</target>
      </trans-unit>
      <trans-unit id="extensionHost.launch.stopOnEntry.description">
        <source xml:lang="en">Automatically stop the extension host after launch.</source>
        <target state="translated">Автоматически остановить хост-процесс для расширений после запуска.</target>
      </trans-unit>
      <trans-unit id="extensionHost.snippet.launch.description">
        <source xml:lang="en">Launch a VS Code extension in debug mode</source>
        <target state="translated">Запуск расширения VS Code в режиме отладки</target>
      </trans-unit>
      <trans-unit id="extensionHost.snippet.launch.label">
        <source xml:lang="en">VS Code Extension Development</source>
        <target state="translated">Разработка расширения VS Code</target>
      </trans-unit>
      <trans-unit id="longPredictionWarning.disable">
        <source xml:lang="en">Don't show again</source>
        <target state="translated">Больше не показывать</target>
      </trans-unit>
      <trans-unit id="longPredictionWarning.message">
        <source xml:lang="en">It's taking a while to configure your breakpoints. You can speed this up by updating the 'outFiles' in your launch.json.</source>
        <target state="translated">Настройка точек остановка занимает некоторое время. Вы можете ускорить этот процесс, изменив "outFiles" в файле launch.json.</target>
      </trans-unit>
      <trans-unit id="longPredictionWarning.noFolder">
        <source xml:lang="en">No workspace folder open.</source>
        <target state="translated">Папка рабочей области не открыта.</target>
      </trans-unit>
      <trans-unit id="longPredictionWarning.open">
        <source xml:lang="en">Open launch.json</source>
        <target state="translated">Открытый launch.json</target>
      </trans-unit>
      <trans-unit id="node.address.description">
        <source xml:lang="en">TCP/IP address of process to be debugged. Default is 'localhost'.</source>
        <target state="translated">TCP/IP-адрес процесса для отладки. По умолчанию используется "localhost".</target>
      </trans-unit>
      <trans-unit id="node.attach.attachExistingChildren.description">
        <source xml:lang="en">Whether to attempt to attach to already-spawned child processes.</source>
        <target state="translated">Указывает, следует ли пытаться подключаться к уже порожденным дочерним процессам.</target>
      </trans-unit>
      <trans-unit id="node.attach.attachSpawnedProcesses.description">
        <source xml:lang="en">Whether to set environment variables in the attached process to track spawned children.</source>
        <target state="translated">Задаются ли переменные среды в подключенном процессе для отслеживания порожденных дочерних объектов.</target>
      </trans-unit>
      <trans-unit id="node.attach.config.name">
        <source xml:lang="en">Attach</source>
        <target state="translated">Подключить</target>
      </trans-unit>
      <trans-unit id="node.attach.continueOnAttach">
        <source xml:lang="en">If true, we'll automatically resume programs launched and waiting on `--inspect-brk`</source>
        <target state="translated">Если указано значение true, то мы автоматически возобновим программы, которые были запущены и ожидают "--inspect-brk"</target>
      </trans-unit>
      <trans-unit id="node.attach.processId.description">
        <source xml:lang="en">ID of process to attach to.</source>
        <target state="translated">Идентификатор процесса, к которому необходимо подключиться.</target>
      </trans-unit>
      <trans-unit id="node.attach.restart.description">
        <source xml:lang="en">Try to reconnect to the program if we lose connection.</source>
        <target state="translated">Если мы потеряем связь, попробуйте подключиться к программе еще раз.</target>
      </trans-unit>
      <trans-unit id="node.console.title">
        <source xml:lang="en">Node Debug Console</source>
        <target state="translated">Узел консоли отладки</target>
      </trans-unit>
      <trans-unit id="node.disableOptimisticBPs.description">
        <source xml:lang="en">Don't set breakpoints in any file until a sourcemap has been loaded for that file.</source>
        <target state="translated">Не устанавливать точки останова в файле до тех пор, пока не загружена карта исходного кода для этого файла.</target>
      </trans-unit>
      <trans-unit id="node.label">
        <source xml:lang="en">Node.js (preview)</source>
        <target state="translated">Node.js (предварительная версия)</target>
      </trans-unit>
      <trans-unit id="node.launch.args.description">
        <source xml:lang="en">Command line arguments passed to the program.</source>
        <target state="translated">Аргументы командной строки, переданные в программу.</target>
      </trans-unit>
      <trans-unit id="node.launch.autoAttachChildProcesses.description">
        <source xml:lang="en">Attach debugger to new child processes automatically.</source>
        <target state="translated">Автоматически подключать отладчик к новым дочерним процессам.</target>
      </trans-unit>
      <trans-unit id="node.launch.config.name">
        <source xml:lang="en">Launch</source>
        <target state="translated">Запустить</target>
      </trans-unit>
      <trans-unit id="node.launch.console.description">
        <source xml:lang="en">Where to launch the debug target.</source>
        <target state="translated">Где следует запускать целевой объект отладки.</target>
      </trans-unit>
      <trans-unit id="node.launch.console.externalTerminal.description">
        <source xml:lang="en">External terminal that can be configured via user settings</source>
        <target state="translated">Внешний терминал, который можно настроить в параметрах пользователя</target>
      </trans-unit>
      <trans-unit id="node.launch.console.integratedTerminal.description">
        <source xml:lang="en">VS Code's integrated terminal</source>
        <target state="translated">Интегрированный терминал VS Code</target>
      </trans-unit>
      <trans-unit id="node.launch.console.internalConsole.description">
        <source xml:lang="en">VS Code Debug Console (which doesn't support to read input from a program)</source>
        <target state="translated">Консоль отладки VS Code (не поддерживает чтение входных данных из программы)</target>
      </trans-unit>
      <trans-unit id="node.launch.cwd.description">
        <source xml:lang="en">Absolute path to the working directory of the program being debugged.</source>
        <target state="translated">Абсолютный путь к рабочему каталогу отлаживаемой программы.</target>
      </trans-unit>
      <trans-unit id="node.launch.env.description">
        <source xml:lang="en">Environment variables passed to the program. The value `null` removes the variable from the environment.</source>
        <target state="translated">Переменные среды, переданные программе. При указании значения "null" переменная удаляется из среды. </target>
      </trans-unit>
      <trans-unit id="node.launch.envFile.description">
        <source xml:lang="en">Absolute path to a file containing environment variable definitions.</source>
        <target state="translated">Абсолютный путь к файлу с определениями переменных среды.</target>
      </trans-unit>
      <trans-unit id="node.launch.logging">
        <source xml:lang="en">Logging configuration</source>
        <target state="translated">Конфигурация ведения журналов</target>
      </trans-unit>
      <trans-unit id="node.launch.logging.cdp">
        <source xml:lang="en">Path to the log file for Chrome DevTools Protocol messages</source>
        <target state="translated">Путь к файлу журнала для сообщений протокола Chrome DevTools</target>
      </trans-unit>
      <trans-unit id="node.launch.logging.dap">
        <source xml:lang="en">Path to the log file for Debug Adapter Protocol messages</source>
        <target state="translated">Путь к файлу журнала для сообщений протокола адаптера отладки</target>
      </trans-unit>
      <trans-unit id="node.launch.outputCapture.description">
        <source xml:lang="en">From where to capture output messages: The debug API, or stdout/stderr streams.</source>
        <target state="translated">Источник для получения выходных сообщений: API отладки, стандартный поток вывода или стандартный поток ошибок. </target>
      </trans-unit>
      <trans-unit id="node.launch.program.description">
        <source xml:lang="en">Absolute path to the program. Generated value is guessed by looking at package.json and opened files. Edit this attribute.</source>
        <target state="translated">Абсолютный путь к программе. Созданное значение можно определить, взглянув на package.json и открытые файлы. Изменить этот атрибут.</target>
      </trans-unit>
      <trans-unit id="node.launch.restart.description">
        <source xml:lang="en">Try to restart the program if it exits with a non-zero exit code.</source>
        <target state="translated">Попробуйте перезапустить программу, если она завершает работу с ненулевым кодом выхода.</target>
      </trans-unit>
      <trans-unit id="node.launch.runtimeArgs.description">
        <source xml:lang="en">Optional arguments passed to the runtime executable.</source>
        <target state="translated">Необязательные аргументы, переданные исполняемому файлу среды выполнения.</target>
      </trans-unit>
      <trans-unit id="node.launch.runtimeExecutable.description">
        <source xml:lang="en">Runtime to use. Either an absolute path or the name of a runtime available on the PATH. If omitted `node` is assumed.</source>
        <target state="translated">Используемая среда выполнения. Абсолютный путь или имя среды выполнения, доступные в переменной PATH. Если не указано, предполагается "node".</target>
      </trans-unit>
      <trans-unit id="node.launch.runtimeVersion.description">
        <source xml:lang="en">Version of `node` runtime to use. Requires `nvm`.</source>
        <target state="translated">Используемая версия среды выполнения "node". Требует "nvm".</target>
      </trans-unit>
      <trans-unit id="node.launch.useWSL.deprecation">
        <source xml:lang="en">'useWSL' is deprecated and support for it will be dropped. Use the 'Remote - WSL' extension instead.</source>
        <target state="translated">"useWSL" объявлено нерекомендуемым, и его поддержка будет прекращена. Используйте вместо него расширение "Remote - WSL".</target>
      </trans-unit>
      <trans-unit id="node.launch.useWSL.description">
        <source xml:lang="en">Use Windows Subsystem for Linux.</source>
        <target state="translated">Использовать подсистему Windows для Linux.</target>
      </trans-unit>
      <trans-unit id="node.localRoot.description">
        <source xml:lang="en">Path to the local directory containing the program.</source>
        <target state="translated">Путь к локальному каталогу, содержащему программу.</target>
      </trans-unit>
      <trans-unit id="node.pauseForSourceMap.description">
        <source xml:lang="en">Whether to wait for source maps to load for each incoming script. This has a performance overhead, and might be safely disabled when running off of disk, so long as `rootPath` is not disabled.</source>
        <target state="translated">Следует ли ждать, пока загружаются исходные карты для каждого входящего скрипта? Это снижает производительность и может быть безопасно отключено при нехватке места на диске при условии, что "rootPath" не отключен.</target>
      </trans-unit>
      <trans-unit id="node.port.description">
        <source xml:lang="en">Debug port to attach to. Default is 5858.</source>
        <target state="translated">Порт отладки для присоединения. Значение по умолчанию — 5858.</target>
      </trans-unit>
      <trans-unit id="node.processattach.config.name">
        <source xml:lang="en">Attach to Process</source>
        <target state="translated">Подключиться к процессу</target>
      </trans-unit>
      <trans-unit id="node.remoteRoot.description">
        <source xml:lang="en">Absolute path to the remote directory containing the program.</source>
        <target state="translated">Абсолютный путь к удаленному каталогу, содержащему программу.</target>
      </trans-unit>
      <trans-unit id="node.resolveSourceMapLocations.description">
        <source xml:lang="en">A list of minimatch patterns for locations (folders and URLs) in which source maps can be used to resolve local files. This can be used to avoid incorrectly breaking in external source mapped code. Patterns can be prefixed with "!" to exclude them. May be set to an empty array or null to avoid restriction.</source>
        <target state="translated">Список шаблонов minimatch для расположений (папок и URL-адресов), в которых можно использовать сопоставители с исходным кодом для разрешения локальных файлов. Это можно применять, чтобы избежать неправильного внедрения в код, сопоставленный с исходным кодом. Шаблонам можно назначать префикс "!", чтобы исключить их. Можно задать пустой массив или значение NULL, чтобы избежать ограничения.</target>
      </trans-unit>
      <trans-unit id="node.showAsyncStacks.description">
        <source xml:lang="en">Show the async calls that led to the current call stack.</source>
        <target state="translated">Отображение асинхронных вызовов, которые привели к текущему стеку вызовов.</target>
      </trans-unit>
      <trans-unit id="node.snippet.attach.description">
        <source xml:lang="en">Attach to a running node program</source>
        <target state="translated">Подключиться к запущенной программе Node</target>
      </trans-unit>
      <trans-unit id="node.snippet.attach.label">
        <source xml:lang="en">Node.js: Attach</source>
        <target state="translated">Node.js: подключение</target>
      </trans-unit>
      <trans-unit id="node.snippet.attachProcess.description">
        <source xml:lang="en">Open process picker to select node process to attach to</source>
        <target state="translated">Открыть средство выбора процессов для выбора процесса, к которому нужно подключиться</target>
      </trans-unit>
      <trans-unit id="node.snippet.attachProcess.label">
        <source xml:lang="en">Node.js: Attach to Process</source>
        <target state="translated">Node.js: подключение к процессу</target>
      </trans-unit>
      <trans-unit id="node.snippet.electron.description">
        <source xml:lang="en">Debug the Electron main process</source>
        <target state="translated">Отладка основного процесса Electron</target>
      </trans-unit>
      <trans-unit id="node.snippet.electron.label">
        <source xml:lang="en">Node.js: Electron Main</source>
        <target state="translated">Node.js: основной Electron</target>
      </trans-unit>
      <trans-unit id="node.snippet.gulp.description">
        <source xml:lang="en">Debug gulp task (make sure to have a local gulp installed in your project)</source>
        <target state="translated">Задача Gulp по отладке (убедитесь, что в вашем проекте установлен локальный Gulp)</target>
      </trans-unit>
      <trans-unit id="node.snippet.gulp.label">
        <source xml:lang="en">Node.js: Gulp task</source>
        <target state="translated">Node.js: задача Gulp</target>
      </trans-unit>
      <trans-unit id="node.snippet.launch.description">
        <source xml:lang="en">Launch a node program in debug mode</source>
        <target state="translated">Запуск программы на базе Node в режиме отладки</target>
      </trans-unit>
      <trans-unit id="node.snippet.launch.label">
        <source xml:lang="en">Node.js: Launch Program</source>
        <target state="translated">Node.js: запуск программы</target>
      </trans-unit>
      <trans-unit id="node.snippet.mocha.description">
        <source xml:lang="en">Debug mocha tests</source>
        <target state="translated">Отладка тестов Mocha</target>
      </trans-unit>
      <trans-unit id="node.snippet.mocha.label">
        <source xml:lang="en">Node.js: Mocha Tests</source>
        <target state="translated">Node.js: тесты Mocha</target>
      </trans-unit>
      <trans-unit id="node.snippet.nodemon.description">
        <source xml:lang="en">Use nodemon to relaunch a debug session on source changes</source>
        <target state="translated">Использование Nodemon для перезапуска сеанса отладки при изменениях исходного кода</target>
      </trans-unit>
      <trans-unit id="node.snippet.nodemon.label">
        <source xml:lang="en">Node.js: Nodemon Setup</source>
        <target state="translated">Node.js: настройка Nodemon</target>
      </trans-unit>
      <trans-unit id="node.snippet.npm.description">
        <source xml:lang="en">Launch a node program through an npm `debug` script</source>
        <target state="translated">Запуск программы на основе Node.js через сценарий отладки npm</target>
      </trans-unit>
      <trans-unit id="node.snippet.npm.label">
        <source xml:lang="en">Node.js: Launch via NPM</source>
        <target state="translated">Node.js: запуск через NPM</target>
      </trans-unit>
      <trans-unit id="node.snippet.remoteattach.description">
        <source xml:lang="en">Attach to the debug port of a remote node program</source>
        <target state="translated">Подключение к порту отладки удаленной программы Node</target>
      </trans-unit>
      <trans-unit id="node.snippet.remoteattach.label">
        <source xml:lang="en">Node.js: Attach to Remote Program</source>
        <target state="translated">Node.js: подключение к удаленной программе</target>
      </trans-unit>
      <trans-unit id="node.snippet.yo.description">
        <source xml:lang="en">Debug yeoman generator (install by running `npm link` in project folder)</source>
        <target state="translated">Генератор Yeoman отладки (чтобы установить, выполните команду "npm link" в папке проекта)</target>
      </trans-unit>
      <trans-unit id="node.snippet.yo.label">
        <source xml:lang="en">Node.js: Yeoman generator</source>
        <target state="translated">Node.js: генератор Yeoman</target>
      </trans-unit>
      <trans-unit id="node.sourceMapPathOverrides.description">
        <source xml:lang="en">A set of mappings for rewriting the locations of source files from what the sourcemap says, to their locations on disk.</source>
        <target state="translated">Набор сопоставлений для изменения расположения исходных файлов с расположения, указанного в карте исходного кода, на расположение этих файлов на диске.</target>
      </trans-unit>
      <trans-unit id="node.sourceMaps.description">
        <source xml:lang="en">Use JavaScript source maps (if they exist).</source>
        <target state="translated">Использовать карты исходного кода JavaScript (если они существуют).</target>
      </trans-unit>
      <trans-unit id="node.stopOnEntry.description">
        <source xml:lang="en">Automatically stop program after launch.</source>
        <target state="translated">Автоматически остановить программу после запуска.</target>
      </trans-unit>
      <trans-unit id="node.timeout.description">
        <source xml:lang="en">Retry for this number of milliseconds to connect to Node.js. Default is 10000 ms.</source>
        <target state="translated">Повторять в течение этого количества миллисекунд для подключения к Node.js. Значение по умолчанию — 10 000 мс.</target>
      </trans-unit>
      <trans-unit id="outFiles.description">
        <source xml:lang="en">If source maps are enabled, these glob patterns specify the generated JavaScript files. If a pattern starts with `!` the files are excluded. If not specified, the generated code is expected in the same directory as its source.</source>
        <target state="translated">Если включены сопоставления исходного кода, эти глобальные шаблоны указывают созданные файлы JavaScript. Если шаблон начинается с "!", файлы исключаются. Если не указан, созданный код должен быть в том же каталоге, что и исходный.</target>
      </trans-unit>
      <trans-unit id="pretty.print.script">
        <source xml:lang="en">Pretty print for debugging</source>
        <target state="translated">Качественная печать для отладки</target>
      </trans-unit>
      <trans-unit id="profile.start">
        <source xml:lang="en">Take Performance Profile</source>
        <target state="translated">Использовать профиль производительности</target>
      </trans-unit>
      <trans-unit id="profile.stop">
        <source xml:lang="en">Stop Performance Profile</source>
        <target state="translated">Остановить профиль производительности</target>
      </trans-unit>
      <trans-unit id="remove.browser.breakpoint">
        <source xml:lang="en">Remove Browser Breakpoint</source>
        <target state="translated">Удалить точку останова браузера</target>
      </trans-unit>
      <trans-unit id="remove.browser.breakpoint.all">
        <source xml:lang="en">Remove All Browser Breakpoints</source>
        <target state="translated">Удалить все точки останова браузера</target>
      </trans-unit>
      <trans-unit id="skipFiles.description">
        <source xml:lang="en">An array of glob patterns for files to skip when debugging. The pattern `&lt;node_internals&gt;/**` matches all internal Node.js modules.</source>
        <target state="translated">Массив стандартных масок для файлов, пропускаемых при отладке. Маска "&lt;node_internals&gt;/**" соответствует всем внутренним модулям Node.js.</target>
      </trans-unit>
      <trans-unit id="smartStep.description">
        <source xml:lang="en">Automatically step through generated code that cannot be mapped back to the original source.</source>
        <target state="translated">Автоматическая пошаговая отработка сформированного кода, который невозможно снова добавить в исходный источник.</target>
      </trans-unit>
      <trans-unit id="start.with.stop.on.entry">
        <source xml:lang="en">Start Debugging and Stop on Entry</source>
        <target state="translated">Запустить отладку и остановить ее при вводе</target>
      </trans-unit>
      <trans-unit id="toggle.skipping.this.file">
        <source xml:lang="en">Toggle Skipping this File</source>
        <target state="translated">Отключить пропуск для этого файла</target>
      </trans-unit>
      <trans-unit id="trace.boolean.description">
        <source xml:lang="en">Trace may be set to 'true' to write diagnostic logs to the disk.</source>
        <target state="translated">Для Trace можно установить значение "true", чтобы записывать диагностические журналы на диск.</target>
      </trans-unit>
      <trans-unit id="trace.console.description">
        <source xml:lang="en">Configures whether logs are also returned to the debug console.</source>
        <target state="translated">Настраивает, возвращаются ли журналы также в консоль отладки.</target>
      </trans-unit>
      <trans-unit id="trace.description">
        <source xml:lang="en">Configures what diagnostic output is produced.</source>
        <target state="translated">Настраивает то, какие диагностические выходные данные создаются.</target>
      </trans-unit>
      <trans-unit id="trace.level.description">
        <source xml:lang="en">Configures the level of logs recorded.</source>
        <target state="translated">Настраивает уровень записываемых журналов.</target>
      </trans-unit>
      <trans-unit id="trace.logFile.description">
        <source xml:lang="en">Configures where on disk logs are written.</source>
        <target state="translated">Настраивает, в какое место на диске записываются журналы.</target>
      </trans-unit>
      <trans-unit id="trace.stdio.description">
        <source xml:lang="en">Whether to return trace data from the launched application or browser.</source>
        <target state="translated">Возвращать ли данные трассировки из запущенного приложения или браузера.</target>
      </trans-unit>
      <trans-unit id="trace.tags.description">
        <source xml:lang="en">Configures what types of logs are recorded.</source>
        <target state="translated">Настраивает, какие типы регистров регистрируются.</target>
      </trans-unit>
    </body>
  </file>
</xliff>