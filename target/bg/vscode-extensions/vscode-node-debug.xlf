<?xml version="1.0" encoding="utf-8"?>
<xliff version="1.2" xmlns="urn:oasis:names:tc:xliff:document:1.2">
  <file original="package" source-language="en" target-language="bg" datatype="plaintext">
    <body>
      <trans-unit id="extension.description">
        <source xml:lang="en">Node.js debugging support (versions &lt; 8.0)</source>
        <target state="new">Node.js debugging support (versions &lt; 8.0)</target>
      </trans-unit>
      <trans-unit id="node.label">
        <source xml:lang="en">Node.js</source>
        <target state="translated">Node.js</target>
      </trans-unit>
      <trans-unit id="open.loaded.script">
        <source xml:lang="en">Open Loaded Script</source>
        <target state="translated">Отваряне на заредения скрипт</target>
      </trans-unit>
      <trans-unit id="attach.node.process">
        <source xml:lang="en">Attach to Node Process</source>
        <target state="translated">Прикачане към процес на Node</target>
      </trans-unit>
      <trans-unit id="toggle.skipping.this.file">
        <source xml:lang="en">Toggle Skipping this File</source>
        <target state="translated">Превключване на пропускането на този файл</target>
      </trans-unit>
      <trans-unit id="start.with.stop.on.entry">
        <source xml:lang="en">Start Debugging and Stop on Entry</source>
        <target state="translated">Стартиране на дебъгването и спиране в началото</target>
      </trans-unit>
      <trans-unit id="smartStep.description">
        <source xml:lang="en">Automatically step through generated code that cannot be mapped back to the original source.</source>
        <target state="translated">Автоматично преминаване през произведения код, който не може да бъде свързан с оригиналния изходен код.</target>
      </trans-unit>
      <trans-unit id="skipFiles.description">
        <source xml:lang="en">An array of glob patterns for files to skip when debugging. The pattern `&lt;node_internals&gt;/**` matches all internal Node.js modules.</source>
        <target state="new">An array of glob patterns for files to skip when debugging. The pattern `&lt;node_internals&gt;/**` matches all internal Node.js modules.</target>
      </trans-unit>
      <trans-unit id="outFiles.description">
        <source xml:lang="en">If source maps are enabled, these glob patterns specify the generated JavaScript files. If a pattern starts with '!' the files are excluded. If not specified, the generated code is expected in the same directory as its source.  Example: ["${workspaceFolder}/out/**/*.js"]</source>
        <target state="new">If source maps are enabled, these glob patterns specify the generated JavaScript files. If a pattern starts with '!' the files are excluded. If not specified, the generated code is expected in the same directory as its source.  Example: ["${workspaceFolder}/out/**/*.js"]</target>
      </trans-unit>
      <trans-unit id="outDir.deprecationMessage">
        <source xml:lang="en">Attribute 'outDir' is deprecated, use 'outFiles' instead.</source>
        <target state="translated">Атрибутът „outDir“ е излязъл от употреба. Вместо него използвайте „outFiles“.</target>
      </trans-unit>
      <trans-unit id="trace.description">
        <source xml:lang="en">Produce diagnostic output. Instead of setting this to true you can list one or more selectors separated with commas. The 'verbose' selector enables very detailed output.</source>
        <target state="translated">Извеждане на диагностична информация. Вместо да задавате „true“ (вярно), можете да изброите един или повече избирателя разделени със запетаи. Избирателят „verbose“ включва извеждането на много подробна информация.</target>
      </trans-unit>
      <trans-unit id="launch.args.description">
        <source xml:lang="en">Command line arguments passed to the program.</source>
        <target state="translated">Аргументи за команден ред, които да бъдат подадени на програмата.</target>
      </trans-unit>
      <trans-unit id="debug.node.showUseWslIsDeprecatedWarning.description">
        <source xml:lang="en">Controls whether to show a warning when the 'useWSL' attribute is used.</source>
        <target state="new">Controls whether to show a warning when the 'useWSL' attribute is used.</target>
      </trans-unit>
      <trans-unit id="debug.node.useV3.description">
        <source xml:lang="en">[Experimental] Controls whether to delegate "node"-type launch configs to the js-debug extension.</source>
        <target state="new">[Experimental] Controls whether to delegate "node"-type launch configs to the js-debug extension.</target>
      </trans-unit>
      <trans-unit id="node.protocol.description">
        <source xml:lang="en">Node.js debug protocol to use.</source>
        <target state="translated">Протокол за дебъгване на Node.js, който да се използва.</target>
      </trans-unit>
      <trans-unit id="node.protocol.auto.description">
        <source xml:lang="en">Try to detect the best protocol automatically, selecting 'inspector' for launching Node 8.0+</source>
        <target state="translated">Опит за автоматично избиране на най-добрия протокол; ще се избере „inspector“ за пускане на Node версия 8.0+</target>
      </trans-unit>
      <trans-unit id="node.protocol.inspector.description">
        <source xml:lang="en">New protocol supported by Node.js versions &gt;= 6.3</source>
        <target state="new">New protocol supported by Node.js versions &gt;= 6.3</target>
      </trans-unit>
      <trans-unit id="node.protocol.legacy.description">
        <source xml:lang="en">Old protocol supported by Node.js versions &lt; 8.0</source>
        <target state="new">Old protocol supported by Node.js versions &lt; 8.0</target>
      </trans-unit>
      <trans-unit id="node.sourceMaps.description">
        <source xml:lang="en">Use JavaScript source maps (if they exist).</source>
        <target state="translated">Използване на кодови съответствия на JavaScript (ако съществуват).</target>
      </trans-unit>
      <trans-unit id="node.stopOnEntry.description">
        <source xml:lang="en">Automatically stop program after launch.</source>
        <target state="translated">Автоматично спиране на програмата след стартиране.</target>
      </trans-unit>
      <trans-unit id="node.port.description">
        <source xml:lang="en">Debug port to attach to. Default is 5858.</source>
        <target state="translated">Порт за дебъгване, към който да се прикачи. По подразбиране: 5858.</target>
      </trans-unit>
      <trans-unit id="node.address.description">
        <source xml:lang="en">TCP/IP address of process to be debugged (for Node.js &gt;= 5.0 only). Default is 'localhost'.</source>
        <target state="new">TCP/IP address of process to be debugged (for Node.js &gt;= 5.0 only). Default is 'localhost'.</target>
      </trans-unit>
      <trans-unit id="node.timeout.description">
        <source xml:lang="en">Retry for this number of milliseconds to connect to Node.js. Default is 10000 ms.</source>
        <target state="translated">Това е период (в милисекунди), в който ще се правят опити за свързване с Node.js. По подразбиране стойността е 10000 мсек.</target>
      </trans-unit>
      <trans-unit id="node.restart.description">
        <source xml:lang="en">Restart session after Node.js has terminated.</source>
        <target state="translated">Рестартиране на сесията след прекратяване на изпълнението на Node.js.</target>
      </trans-unit>
      <trans-unit id="node.localRoot.description">
        <source xml:lang="en">Path to the local directory containing the program.</source>
        <target state="translated">Път до местната папка, съдържаща програмата.</target>
      </trans-unit>
      <trans-unit id="node.remoteRoot.description">
        <source xml:lang="en">Absolute path to the remote directory containing the program.</source>
        <target state="translated">Пълен път до отдалечената папка, съдържаща програмата.</target>
      </trans-unit>
      <trans-unit id="node.showAsyncStacks.description">
        <source xml:lang="en">Show the async calls that led to the current call stack. 'inspector' protocol only.</source>
        <target state="translated">Показване на асинхронните извиквания, които са довели до текущия стек на извикванията. Само за протокола „inspector“.</target>
      </trans-unit>
      <trans-unit id="node.sourceMapPathOverrides.description">
        <source xml:lang="en">A set of mappings for rewriting the locations of source files from what the sourcemap says, to their locations on disk.</source>
        <target state="translated">Набор от съответствия за замяна на местоположенията на изходните файлове от това, което е посочено в кодовото съответствие, към истинските местоположения на диска.</target>
      </trans-unit>
      <trans-unit id="node.disableOptimisticBPs.description">
        <source xml:lang="en">Don't set breakpoints in any file until a sourcemap has been loaded for that file.</source>
        <target state="translated">Да не се задават точки на прекъсване във файл, докато кодовото съответствие за него не бъде заредено.</target>
      </trans-unit>
      <trans-unit id="node.launch.program.description">
        <source xml:lang="en">Absolute path to the program. Generated value is guessed by looking at package.json and opened files. Edit this attribute.</source>
        <target state="translated">Пълен път до програмата. Генерираната стойност е предполагаема и се основава на данните от package.json и отворените файлове. Редактирайте този атрибут.</target>
      </trans-unit>
      <trans-unit id="node.launch.externalConsole.deprecationMessage">
        <source xml:lang="en">Attribute 'externalConsole' is deprecated, use 'console' instead.</source>
        <target state="translated">Атрибутът „externalConsole“ е излязъл от употреба. Вместо него използвайте „console“.</target>
      </trans-unit>
      <trans-unit id="node.launch.console.description">
        <source xml:lang="en">Where to launch the debug target.</source>
        <target state="translated">Къде да бъде изпълнена целта за дебъгване.</target>
      </trans-unit>
      <trans-unit id="node.launch.console.internalConsole.description">
        <source xml:lang="en">VS Code Debug Console (which doesn't support to read input from a program)</source>
        <target state="translated">Конзола за дебъгване на VS Code (която не поддържа възможност за четене на въвеждани данни от програма)</target>
      </trans-unit>
      <trans-unit id="node.launch.console.integratedTerminal.description">
        <source xml:lang="en">VS Code's integrated terminal</source>
        <target state="translated">Вграден терминал на VS Code</target>
      </trans-unit>
      <trans-unit id="node.launch.console.externalTerminal.description">
        <source xml:lang="en">External terminal that can be configured via user settings</source>
        <target state="translated">Външен терминал, който може да бъде определен в потребителските настройки</target>
      </trans-unit>
      <trans-unit id="node.launch.cwd.description">
        <source xml:lang="en">Absolute path to the working directory of the program being debugged.</source>
        <target state="translated">Пълен път до работната папка на програмата, която се дебъгва.</target>
      </trans-unit>
      <trans-unit id="node.launch.runtimeExecutable.description">
        <source xml:lang="en">Runtime to use. Either an absolute path or the name of a runtime available on the PATH. If omitted `node` is assumed.</source>
        <target state="translated">Изпълнима среда, която да се използва. Това трябва да бъде или абсолютен път, или име на изпълнима среда, която е налична в PATH. Ако няма стойност, ще се използва `node`.</target>
      </trans-unit>
      <trans-unit id="node.launch.runtimeArgs.description">
        <source xml:lang="en">Optional arguments passed to the runtime executable.</source>
        <target state="translated">Аргументи, които да бъдат подадени на изпълнимия файл (незадължително).</target>
      </trans-unit>
      <trans-unit id="node.launch.runtimeVersion.description">
        <source xml:lang="en">Version of `node` runtime to use. Requires `nvm`.</source>
        <target state="translated">Версия на средата за изпълнение на `node`, която да се ползва. Изисква `nvm`.</target>
      </trans-unit>
      <trans-unit id="node.launch.env.description">
        <source xml:lang="en">Environment variables passed to the program. The value `null` removes the variable from the environment.</source>
        <target state="translated">Променливи на средата, които да бъдат подадени към програмата. Стойността `null` премахва променливата от средата.</target>
      </trans-unit>
      <trans-unit id="node.launch.envFile.description">
        <source xml:lang="en">Absolute path to a file containing environment variable definitions.</source>
        <target state="translated">Пълен път до файл, съдържащ дефиниции на променливи на средата.</target>
      </trans-unit>
      <trans-unit id="node.launch.useWSL.description">
        <source xml:lang="en">Use Windows Subsystem for Linux.</source>
        <target state="translated">Използване на подсистемата за изпълнение на Линукс под Windows.</target>
      </trans-unit>
      <trans-unit id="node.launch.useWSL.deprecation">
        <source xml:lang="en">'useWSL' is deprecated and support for it will be dropped. Use the 'Remote - WSL' extension instead.</source>
        <target state="new">'useWSL' is deprecated and support for it will be dropped. Use the 'Remote - WSL' extension instead.</target>
      </trans-unit>
      <trans-unit id="node.launch.outputCapture.description">
        <source xml:lang="en">From where to capture output messages: The debug API, or stdout/stderr streams.</source>
        <target state="translated">Откъде да се прихващат изведените съобщения. Това може да бъде ППИ за дебъгване, или потоците „stdout“ и „stderr“.</target>
      </trans-unit>
      <trans-unit id="node.launch.autoAttachChildProcesses.description">
        <source xml:lang="en">Attach debugger to new child processes automatically.</source>
        <target state="translated">Автоматично прикачане на дебъгера към новите дъщерни процеси.</target>
      </trans-unit>
      <trans-unit id="node.launch.config.name">
        <source xml:lang="en">Launch</source>
        <target state="translated">Пускане</target>
      </trans-unit>
      <trans-unit id="node.attach.processId.description">
        <source xml:lang="en">ID of process to attach to.</source>
        <target state="translated">Ид. на процеса, към който да се прикачи.</target>
      </trans-unit>
      <trans-unit id="node.attach.config.name">
        <source xml:lang="en">Attach</source>
        <target state="translated">Прикачане</target>
      </trans-unit>
      <trans-unit id="node.processattach.config.name">
        <source xml:lang="en">Attach to Process</source>
        <target state="translated">Прикачане към процес</target>
      </trans-unit>
      <trans-unit id="node.snippet.launch.label">
        <source xml:lang="en">Node.js: Launch Program</source>
        <target state="translated">Node.js: Пускане на програма</target>
      </trans-unit>
      <trans-unit id="node.snippet.launch.description">
        <source xml:lang="en">Launch a node program in debug mode</source>
        <target state="translated">Пускане на програма на node в режим за дебъгване</target>
      </trans-unit>
      <trans-unit id="node.snippet.npm.label">
        <source xml:lang="en">Node.js: Launch via NPM</source>
        <target state="translated">Node.js: Пускане чрез NPM</target>
      </trans-unit>
      <trans-unit id="node.snippet.npm.description">
        <source xml:lang="en">Launch a node program through an npm `debug` script</source>
        <target state="translated">Пускане на програма на node чрез скрипт `debug` на npm за дебъгване</target>
      </trans-unit>
      <trans-unit id="node.snippet.attach.label">
        <source xml:lang="en">Node.js: Attach</source>
        <target state="translated">Node.js: Прикачане</target>
      </trans-unit>
      <trans-unit id="node.snippet.attach.description">
        <source xml:lang="en">Attach to a running node program</source>
        <target state="translated">Прикачане към работеща програма на node</target>
      </trans-unit>
      <trans-unit id="node.snippet.remoteattach.label">
        <source xml:lang="en">Node.js: Attach to Remote Program</source>
        <target state="translated">Node.js: Прикачане към отдалечена програма</target>
      </trans-unit>
      <trans-unit id="node.snippet.remoteattach.description">
        <source xml:lang="en">Attach to the debug port of a remote node program</source>
        <target state="translated">Прикачане към порта за дебъгване на отдалечена програма на node</target>
      </trans-unit>
      <trans-unit id="node.snippet.attachProcess.label">
        <source xml:lang="en">Node.js: Attach to Process</source>
        <target state="translated">Node.js: Прикачане към процес</target>
      </trans-unit>
      <trans-unit id="node.snippet.attachProcess.description">
        <source xml:lang="en">Open process picker to select node process to attach to</source>
        <target state="translated">Отваряне на прозореца за избор на процес за избиране на процес на node за прикачане</target>
      </trans-unit>
      <trans-unit id="node.snippet.nodemon.label">
        <source xml:lang="en">Node.js: Nodemon Setup</source>
        <target state="translated">Node.js: Настройка на nodemon</target>
      </trans-unit>
      <trans-unit id="node.snippet.nodemon.description">
        <source xml:lang="en">Use nodemon to relaunch a debug session on source changes</source>
        <target state="translated">Използване на nodemon за рестартиране на дебъгването при промяна на изходния код</target>
      </trans-unit>
      <trans-unit id="node.snippet.mocha.label">
        <source xml:lang="en">Node.js: Mocha Tests</source>
        <target state="translated">Node.js: Тестове на mocha</target>
      </trans-unit>
      <trans-unit id="node.snippet.mocha.description">
        <source xml:lang="en">Debug mocha tests</source>
        <target state="translated">Дебъгване на тестовете на mocha</target>
      </trans-unit>
      <trans-unit id="node.snippet.yo.label">
        <source xml:lang="en">Node.js: Yeoman generator</source>
        <target state="translated">Node.js: Генератор yeoman</target>
      </trans-unit>
      <trans-unit id="node.snippet.yo.description">
        <source xml:lang="en">Debug yeoman generator (install by running `npm link` in project folder)</source>
        <target state="translated">Дебъгване на генератора yeoman (инсталирайте го като изпълните `npm link` в папката на проекта)</target>
      </trans-unit>
      <trans-unit id="node.snippet.gulp.label">
        <source xml:lang="en">Node.js: Gulp task</source>
        <target state="translated">Node.js: Задача на gulp</target>
      </trans-unit>
      <trans-unit id="node.snippet.gulp.description">
        <source xml:lang="en">Debug gulp task (make sure to have a local gulp installed in your project)</source>
        <target state="translated">Дебъгване на задача на gulp (уверете се, че имате местен gulp инсталиран в проекта)</target>
      </trans-unit>
      <trans-unit id="node.snippet.electron.label">
        <source xml:lang="en">Node.js: Electron Main</source>
        <target state="translated">Node.js: Процес „main“ на Electron</target>
      </trans-unit>
      <trans-unit id="node.snippet.electron.description">
        <source xml:lang="en">Debug the Electron main process</source>
        <target state="translated">Дебъгване на процеса „main“ на Electron</target>
      </trans-unit>
    </body>
  </file>
  <file original="dist/node/nodeDebug" source-language="en" target-language="bg" datatype="plaintext">
    <body>
      <trans-unit id="setVariable.error">
        <source xml:lang="en">Setting value not supported</source>
        <target state="translated">Задаването на стойност не се поддържа</target>
      </trans-unit>
      <trans-unit id="exception.paused.promise.rejection">
        <source xml:lang="en">Paused on Promise Rejection</source>
        <target state="translated">На пауза – отхвърлено обещание</target>
      </trans-unit>
      <trans-unit id="exception.promise.rejection.text">
        <source xml:lang="en">Promise Rejection ({0})</source>
        <target state="translated">Отхвърлено обещание ({0})</target>
      </trans-unit>
      <trans-unit id="exception.promise.rejection">
        <source xml:lang="en">Promise Rejection</source>
        <target state="translated">Отхвърлено обещание</target>
      </trans-unit>
      <trans-unit id="reason.description.step">
        <source xml:lang="en">Paused on step</source>
        <target state="translated">На пауза – стъпка</target>
      </trans-unit>
      <trans-unit id="reason.description.breakpoint">
        <source xml:lang="en">Paused on breakpoint</source>
        <target state="translated">На пауза – точка на прекъсване</target>
      </trans-unit>
      <trans-unit id="reason.description.exception">
        <source xml:lang="en">Paused on exception</source>
        <target state="translated">На пауза – изключение</target>
      </trans-unit>
      <trans-unit id="reason.description.user_request">
        <source xml:lang="en">Paused on user request</source>
        <target state="translated">На пауза – потребителска заявка</target>
      </trans-unit>
      <trans-unit id="reason.description.entry">
        <source xml:lang="en">Paused on entry</source>
        <target state="translated">На пауза – въвеждане</target>
      </trans-unit>
      <trans-unit id="reason.description.debugger_statement">
        <source xml:lang="en">Paused on debugger statement</source>
        <target state="translated">На пауза – израз на дебъгера</target>
      </trans-unit>
      <trans-unit id="reason.description.restart">
        <source xml:lang="en">Paused on frame entry</source>
        <target state="translated">На пауза – влизане в кадър</target>
      </trans-unit>
      <trans-unit id="exceptions.all">
        <source xml:lang="en">All Exceptions</source>
        <target state="translated">Всички изключения</target>
      </trans-unit>
      <trans-unit id="exceptions.uncaught">
        <source xml:lang="en">Uncaught Exceptions</source>
        <target state="translated">Неприхванати изключения</target>
      </trans-unit>
      <trans-unit id="exceptions.rejects">
        <source xml:lang="en">Promise Rejects</source>
        <target state="translated">Отхвърлени обещания</target>
      </trans-unit>
      <trans-unit id="VSND2028">
        <source xml:lang="en">Unknown console type '{0}'.</source>
        <target state="translated">Непознат тип конзола: „{0}“.</target>
      </trans-unit>
      <trans-unit id="attribute.wls.not.exist">
        <source xml:lang="en">Cannot find Windows Subsystem Linux installation</source>
        <target state="translated">Не може да бъде открита инсталация на подсистемата за изпълнение на Линукс под Windows</target>
      </trans-unit>
      <trans-unit id="VSND2001">
        <source xml:lang="en">Cannot find runtime '{0}' on PATH. Make sure to have '{0}' installed.</source>
        <target state="translated">Средата за изпълнение „{0}“ не е открита в PATH. Уверете се, че „{0}“ е инсталирано.</target>
      </trans-unit>
      <trans-unit id="program.path.case.mismatch.warning">
        <source xml:lang="en">Program path uses differently cased character as file on disk; this might result in breakpoints not being hit.</source>
        <target state="translated">Пътят до програмата и файлът на диска се имат разлики в главните/малките букви. Това може да попречи на правилната работа на точките на прекъсване.</target>
      </trans-unit>
      <trans-unit id="VSND2002">
        <source xml:lang="en">Cannot launch program '{0}'; configuring source maps might help.</source>
        <target state="translated">Програмата „{0}“ не може да бъде изпълнена. Настройването на кодови съответствия може да помогне.</target>
      </trans-unit>
      <trans-unit id="VSND2009">
        <source xml:lang="en">Cannot launch program '{0}' because corresponding JavaScript cannot be found.</source>
        <target state="translated">Програмата „{0}“ не може да бъде изпълнена, тъй като не може да бъде открит съответстващият ѝ код на JavaScript.</target>
      </trans-unit>
      <trans-unit id="VSND2003">
        <source xml:lang="en">Cannot launch program '{0}'; setting the '{1}' attribute might help.</source>
        <target state="translated">Програмата „{0}“ не може да бъде изпълнена. Задаването на атрибута „{1}“ може да помогне.</target>
      </trans-unit>
      <trans-unit id="VSND2029">
        <source xml:lang="en">Can't load environment variables from file ({0}).</source>
        <target state="translated">Променливите на средата не могат да бъдат заредени от файла „{0}“.</target>
      </trans-unit>
      <trans-unit id="node.console.title">
        <source xml:lang="en">Node Debug Console</source>
        <target state="translated">Конзола за дебъгване на node</target>
      </trans-unit>
      <trans-unit id="VSND2011">
        <source xml:lang="en">Cannot launch debug target in terminal ({0}).</source>
        <target state="translated">Целта на дебъгването на може да бъде пусната в терминала ({0}).</target>
      </trans-unit>
      <trans-unit id="VSND2017">
        <source xml:lang="en">Cannot launch debug target ({0}).</source>
        <target state="translated">Целта на дебъгването не може да бъде пусната ({0}).</target>
      </trans-unit>
      <trans-unit id="VSND2010">
        <source xml:lang="en">Cannot connect to runtime process (reason: {0}).</source>
        <target state="translated">Няма връзка с изпълняващия процес (причина: {0}).</target>
      </trans-unit>
      <trans-unit id="VSND2033">
        <source xml:lang="en">Cannot connect to runtime; make sure that runtime is in 'legacy' debug mode.</source>
        <target state="translated">Не може да се установи връзка със средата за изпълнение. Уверете се, че тя е в режим за дебъгване „legacy“.</target>
      </trans-unit>
      <trans-unit id="VSND2034">
        <source xml:lang="en">Cannot connect to runtime via 'legacy' protocol; try to use 'inspector' protocol.</source>
        <target state="translated">Не може да се установи връзка със средата за изпълнение чрез протокола „legacy“. Опитайте да използвате протокола „inspector“.</target>
      </trans-unit>
      <trans-unit id="file.on.disk.changed">
        <source xml:lang="en">Unverified because file on disk has changed. Please restart debug session.</source>
        <target state="translated">Неизпълнена проверка – файлът на диска се е променил. Моля, рестартирайте сесията за дебъгване.</target>
      </trans-unit>
      <trans-unit id="VSND2019">
        <source xml:lang="en">Internal module {0} not found.</source>
        <target state="translated">Вътрешният модул „{0}“ не е намерен.</target>
      </trans-unit>
      <trans-unit id="sourcemapping.fail.message">
        <source xml:lang="en">Breakpoint ignored because generated code not found (source map problem?).</source>
        <target state="translated">Точката на прекъсване е пренебрегната, тъй като създаденият код не е намерен (проблем с кодово съответствие?).</target>
      </trans-unit>
      <trans-unit id="VSND2022">
        <source xml:lang="en">No call stack because program paused outside of JavaScript.</source>
        <target state="translated">Няма стек на извикванията, тъй като програмата е спряна на пауза извън JavaScript.</target>
      </trans-unit>
      <trans-unit id="VSND2023">
        <source xml:lang="en">No call stack available.</source>
        <target state="translated">Няма стек на извикванията.</target>
      </trans-unit>
      <trans-unit id="VSND2018">
        <source xml:lang="en">No call stack available ({_command}: {_error}).</source>
        <target state="translated">Няма стек на извикванията ({_command}: {_error}).</target>
      </trans-unit>
      <trans-unit id="origin.from.node">
        <source xml:lang="en">read-only content from Node.js</source>
        <target state="translated">съдържание само за четене от Node.js</target>
      </trans-unit>
      <trans-unit id="origin.from.remote.node">
        <source xml:lang="en">read-only content from remote Node.js</source>
        <target state="translated">съдържание само за четене от отдалечен Node.js</target>
      </trans-unit>
      <trans-unit id="origin.core.module">
        <source xml:lang="en">read-only core module</source>
        <target state="translated">основен модул само за четене</target>
      </trans-unit>
      <trans-unit id="source.skipFiles">
        <source xml:lang="en">skipped due to 'skipFiles'</source>
        <target state="translated">пропуснато заради „skipFiles“</target>
      </trans-unit>
      <trans-unit id="source.smartstep">
        <source xml:lang="en">skipped due to 'smartStep'</source>
        <target state="translated">пропуснато заради „smartStep“</target>
      </trans-unit>
      <trans-unit id="origin.inlined.source.map">
        <source xml:lang="en">read-only inlined content from source map</source>
        <target state="translated">вмъкнато съдържание само за четене от кодово съответствие</target>
      </trans-unit>
      <trans-unit id="anonymous.function">
        <source xml:lang="en">(anonymous function)</source>
        <target state="translated">(анонимна функция)</target>
      </trans-unit>
      <trans-unit id="scope.local.with.count">
        <source xml:lang="en">Local ({0} of {1})</source>
        <target state="translated">Локална ({0} от {1})</target>
        <note>https://github.com/Microsoft/vscode/issues/4569</note>
      </trans-unit>
      <trans-unit id="scope.unknown">
        <source xml:lang="en">Unknown Scope Type: {0}</source>
        <target state="translated">Непознат тип обхват: {0}</target>
      </trans-unit>
      <trans-unit id="scope.exception">
        <source xml:lang="en">Exception</source>
        <target state="translated">Изключение</target>
        <note>https://github.com/Microsoft/vscode/issues/4569</note>
      </trans-unit>
      <trans-unit id="eval.not.available">
        <source xml:lang="en">not available</source>
        <target state="translated">недостъпно</target>
      </trans-unit>
      <trans-unit id="eval.invalid.expression">
        <source xml:lang="en">invalid expression: {0}</source>
        <target state="translated">неправилен израз: {0}</target>
      </trans-unit>
      <trans-unit id="source.not.found">
        <source xml:lang="en">Could not retrieve content.</source>
        <target state="translated">Съдържанието не може да бъде извлечено.</target>
      </trans-unit>
      <trans-unit id="attribute.path.not.exist">
        <source xml:lang="en">Attribute '{0}' does not exist ('{1}').</source>
        <target state="translated">Атрибутът „{0}“ не съществува („{1}“).</target>
      </trans-unit>
      <trans-unit id="attribute.path.not.absolute">
        <source xml:lang="en">Attribute '{0}' is not absolute ('{1}'); consider adding '{2}' as a prefix to make it absolute.</source>
        <target state="translated">Атрибутът „{0}“ не е абсолютен („{1}“).. Може да използвате „{2}“ като представка, за да го направите абсолютен.</target>
      </trans-unit>
      <trans-unit id="more.information">
        <source xml:lang="en">More Information</source>
        <target state="translated">Още информация</target>
      </trans-unit>
      <trans-unit id="VSND2015">
        <source xml:lang="en">Request '{_request}' was cancelled because Node.js is unresponsive.</source>
        <target state="translated">Заявката „{_request}“ беше отменена, тъй като Node.js не отговаря.</target>
      </trans-unit>
      <trans-unit id="VSND2016">
        <source xml:lang="en">Node.js did not respond to request '{_request}' in a reasonable amount of time.</source>
        <target state="translated">Node.js не отговори на заявката „{_request}“ в рамките на нормалния период на изчакване.</target>
      </trans-unit>
      <trans-unit id="scope.global">
        <source xml:lang="en">Global</source>
        <target state="translated">Глобални</target>
        <note>https://github.com/Microsoft/vscode/issues/4569</note>
      </trans-unit>
      <trans-unit id="scope.local">
        <source xml:lang="en">Local</source>
        <target state="translated">Локални</target>
        <note>https://github.com/Microsoft/vscode/issues/4569</note>
      </trans-unit>
      <trans-unit id="scope.with">
        <source xml:lang="en">With</source>
        <target state="translated">Със</target>
        <note>https://github.com/Microsoft/vscode/issues/4569</note>
      </trans-unit>
      <trans-unit id="scope.closure">
        <source xml:lang="en">Closure</source>
        <target state="translated">Затваряне</target>
        <note>https://github.com/Microsoft/vscode/issues/4569</note>
      </trans-unit>
      <trans-unit id="scope.catch">
        <source xml:lang="en">Catch</source>
        <target state="translated">Прихващане</target>
        <note>https://github.com/Microsoft/vscode/issues/4569</note>
      </trans-unit>
      <trans-unit id="scope.block">
        <source xml:lang="en">Block</source>
        <target state="translated">Блок</target>
        <note>https://github.com/Microsoft/vscode/issues/4569</note>
      </trans-unit>
      <trans-unit id="scope.script">
        <source xml:lang="en">Script</source>
        <target state="translated">Скрипт</target>
        <note>https://github.com/Microsoft/vscode/issues/4569</note>
      </trans-unit>
    </body>
  </file>
  <file original="dist/node/nodeV8Protocol" source-language="en" target-language="bg" datatype="plaintext">
    <body>
      <trans-unit id="not.connected">
        <source xml:lang="en">not connected to runtime</source>
        <target state="translated">няма връзка със средата за изпълнение</target>
      </trans-unit>
      <trans-unit id="runtime.unresponsive">
        <source xml:lang="en">cancelled because Node.js is unresponsive</source>
        <target state="translated">отменено, тъй като Node.js не отговаря</target>
      </trans-unit>
      <trans-unit id="runtime.timeout">
        <source xml:lang="en">timeout after {0} ms</source>
        <target state="translated">изтекло време за изчакване след {0} мсек</target>
      </trans-unit>
    </body>
  </file>
  <file original="dist/node/extension/autoAttach" source-language="en" target-language="bg" datatype="plaintext">
    <body>
      <trans-unit id="process.with.pid.label">
        <source xml:lang="en">Auto attached ({0})</source>
        <target state="translated">Автоматично прикачен ({0})</target>
      </trans-unit>
    </body>
  </file>
  <file original="dist/node/extension/cluster" source-language="en" target-language="bg" datatype="plaintext">
    <body>
      <trans-unit id="child.process.with.pid.label">
        <source xml:lang="en">Child process {0}</source>
        <target state="new">Child process {0}</target>
      </trans-unit>
    </body>
  </file>
  <file original="dist/node/extension/configurationProvider" source-language="en" target-language="bg" datatype="plaintext">
    <body>
      <trans-unit id="program.not.found.message">
        <source xml:lang="en">Cannot find a program to debug</source>
        <target state="translated">Не може да бъде открита програма за дебъгване</target>
      </trans-unit>
      <trans-unit id="useWslDeprecationWarning.title">
        <source xml:lang="en">Attribute 'useWSL' is deprecated. Please use the 'Remote WSL' extension instead. Click [here]({0}) to learn more.</source>
        <target state="new">Attribute 'useWSL' is deprecated. Please use the 'Remote WSL' extension instead. Click [here]({0}) to learn more.</target>
      </trans-unit>
      <trans-unit id="useWslDeprecationWarning.doNotShowAgain">
        <source xml:lang="en">Don't Show Again</source>
        <target state="translated">Да не се показва повече</target>
      </trans-unit>
      <trans-unit id="NVS_HOME.not.found.message">
        <source xml:lang="en">Attribute 'runtimeVersion' requires Node.js version manager 'nvs'.</source>
        <target state="translated">Атрибутът „runtimeVersion“ изисква наличието на програмата за управление на версиите на Node.js – „nvs“.</target>
      </trans-unit>
      <trans-unit id="NVM_HOME.not.found.message">
        <source xml:lang="en">Attribute 'runtimeVersion' requires Node.js version manager 'nvm-windows' or 'nvs'.</source>
        <target state="translated">Атрибутът „runtimeVersion“ изисква наличието на програмата за управление на версиите на Node.js – „nvm-windows“ или „nvs“.</target>
      </trans-unit>
      <trans-unit id="NVM_DIR.not.found.message">
        <source xml:lang="en">Attribute 'runtimeVersion' requires Node.js version manager 'nvm' or 'nvs'.</source>
        <target state="translated">Атрибутът „runtimeVersion“ изисква наличието на програмата за управление на версиите на Node.js – „nvm“ или „nvs“.</target>
      </trans-unit>
      <trans-unit id="runtime.version.not.found.message">
        <source xml:lang="en">Node.js version '{0}' not installed for '{1}'.</source>
        <target state="translated">Node.js версия „{0}“ не е инсталирана за „{1}“.</target>
      </trans-unit>
      <trans-unit id="node.launch.config.name">
        <source xml:lang="en">Launch Program</source>
        <target state="translated">Пускане на програмата</target>
      </trans-unit>
      <trans-unit id="mern.starter.explanation">
        <source xml:lang="en">Launch configuration for '{0}' project created.</source>
        <target state="translated">Създадена е пускова конфигурация за проекта „{0}“.</target>
        <note>argument contains product name without translation</note>
      </trans-unit>
      <trans-unit id="program.guessed.from.package.json.explanation">
        <source xml:lang="en">Launch configuration created based on 'package.json'.</source>
        <target state="translated">Създадена е пускова конфигурация на основа на „package.json“.</target>
      </trans-unit>
      <trans-unit id="outFiles.explanation">
        <source xml:lang="en">Adjust glob pattern(s) in the 'outFiles' attribute so that they cover the generated JavaScript.</source>
        <target state="translated">Настройте шаблона (или шаблоните) за файлови имена в свойството „outFiles“, така че да разпознават произведения код на JavaScript.</target>
      </trans-unit>
    </body>
  </file>
  <file original="dist/node/extension/processPicker" source-language="en" target-language="bg" datatype="plaintext">
    <body>
      <trans-unit id="pid.error">
        <source xml:lang="en">Attach to process: cannot put process '{0}' in debug mode.</source>
        <target state="translated">Прикачане към процес: процесът „{0}“ не може да премине в режим на дебъгване.</target>
      </trans-unit>
      <trans-unit id="process.id.error">
        <source xml:lang="en">Attach to process: '{0}' doesn't look like a process id.</source>
        <target state="translated">Прикачане към процес: „{0}“ не прилича на идентификатор на процес.</target>
      </trans-unit>
      <trans-unit id="pickNodeProcess">
        <source xml:lang="en">Pick the node.js process to attach to</source>
        <target state="translated">Изберете процес на node.js за прикачане</target>
      </trans-unit>
      <trans-unit id="process.picker.error">
        <source xml:lang="en">Process picker failed ({0})</source>
        <target state="translated">Избирането на процес беше неуспешно ({0})</target>
      </trans-unit>
      <trans-unit id="process.id.port">
        <source xml:lang="en">process id: {0}, debug port: {1}</source>
        <target state="translated">ид. на процеса: {0}, порт за дебъгване: {1}</target>
      </trans-unit>
      <trans-unit id="process.id.port.legacy">
        <source xml:lang="en">process id: {0}, debug port: {1} (legacy protocol)</source>
        <target state="translated">ид. на процеса: {0}, порт за дебъгване: {1} (протокол „legacy“)</target>
      </trans-unit>
      <trans-unit id="process.id.port.signal">
        <source xml:lang="en">process id: {0}, debug port: {1} ({2})</source>
        <target state="translated">ид. на процеса: {0}, порт за дебъгване: {1} ({2})</target>
      </trans-unit>
      <trans-unit id="process.id.signal">
        <source xml:lang="en">process id: {0} ({1})</source>
        <target state="translated">ид. на процеса: {0} ({1})</target>
      </trans-unit>
      <trans-unit id="cannot.enable.debug.mode.error">
        <source xml:lang="en">Attach to process: cannot enable debug mode for process '{0}' ({1}).</source>
        <target state="translated">Прикачане към процес: режимът на дебъгване не може да се включи за процеса „{0}“ ({1}).</target>
      </trans-unit>
    </body>
  </file>
  <file original="dist/node/extension/protocolDetection" source-language="en" target-language="bg" datatype="plaintext">
    <body>
      <trans-unit id="protocol.switch.legacy.detected">
        <source xml:lang="en">Debugging with legacy protocol because it was detected.</source>
        <target state="translated">Дебъгване с протокола „legacy“, тъй като той беше разпознат.</target>
      </trans-unit>
      <trans-unit id="protocol.switch.unknown.error">
        <source xml:lang="en">Debugging with inspector protocol because Node.js version could not be determined ({0})</source>
        <target state="translated">Дебъгване с протокола „inspector“, тъй версията на Node.js не може да бъде установена ({0})</target>
      </trans-unit>
      <trans-unit id="protocol.switch.legacy.version">
        <source xml:lang="en">Debugging with legacy protocol because Node.js {0} was detected.</source>
        <target state="translated">Дебъгване с протокола „legacy“, тъй като е открит Node.js {0}.</target>
      </trans-unit>
    </body>
  </file>
</xliff>