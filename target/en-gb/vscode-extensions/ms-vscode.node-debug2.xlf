<?xml version="1.0" encoding="utf-8"?>
<xliff version="1.2" xmlns="urn:oasis:names:tc:xliff:document:1.2">
  <file original="extensions/ms-vscode.node-debug2/package" source-language="en" target-language="en-gb" datatype="plaintext">
    <body>
      <trans-unit id="extension.description">
        <source xml:lang="en">Node.js debugging support</source>
        <target state="new">Node.js debugging support</target>
      </trans-unit>
      <trans-unit id="node.label">
        <source xml:lang="en">Node.js v6.3+ via Inspector Protocol</source>
        <target state="new">Node.js v6.3+ via Inspector Protocol</target>
      </trans-unit>
      <trans-unit id="node.sourceMaps.description">
        <source xml:lang="en">Use JavaScript source maps (if they exist).</source>
        <target state="translated">Use JavaScript source maps (if they exist).</target>
      </trans-unit>
      <trans-unit id="outDir.deprecationMessage">
        <source xml:lang="en">Attribute 'outDir' is deprecated, use 'outFiles' instead.</source>
        <target state="new">Attribute 'outDir' is deprecated, use 'outFiles' instead.</target>
      </trans-unit>
      <trans-unit id="node.outFiles.description">
        <source xml:lang="en">If source maps are enabled, these glob patterns specify the generated JavaScript files. If a pattern starts with `!` the files are excluded. If not specified, the generated code is expected in the same directory as its source.</source>
        <target state="translated">If source maps are enabled, these glob patterns specify the generated JavaScript files. If a pattern starts with `!` the files are excluded. If not specified, the generated code is expected in the same directory as its source.</target>
      </trans-unit>
      <trans-unit id="node.stopOnEntry.description">
        <source xml:lang="en">Automatically stop program after launch.</source>
        <target state="translated">Automatically stop programme after launch.</target>
      </trans-unit>
      <trans-unit id="node.port.description">
        <source xml:lang="en">Debug port to attach to. Default is 9229.</source>
        <target state="new">Debug port to attach to. Default is 9229.</target>
      </trans-unit>
      <trans-unit id="node.address.description">
        <source xml:lang="en">TCP/IP address of debug port. Default is 'localhost'.</source>
        <target state="new">TCP/IP address of debug port. Default is 'localhost'.</target>
      </trans-unit>
      <trans-unit id="node.timeout.description">
        <source xml:lang="en">Retry for this number of milliseconds to connect to Node.js. Default is 10000 ms.</source>
        <target state="new">Retry for this number of milliseconds to connect to Node.js. Default is 10000 ms.</target>
      </trans-unit>
      <trans-unit id="node.smartStep.description">
        <source xml:lang="en">Automatically step through generated code that cannot be mapped back to the original source.</source>
        <target state="new">Automatically step through generated code that cannot be mapped back to the original source.</target>
      </trans-unit>
      <trans-unit id="node.enableSourceMapCaching.description">
        <source xml:lang="en">When sourcemaps are downloaded from a URL, cache them to disk.</source>
        <target state="new">When sourcemaps are downloaded from a URL, cache them to disk.</target>
      </trans-unit>
      <trans-unit id="node.diagnosticLogging.description">
        <source xml:lang="en">When true, the adapter logs its own diagnostic info to the console</source>
        <target state="new">When true, the adapter logs its own diagnostic info to the console</target>
      </trans-unit>
      <trans-unit id="node.diagnosticLogging.deprecationMessage">
        <source xml:lang="en">'diagnosticLogging' is deprecated. Use 'trace' instead.</source>
        <target state="new">'diagnosticLogging' is deprecated. Use 'trace' instead.</target>
      </trans-unit>
      <trans-unit id="node.verboseDiagnosticLogging.description">
        <source xml:lang="en">When true, the adapter logs all traffic with the client and target (as well as the info logged by 'diagnosticLogging')</source>
        <target state="translated">When true, the adaptor logs all traffic with the client and target (as well as the info logged by 'diagnosticLogging')</target>
      </trans-unit>
      <trans-unit id="node.verboseDiagnosticLogging.deprecationMessage">
        <source xml:lang="en">'verboseDiagnosticLogging' is deprecated. Use 'trace' instead.</source>
        <target state="new">'verboseDiagnosticLogging' is deprecated. Use 'trace' instead.</target>
      </trans-unit>
      <trans-unit id="node.trace.description">
        <source xml:lang="en">When 'true', the debugger will log tracing info to a file. When 'verbose', it will also show logs in the console.</source>
        <target state="translated">When 'true', the debugger will log tracing info to a file. When 'verbose', it will also show logs in the console.</target>
      </trans-unit>
      <trans-unit id="node.sourceMapPathOverrides.description">
        <source xml:lang="en">A set of mappings for rewriting the locations of source files from what the sourcemap says, to their locations on disk. See README for details.</source>
        <target state="translated">A set of mappings for rewriting the locations of source files from what the sourcemap says, to their locations on disk. See README for details.</target>
      </trans-unit>
      <trans-unit id="node.skipFiles.description">
        <source xml:lang="en">An array of file or folder names, or glob patterns, to skip when debugging.</source>
        <target state="new">An array of file or folder names, or glob patterns, to skip when debugging.</target>
      </trans-unit>
      <trans-unit id="node.restart.description">
        <source xml:lang="en">Restart session after Node.js has terminated.</source>
        <target state="new">Restart session after Node.js has terminated.</target>
      </trans-unit>
      <trans-unit id="node.showAsyncStacks.description">
        <source xml:lang="en">Show the async calls that led to the current call stack.</source>
        <target state="new">Show the async calls that led to the current call stack.</target>
      </trans-unit>
      <trans-unit id="node.disableOptimisticBPs.description">
        <source xml:lang="en">Don't set breakpoints in any file until a sourcemap has been loaded for that file.</source>
        <target state="new">Don't set breakpoints in any file until a sourcemap has been loaded for that file.</target>
      </trans-unit>
      <trans-unit id="node.launch.program.description">
        <source xml:lang="en">Absolute path to the program.</source>
        <target state="translated">Absolute path to the program.</target>
      </trans-unit>
      <trans-unit id="node.launch.console.description">
        <source xml:lang="en">Where to launch the debug target: internal console, integrated terminal, or external terminal.</source>
        <target state="new">Where to launch the debug target: internal console, integrated terminal, or external terminal.</target>
      </trans-unit>
      <trans-unit id="node.launch.args.description">
        <source xml:lang="en">Command line arguments passed to the program.</source>
        <target state="translated">Command line arguments passed to the programme.</target>
      </trans-unit>
      <trans-unit id="node.launch.cwd.description">
        <source xml:lang="en">Absolute path to the working directory of the program being debugged.</source>
        <target state="translated">Absolute path to the working directory of the programme being debugged.</target>
      </trans-unit>
      <trans-unit id="node.launch.runtimeExecutable.description">
        <source xml:lang="en">Runtime to use. Either an absolute path or the name of a runtime available on the PATH. If ommitted `node` is assumed.</source>
        <target state="new">Runtime to use. Either an absolute path or the name of a runtime available on the PATH. If ommitted `node` is assumed.</target>
      </trans-unit>
      <trans-unit id="node.launch.runtimeArgs.description">
        <source xml:lang="en">Optional arguments passed to the runtime executable.</source>
        <target state="translated">Optional arguments passed to the runtime executable.</target>
      </trans-unit>
      <trans-unit id="node.launch.env.description">
        <source xml:lang="en">Environment variables passed to the program. The value `null` removes the variable from the environment.</source>
        <target state="translated">Environment variables passed to the program. The value `null` removes the variable from the environment.</target>
      </trans-unit>
      <trans-unit id="node.launch.envFile.description">
        <source xml:lang="en">Absolute path to a file containing environment variable definitions.</source>
        <target state="new">Absolute path to a file containing environment variable definitions.</target>
      </trans-unit>
      <trans-unit id="node.launch.outputCapture.description">
        <source xml:lang="en">From where to capture output messages: The debug API, or stdout/stderr streams.</source>
        <target state="new">From where to capture output messages: The debug API, or stdout/stderr streams.</target>
      </trans-unit>
      <trans-unit id="node.launch.config.name">
        <source xml:lang="en">Launch</source>
        <target state="translated">Launch</target>
      </trans-unit>
      <trans-unit id="node.attach.processId.description">
        <source xml:lang="en">ID of process to attach to.</source>
        <target state="new">ID of process to attach to.</target>
      </trans-unit>
      <trans-unit id="node.attach.localRoot.description">
        <source xml:lang="en">The local source root that corresponds to the 'remoteRoot'.</source>
        <target state="new">The local source root that corresponds to the 'remoteRoot'.</target>
      </trans-unit>
      <trans-unit id="node.attach.remoteRoot.description">
        <source xml:lang="en">The source root of the remote host.</source>
        <target state="new">The source root of the remote host.</target>
      </trans-unit>
      <trans-unit id="node.attach.config.name">
        <source xml:lang="en">Attach</source>
        <target state="new">Attach</target>
      </trans-unit>
      <trans-unit id="node.processattach.config.name">
        <source xml:lang="en">Attach to Process</source>
        <target state="new">Attach to Process</target>
      </trans-unit>
      <trans-unit id="toggle.skipping.this.file">
        <source xml:lang="en">Toggle Skipping this File</source>
        <target state="new">Toggle Skipping this File</target>
      </trans-unit>
      <trans-unit id="extensionHost.label">
        <source xml:lang="en">VS Code Extension Development</source>
        <target state="new">VS Code Extension Development</target>
      </trans-unit>
      <trans-unit id="extensionHost.launch.runtimeExecutable.description">
        <source xml:lang="en">Absolute path to VS Code.</source>
        <target state="new">Absolute path to VS Code.</target>
      </trans-unit>
      <trans-unit id="extensionHost.launch.stopOnEntry.description">
        <source xml:lang="en">Automatically stop the extension host after launch.</source>
        <target state="new">Automatically stop the extension host after launch.</target>
      </trans-unit>
      <trans-unit id="extensionHost.launch.env.description">
        <source xml:lang="en">Environment variables passed to the extension host.</source>
        <target state="new">Environment variables passed to the extension host.</target>
      </trans-unit>
      <trans-unit id="extensionHost.snippet.launch.label">
        <source xml:lang="en">VS Code Extension Development</source>
        <target state="new">VS Code Extension Development</target>
      </trans-unit>
      <trans-unit id="extensionHost.snippet.launch.description">
        <source xml:lang="en">Launch a VS Code extension in debug mode</source>
        <target state="new">Launch a VS Code extension in debug mode</target>
      </trans-unit>
      <trans-unit id="extensionHost.launch.config.name">
        <source xml:lang="en">Launch Extension</source>
        <target state="translated">Launch Extension</target>
      </trans-unit>
      <trans-unit id="debug.extensionHost.useV3.description">
        <source xml:lang="en">[Experimental] Controls whether to delegate "extensionHost"-type launch configs to the js-debug extension.</source>
        <target state="new">[Experimental] Controls whether to delegate "extensionHost"-type launch configs to the js-debug extension.</target>
      </trans-unit>
    </body>
  </file>
  <file original="extensions/ms-vscode.node-debug2/out/src/errors" source-language="en" target-language="en-gb" datatype="plaintext">
    <body>
      <trans-unit id="VSND2001">
        <source xml:lang="en">Cannot find runtime '{0}' on PATH. Is '{0}' installed?</source>
        <target state="new">Cannot find runtime '{0}' on PATH. Is '{0}' installed?</target>
      </trans-unit>
      <trans-unit id="VSND2011">
        <source xml:lang="en">Cannot launch debug target in terminal ({0}).</source>
        <target state="new">Cannot launch debug target in terminal ({0}).</target>
      </trans-unit>
      <trans-unit id="VSND2017">
        <source xml:lang="en">Cannot launch debug target ({0}).</source>
        <target state="new">Cannot launch debug target ({0}).</target>
      </trans-unit>
      <trans-unit id="VSND2035">
        <source xml:lang="en">Cannot debug extension ({0}).</source>
        <target state="translated">Cannot debug extension ({0}).</target>
      </trans-unit>
      <trans-unit id="VSND2028">
        <source xml:lang="en">Unknown console type '{0}'.</source>
        <target state="new">Unknown console type '{0}'.</target>
      </trans-unit>
      <trans-unit id="VSND2002">
        <source xml:lang="en">Cannot launch program '{0}'; configuring source maps might help.</source>
        <target state="new">Cannot launch program '{0}'; configuring source maps might help.</target>
      </trans-unit>
      <trans-unit id="VSND2003">
        <source xml:lang="en">Cannot launch program '{0}'; setting the '{1}' attribute might help.</source>
        <target state="new">Cannot launch program '{0}'; setting the '{1}' attribute might help.</target>
      </trans-unit>
      <trans-unit id="VSND2009">
        <source xml:lang="en">Cannot launch program '{0}' because corresponding JavaScript cannot be found.</source>
        <target state="new">Cannot launch program '{0}' because corresponding JavaScript cannot be found.</target>
      </trans-unit>
      <trans-unit id="VSND2029">
        <source xml:lang="en">Can't load environment variables from file ({0}).</source>
        <target state="new">Can't load environment variables from file ({0}).</target>
      </trans-unit>
    </body>
  </file>
  <file original="extensions/ms-vscode.node-debug2/out/src/nodeDebugAdapter" source-language="en" target-language="en-gb" datatype="plaintext">
    <body>
      <trans-unit id="attribute.wsl.not.exist">
        <source xml:lang="en">Cannot find Windows Subsystem for Linux installation.</source>
        <target state="translated">Cannot find Windows Subsystem for Linux installation.</target>
      </trans-unit>
      <trans-unit id="program.path.case.mismatch.warning">
        <source xml:lang="en">Program path uses differently cased character as file on disk; this might result in breakpoints not being hit.</source>
        <target state="new">Program path uses differently cased character as file on disk; this might result in breakpoints not being hit.</target>
      </trans-unit>
      <trans-unit id="node.console.title">
        <source xml:lang="en">Node Debug Console</source>
        <target state="new">Node Debug Console</target>
      </trans-unit>
      <trans-unit id="attribute.path.not.exist">
        <source xml:lang="en">Attribute '{0}' does not exist ('{1}').</source>
        <target state="new">Attribute '{0}' does not exist ('{1}').</target>
      </trans-unit>
      <trans-unit id="attribute.path.not.absolute">
        <source xml:lang="en">Attribute '{0}' is not absolute ('{1}'); consider adding '{2}' as a prefix to make it absolute.</source>
        <target state="new">Attribute '{0}' is not absolute ('{1}'); consider adding '{2}' as a prefix to make it absolute.</target>
      </trans-unit>
      <trans-unit id="VSND2001">
        <source xml:lang="en">Cannot find runtime '{0}' on PATH. Make sure to have '{0}' installed.</source>
        <target state="new">Cannot find runtime '{0}' on PATH. Make sure to have '{0}' installed.</target>
      </trans-unit>
      <trans-unit id="more.information">
        <source xml:lang="en">More Information</source>
        <target state="translated">More Information</target>
      </trans-unit>
      <trans-unit id="origin.from.node">
        <source xml:lang="en">read-only content from Node.js</source>
        <target state="new">read-only content from Node.js</target>
      </trans-unit>
      <trans-unit id="origin.core.module">
        <source xml:lang="en">read-only core module</source>
        <target state="new">read-only core module</target>
      </trans-unit>
    </body>
  </file>
  <file original="extensions/ms-vscode.node-debug2/node_modules\vscode-chrome-debug-core\out/src/errors" source-language="en" target-language="en-gb" datatype="plaintext">
    <body>
      <trans-unit id="eval.not.available">
        <source xml:lang="en">not available</source>
        <target state="translated">not available</target>
      </trans-unit>
      <trans-unit id="not.connected">
        <source xml:lang="en">not connected to runtime</source>
        <target state="new">not connected to runtime</target>
      </trans-unit>
      <trans-unit id="restartFrame.cannot">
        <source xml:lang="en">Can't restart frame</source>
        <target state="new">Can't restart frame</target>
      </trans-unit>
      <trans-unit id="attribute.path.not.exist">
        <source xml:lang="en">Attribute '{0}' does not exist ('{1}').</source>
        <target state="new">Attribute '{0}' does not exist ('{1}').</target>
      </trans-unit>
      <trans-unit id="attribute.path.not.absolute">
        <source xml:lang="en">Attribute '{0}' is not absolute ('{1}'); consider adding '{2}' as a prefix to make it absolute.</source>
        <target state="new">Attribute '{0}' is not absolute ('{1}'); consider adding '{2}' as a prefix to make it absolute.</target>
      </trans-unit>
      <trans-unit id="more.information">
        <source xml:lang="en">More Information</source>
        <target state="translated">More Information</target>
      </trans-unit>
      <trans-unit id="setVariable.error">
        <source xml:lang="en">Setting value not supported</source>
        <target state="new">Setting value not supported</target>
      </trans-unit>
      <trans-unit id="source.not.found">
        <source xml:lang="en">Could not retrieve content.</source>
        <target state="new">Could not retrieve content.</target>
      </trans-unit>
      <trans-unit id="VSND2010">
        <source xml:lang="en">Cannot connect to runtime process, timeout after {0} ms - (reason: {1}).</source>
        <target state="translated">Cannot connect to runtime process, timeout after {0} ms - (reason: {1}).</target>
      </trans-unit>
      <trans-unit id="VSND2023">
        <source xml:lang="en">No call stack available.</source>
        <target state="new">No call stack available.</target>
      </trans-unit>
      <trans-unit id="failed.to.read.port">
        <source xml:lang="en">Failed to read file {dataDirPath}, {error}</source>
        <target state="new">Failed to read file {dataDirPath}, {error}</target>
      </trans-unit>
      <trans-unit id="port.file.contents.invalid">
        <source xml:lang="en">File at location: "{dataDirPath}" did not contain valid port data, contents were: {dataDirContents}</source>
        <target state="new">File at location: "{dataDirPath}" did not contain valid port data, contents were: {dataDirContents}</target>
      </trans-unit>
    </body>
  </file>
  <file original="extensions/ms-vscode.node-debug2/node_modules\vscode-chrome-debug-core\out/src/chrome/breakpoints" source-language="en" target-language="en-gb" datatype="plaintext">
    <body>
      <trans-unit id="setBPTimedOut">
        <source xml:lang="en">Set breakpoints request timed out</source>
        <target state="new">Set breakpoints request timed out</target>
      </trans-unit>
      <trans-unit id="bp.fail.unbound">
        <source xml:lang="en">Breakpoint set but not yet bound</source>
        <target state="new">Breakpoint set but not yet bound</target>
      </trans-unit>
      <trans-unit id="bp.fail.noscript">
        <source xml:lang="en">Can't find script for breakpoint request</source>
        <target state="new">Can't find script for breakpoint request</target>
      </trans-unit>
      <trans-unit id="validateBP.sourcemapFail">
        <source xml:lang="en">Breakpoint ignored because generated code not found (source map problem?).</source>
        <target state="new">Breakpoint ignored because generated code not found (source map problem?).</target>
      </trans-unit>
      <trans-unit id="validateBP.notFound">
        <source xml:lang="en">Breakpoint ignored because target path not found</source>
        <target state="translated">Breakpoint ignored because target path not found</target>
      </trans-unit>
      <trans-unit id="invalidHitCondition">
        <source xml:lang="en">Invalid hit condition: {0}</source>
        <target state="new">Invalid hit condition: {0}</target>
      </trans-unit>
    </body>
  </file>
  <file original="extensions/ms-vscode.node-debug2/node_modules\vscode-chrome-debug-core\out/src/chrome/chromeDebugAdapter" source-language="en" target-language="en-gb" datatype="plaintext">
    <body>
      <trans-unit id="exceptions.all">
        <source xml:lang="en">All Exceptions</source>
        <target state="new">All Exceptions</target>
      </trans-unit>
      <trans-unit id="exceptions.uncaught">
        <source xml:lang="en">Uncaught Exceptions</source>
        <target state="new">Uncaught Exceptions</target>
      </trans-unit>
      <trans-unit id="exceptions.promise_rejects">
        <source xml:lang="en">Promise Rejects</source>
        <target state="new">Promise Rejects</target>
      </trans-unit>
    </body>
  </file>
  <file original="extensions/ms-vscode.node-debug2/node_modules\vscode-chrome-debug-core\out/src/chrome/chromeTargetDiscoveryStrategy" source-language="en" target-language="en-gb" datatype="plaintext">
    <body>
      <trans-unit id="attach.responseButNoTargets">
        <source xml:lang="en">Got a response from the target app, but no target pages found</source>
        <target state="new">Got a response from the target app, but no target pages found</target>
      </trans-unit>
      <trans-unit id="attach.cannotConnect">
        <source xml:lang="en">Cannot connect to the target: {0}</source>
        <target state="translated">Cannot connect to the target: {0}</target>
      </trans-unit>
      <trans-unit id="attach.invalidResponse">
        <source xml:lang="en">Response from the target seems invalid. Error: {0}. Response: {1}</source>
        <target state="translated">Response from the target seems invalid. Error: {0}. Response: {1}</target>
      </trans-unit>
      <trans-unit id="attach.invalidResponseArray">
        <source xml:lang="en">Response from the target seems invalid: {0}</source>
        <target state="new">Response from the target seems invalid: {0}</target>
      </trans-unit>
      <trans-unit id="attach.noMatchingTarget">
        <source xml:lang="en">Can't find a valid target that matches: {0}. Available pages: {1}</source>
        <target state="new">Can't find a valid target that matches: {0}. Available pages: {1}</target>
      </trans-unit>
      <trans-unit id="attach.devToolsAttached">
        <source xml:lang="en">Can't attach to this target that may have Chrome DevTools attached: {0}</source>
        <target state="translated">Can't attach to this target that may have Chrome DevTools attached: {0}</target>
      </trans-unit>
    </body>
  </file>
  <file original="extensions/ms-vscode.node-debug2/node_modules\vscode-chrome-debug-core\out/src/chrome/stackFrames" source-language="en" target-language="en-gb" datatype="plaintext">
    <body>
      <trans-unit id="skipReason">
        <source xml:lang="en">(skipped by '{0}')</source>
        <target state="new">(skipped by '{0}')</target>
      </trans-unit>
      <trans-unit id="scope.exception">
        <source xml:lang="en">Exception</source>
        <target state="translated">Exception</target>
      </trans-unit>
    </body>
  </file>
  <file original="extensions/ms-vscode.node-debug2/node_modules\vscode-chrome-debug-core\out/src/chrome/stoppedEvent" source-language="en" target-language="en-gb" datatype="plaintext">
    <body>
      <trans-unit id="reason.description.step">
        <source xml:lang="en">Paused on step</source>
        <target state="new">Paused on step</target>
      </trans-unit>
      <trans-unit id="reason.description.breakpoint">
        <source xml:lang="en">Paused on breakpoint</source>
        <target state="new">Paused on breakpoint</target>
      </trans-unit>
      <trans-unit id="reason.description.exception">
        <source xml:lang="en">Paused on exception</source>
        <target state="new">Paused on exception</target>
      </trans-unit>
      <trans-unit id="reason.description.uncaughtException">
        <source xml:lang="en">Paused on uncaught exception</source>
        <target state="new">Paused on uncaught exception</target>
      </trans-unit>
      <trans-unit id="reason.description.caughtException">
        <source xml:lang="en">Paused on caught exception</source>
        <target state="new">Paused on caught exception</target>
      </trans-unit>
      <trans-unit id="reason.description.user_request">
        <source xml:lang="en">Paused on user request</source>
        <target state="new">Paused on user request</target>
      </trans-unit>
      <trans-unit id="reason.description.entry">
        <source xml:lang="en">Paused on entry</source>
        <target state="new">Paused on entry</target>
      </trans-unit>
      <trans-unit id="reason.description.debugger_statement">
        <source xml:lang="en">Paused on debugger statement</source>
        <target state="new">Paused on debugger statement</target>
      </trans-unit>
      <trans-unit id="reason.description.restart">
        <source xml:lang="en">Paused on frame entry</source>
        <target state="new">Paused on frame entry</target>
      </trans-unit>
      <trans-unit id="reason.description.promiseRejection">
        <source xml:lang="en">Paused on promise rejection</source>
        <target state="new">Paused on promise rejection</target>
      </trans-unit>
    </body>
  </file>
  <file original="extensions/ms-vscode.node-debug2/node_modules\vscode-chrome-debug-core\out/src/transformers/baseSourceMapTransformer" source-language="en" target-language="en-gb" datatype="plaintext">
    <body>
      <trans-unit id="origin.inlined.source.map">
        <source xml:lang="en">read-only inlined content from source map</source>
        <target state="translated">read-only inlined content from source map</target>
      </trans-unit>
    </body>
  </file>
  <file original="extensions/ms-vscode.node-debug2/node_modules\vscode-chrome-debug-core\out/src/transformers/remotePathTransformer" source-language="en" target-language="en-gb" datatype="plaintext">
    <body>
      <trans-unit id="localRootAndRemoteRoot">
        <source xml:lang="en">Both localRoot and remoteRoot must be specified.</source>
        <target state="new">Both localRoot and remoteRoot must be specified.</target>
      </trans-unit>
    </body>
  </file>
</xliff>