<?xml version="1.0" encoding="utf-8"?>
<xliff version="1.2" xmlns="urn:oasis:names:tc:xliff:document:1.2">
  <file original="src/vs/workbench/contrib/codeEditor/electron-browser/selectionClipboard" source-language="en" target-language="ko" datatype="plaintext">
    <body>
      <trans-unit id="actions.pasteSelectionClipboard">
        <source xml:lang="en">Paste Selection Clipboard</source>
        <target state="translated">선택 영역을 클립보드에 붙여넣기</target>
      </trans-unit>
    </body>
  </file>
  <file original="src/vs/workbench/contrib/codeEditor/browser/largeFileOptimizations" source-language="en" target-language="ko" datatype="plaintext">
    <body>
      <trans-unit id="largeFile">
        <source xml:lang="en">{0}: tokenization, wrapping and folding have been turned off for this large file in order to reduce memory usage and avoid freezing or crashing.</source>
        <target state="translated">{0}: 메모리 사용을 줄이고 멈춤 또는 작동 중단을 방지하기 위해 이 큰 파일에 대해 토큰화, 줄 바꿈 및 접기를 해제했습니다.</target>
        <note>Variable 0 will be a file name.</note>
      </trans-unit>
      <trans-unit id="removeOptimizations">
        <source xml:lang="en">Forcefully enable features</source>
        <target state="translated">강제로 기능을 사용하도록 설정</target>
      </trans-unit>
      <trans-unit id="reopenFilePrompt">
        <source xml:lang="en">Please reopen file in order for this setting to take effect.</source>
        <target state="translated">이 설정을 적용하려면 파일을 다시 여세요.</target>
      </trans-unit>
    </body>
  </file>
  <file original="src/vs/workbench/contrib/codeEditor/browser/diffEditorHelper" source-language="en" target-language="ko" datatype="plaintext">
    <body>
      <trans-unit id="hintTimeout">
        <source xml:lang="en">The diff algorithm was stopped early (after {0} ms.)</source>
        <target state="translated">diff 알고리즘이 일찍({0}밀리초 이후) 중지되었습니다.</target>
      </trans-unit>
      <trans-unit id="removeTimeout">
        <source xml:lang="en">Remove limit</source>
        <target state="translated">제한 제거</target>
      </trans-unit>
      <trans-unit id="hintWhitespace">
        <source xml:lang="en">Show Whitespace Differences</source>
        <target state="translated">공백 차이 표시</target>
      </trans-unit>
    </body>
  </file>
  <file original="src/vs/workbench/contrib/codeEditor/browser/inspectKeybindings" source-language="en" target-language="ko" datatype="plaintext">
    <body>
      <trans-unit id="workbench.action.inspectKeyMap">
        <source xml:lang="en">Developer: Inspect Key Mappings</source>
        <target state="translated">개발자: 키 매핑 검사</target>
      </trans-unit>
      <trans-unit id="workbench.action.inspectKeyMapJSON">
        <source xml:lang="en">Inspect Key Mappings (JSON)</source>
        <target state="translated">키 매핑 검사(JSON)</target>
      </trans-unit>
      <trans-unit id="developer">
        <source xml:lang="en">Developer</source>
        <target state="translated">개발자</target>
      </trans-unit>
    </body>
  </file>
  <file original="src/vs/workbench/contrib/codeEditor/browser/toggleColumnSelection" source-language="en" target-language="ko" datatype="plaintext">
    <body>
      <trans-unit id="toggleColumnSelection">
        <source xml:lang="en">Toggle Column Selection Mode</source>
        <target state="translated">열 선택 모드 토글</target>
      </trans-unit>
      <trans-unit id="miColumnSelection">
        <source xml:lang="en">Column &amp;&amp;Selection Mode</source>
        <target state="translated">열 선택 모드(&amp;&amp;S)</target>
        <note>&amp;&amp; denotes a mnemonic</note>
      </trans-unit>
    </body>
  </file>
  <file original="src/vs/workbench/contrib/codeEditor/browser/toggleMinimap" source-language="en" target-language="ko" datatype="plaintext">
    <body>
      <trans-unit id="toggleMinimap">
        <source xml:lang="en">Toggle Minimap</source>
        <target state="translated">미니맵 토글</target>
      </trans-unit>
      <trans-unit id="view">
        <source xml:lang="en">View</source>
        <target state="translated">보기</target>
      </trans-unit>
      <trans-unit id="miShowMinimap">
        <source xml:lang="en">Show &amp;&amp;Minimap</source>
        <target state="translated">미니맵 표시(&amp;&amp;M)</target>
        <note>&amp;&amp; denotes a mnemonic</note>
      </trans-unit>
    </body>
  </file>
  <file original="src/vs/workbench/contrib/codeEditor/browser/semanticTokensHelp" source-language="en" target-language="ko" datatype="plaintext">
    <body>
      <trans-unit id="semanticTokensHelp">
        <source xml:lang="en">Code coloring of '{0}' has been updated as the theme '{1}' has [semantic highlighting](https://go.microsoft.com/fwlink/?linkid=2122588) enabled.</source>
        <target state="translated">테마 '{1}'에 [의미 체계 강조 표시](https://go.microsoft.com/fwlink/?linkid=2122588)가 사용 설정됨에 따라 '{0}'의 코드 색 지정이 업데이트되었습니다.</target>
        <note>Variable 0 will be a file name.
Variable 1 will be a theme name.</note>
      </trans-unit>
      <trans-unit id="learnMoreButton">
        <source xml:lang="en">Learn More</source>
        <target state="translated">자세한 정보</target>
      </trans-unit>
    </body>
  </file>
  <file original="src/vs/workbench/contrib/codeEditor/browser/toggleMultiCursorModifier" source-language="en" target-language="ko" datatype="plaintext">
    <body>
      <trans-unit id="toggleLocation">
        <source xml:lang="en">Toggle Multi-Cursor Modifier</source>
        <target state="translated">다중 커서 한정자 설정/해제</target>
      </trans-unit>
      <trans-unit id="miMultiCursorAlt">
        <source xml:lang="en">Switch to Alt+Click for Multi-Cursor</source>
        <target state="translated">다중 커서를 위해 Alt+Click으로 전환</target>
      </trans-unit>
      <trans-unit id="miMultiCursorCmd">
        <source xml:lang="en">Switch to Cmd+Click for Multi-Cursor</source>
        <target state="translated">다중 커서에 Cmd+Click 사용 </target>
      </trans-unit>
      <trans-unit id="miMultiCursorCtrl">
        <source xml:lang="en">Switch to Ctrl+Click for Multi-Cursor</source>
        <target state="translated">다중 커서에 Ctrl+클릭 사용</target>
      </trans-unit>
    </body>
  </file>
  <file original="src/vs/workbench/contrib/codeEditor/browser/quickaccess/gotoLineQuickAccess" source-language="en" target-language="ko" datatype="plaintext">
    <body>
      <trans-unit id="gotoLineQuickAccessPlaceholder">
        <source xml:lang="en">Type the line number and optional column to go to (e.g. 42:5 for line 42 and column 5).</source>
        <target state="translated">이동하려는 줄 번호와 열(선택 사항)을 입력합니다(예: 줄 42, 열 5의 경우 42:5).</target>
      </trans-unit>
      <trans-unit id="gotoLineQuickAccess">
        <source xml:lang="en">Go to Line/Column</source>
        <target state="translated">줄/열로 이동</target>
      </trans-unit>
      <trans-unit id="gotoLine">
        <source xml:lang="en">Go to Line/Column...</source>
        <target state="translated">줄/열로 이동...</target>
      </trans-unit>
    </body>
  </file>
  <file original="src/vs/workbench/contrib/codeEditor/browser/toggleRenderControlCharacter" source-language="en" target-language="ko" datatype="plaintext">
    <body>
      <trans-unit id="toggleRenderControlCharacters">
        <source xml:lang="en">Toggle Control Characters</source>
        <target state="translated">제어 문자 설정/해제</target>
      </trans-unit>
      <trans-unit id="view">
        <source xml:lang="en">View</source>
        <target state="translated">보기</target>
      </trans-unit>
      <trans-unit id="miToggleRenderControlCharacters">
        <source xml:lang="en">Render &amp;&amp;Control Characters</source>
        <target state="translated">제어 문자 렌더링(&amp;&amp;C)</target>
        <note>&amp;&amp; denotes a mnemonic</note>
      </trans-unit>
    </body>
  </file>
  <file original="src/vs/workbench/contrib/codeEditor/browser/toggleRenderWhitespace" source-language="en" target-language="ko" datatype="plaintext">
    <body>
      <trans-unit id="toggleRenderWhitespace">
        <source xml:lang="en">Toggle Render Whitespace</source>
        <target state="translated">공백 렌더링 설정/해제</target>
      </trans-unit>
      <trans-unit id="view">
        <source xml:lang="en">View</source>
        <target state="translated">보기</target>
      </trans-unit>
      <trans-unit id="miToggleRenderWhitespace">
        <source xml:lang="en">&amp;&amp;Render Whitespace</source>
        <target state="translated">공백 렌더링(&amp;&amp;R)</target>
        <note>&amp;&amp; denotes a mnemonic</note>
      </trans-unit>
    </body>
  </file>
  <file original="src/vs/workbench/contrib/codeEditor/browser/quickaccess/gotoSymbolQuickAccess" source-language="en" target-language="ko" datatype="plaintext">
    <body>
      <trans-unit id="gotoSymbolQuickAccessPlaceholder">
        <source xml:lang="en">Type the name of a symbol to go to.</source>
        <target state="translated">이동할 기호의 이름을 입력합니다.</target>
      </trans-unit>
      <trans-unit id="gotoSymbolQuickAccess">
        <source xml:lang="en">Go to Symbol in Editor</source>
        <target state="translated">편집기에서 기호로 이동</target>
      </trans-unit>
      <trans-unit id="gotoSymbolByCategoryQuickAccess">
        <source xml:lang="en">Go to Symbol in Editor by Category</source>
        <target state="translated">범주별 편집기에서 기호로 이동</target>
      </trans-unit>
      <trans-unit id="gotoSymbol">
        <source xml:lang="en">Go to Symbol in Editor...</source>
        <target state="translated">편집기에서 기호로 이동...</target>
      </trans-unit>
    </body>
  </file>
  <file original="src/vs/workbench/contrib/codeEditor/browser/accessibility/accessibility" source-language="en" target-language="ko" datatype="plaintext">
    <body>
      <trans-unit id="emergencyConfOn">
        <source xml:lang="en">Now changing the setting `editor.accessibilitySupport` to 'on'.</source>
        <target state="translated">이제 `editor.accessibilitySupport` 설정을 'on'으로 변경합니다.</target>
      </trans-unit>
      <trans-unit id="openingDocs">
        <source xml:lang="en">Now opening the VS Code Accessibility documentation page.</source>
        <target state="translated">이제 VS Code 접근성 설명서 페이지를 엽니다.</target>
      </trans-unit>
      <trans-unit id="introMsg">
        <source xml:lang="en">Thank you for trying out VS Code's accessibility options.</source>
        <target state="translated">VS Code의 접근성 옵션을 사용해 주셔서 감사합니다.</target>
      </trans-unit>
      <trans-unit id="status">
        <source xml:lang="en">Status:</source>
        <target state="translated">상태:</target>
      </trans-unit>
      <trans-unit id="changeConfigToOnMac">
        <source xml:lang="en">To configure the editor to be permanently optimized for usage with a Screen Reader press Command+E now.</source>
        <target state="translated">화면 읽기 프로그램에서 사용에 영구적으로 최적화되도록 편집기를 구성하려면 지금 Command+E를 누르세요.</target>
      </trans-unit>
      <trans-unit id="changeConfigToOnWinLinux">
        <source xml:lang="en">To configure the editor to be permanently optimized for usage with a Screen Reader press Control+E now.</source>
        <target state="translated">화면 읽기 프로그램에서 사용에 영구적으로 최적화되도록 편집기를 구성하려면 지금 Command+E를 누르세요.</target>
      </trans-unit>
      <trans-unit id="auto_unknown">
        <source xml:lang="en">The editor is configured to use platform APIs to detect when a Screen Reader is attached, but the current runtime does not support this.</source>
        <target state="translated">편집기는 플랫폼 API를 사용하여 화면 읽기 프로그램이 연결되는 시기를 검색하도록 구성되어 있지만 현재 런타임에서는 이 구성을 지원하지 않습니다.</target>
      </trans-unit>
      <trans-unit id="auto_on">
        <source xml:lang="en">The editor has automatically detected a Screen Reader is attached.</source>
        <target state="translated">편집기는 화면 읽기 프로그램이 연결되어 있음을 자동으로
 검색했습니다.</target>
      </trans-unit>
      <trans-unit id="auto_off">
        <source xml:lang="en">The editor is configured to automatically detect when a Screen Reader is attached, which is not the case at this time.</source>
        <target state="translated">편집기는 화면 편집기가 연결되는 시기를 자동으로 검색하도록 구성되어 있지만, 이 구성은 현재 지원되지 않습니다.</target>
      </trans-unit>
      <trans-unit id="configuredOn">
        <source xml:lang="en">The editor is configured to be permanently optimized for usage with a Screen Reader - you can change this by editing the setting `editor.accessibilitySupport`.</source>
        <target state="translated">편집기는 화면 읽기 프로그램에서 사용에 영구적으로 최적화되도록 편집기를 구성되어 있습니다. `editor.accessibilitySupport` 설정을 편집하여 이 구성을 변경할 수 있습니다.</target>
      </trans-unit>
      <trans-unit id="configuredOff">
        <source xml:lang="en">The editor is configured to never be optimized for usage with a Screen Reader.</source>
        <target state="translated">편집기는 화면 읽기 프로그램에서 사용에 최적화되지 않도록 구성되었습니다.</target>
      </trans-unit>
      <trans-unit id="tabFocusModeOnMsg">
        <source xml:lang="en">Pressing Tab in the current editor will move focus to the next focusable element. Toggle this behavior by pressing {0}.</source>
        <target state="translated">현재 편집기에서 &lt;Tab&gt; 키를 누르면 포커스가 다음 포커스 가능한 요소로 이동합니다. {0}을(를) 눌러서 이 동작을 설정/해제합니다.</target>
      </trans-unit>
      <trans-unit id="tabFocusModeOnMsgNoKb">
        <source xml:lang="en">Pressing Tab in the current editor will move focus to the next focusable element. The command {0} is currently not triggerable by a keybinding.</source>
        <target state="translated">현재 편집기에서 &lt;Tab&gt; 키를 누르면 포커스가 다음 포커스 가능한 요소로 이동합니다. {0} 명령은 현재 키 바인딩으로 트리거할 수 없습니다.</target>
      </trans-unit>
      <trans-unit id="tabFocusModeOffMsg">
        <source xml:lang="en">Pressing Tab in the current editor will insert the tab character. Toggle this behavior by pressing {0}.</source>
        <target state="translated">현재 편집기에서 &lt;Tab&gt; 키를 누르면 탭 문자가 삽입됩니다. {0}을(를) 눌러서 이 동작을 설정/해제합니다.</target>
      </trans-unit>
      <trans-unit id="tabFocusModeOffMsgNoKb">
        <source xml:lang="en">Pressing Tab in the current editor will insert the tab character. The command {0} is currently not triggerable by a keybinding.</source>
        <target state="translated">현재 편집기에서 &lt;Tab&gt; 키를 누르면 탭 문자가 삽입됩니다. {0} 명령은 현재 키 바인딩으로 트리거할 수 없습니다.</target>
      </trans-unit>
      <trans-unit id="openDocMac">
        <source xml:lang="en">Press Command+H now to open a browser window with more VS Code information related to Accessibility.</source>
        <target state="translated">브라우저 창에 접근성과 관련된 추가 VS Code 정보를 열려면 Command+H를 누르세요.</target>
      </trans-unit>
      <trans-unit id="openDocWinLinux">
        <source xml:lang="en">Press Control+H now to open a browser window with more VS Code information related to Accessibility.</source>
        <target state="translated">브라우저 창에 접근성과 관련된 추가 VS Code 정보를 열려면 지금 Control+H를 누르세요.</target>
      </trans-unit>
      <trans-unit id="outroMsg">
        <source xml:lang="en">You can dismiss this tooltip and return to the editor by pressing Escape or Shift+Escape.</source>
        <target state="translated">이 도구 설명을 해제하고 Esc 키 또는 Shift+Esc를 눌러서 편집기로 돌아갈 수 있습니다.</target>
      </trans-unit>
      <trans-unit id="ShowAccessibilityHelpAction">
        <source xml:lang="en">Show Accessibility Help</source>
        <target state="translated">접근성 도움말 표시</target>
      </trans-unit>
    </body>
  </file>
  <file original="src/vs/workbench/contrib/codeEditor/browser/toggleWordWrap" source-language="en" target-language="ko" datatype="plaintext">
    <body>
      <trans-unit id="toggle.wordwrap">
        <source xml:lang="en">View: Toggle Word Wrap</source>
        <target state="translated">보기: 자동 줄 바꿈 설정/해제</target>
      </trans-unit>
      <trans-unit id="wordWrap.notInDiffEditor">
        <source xml:lang="en">Cannot toggle word wrap in a diff editor.</source>
        <target state="translated">diff 편집기에서 자동 줄 바꿈을 설정/해제할 수 없습니다.</target>
      </trans-unit>
      <trans-unit id="unwrapMinified">
        <source xml:lang="en">Disable wrapping for this file</source>
        <target state="translated">이 파일에 대해 줄 바꿈 사용 안 함</target>
      </trans-unit>
      <trans-unit id="wrapMinified">
        <source xml:lang="en">Enable wrapping for this file</source>
        <target state="translated">이 파일에 대해 줄 바꿈 사용</target>
      </trans-unit>
      <trans-unit id="miToggleWordWrap">
        <source xml:lang="en">Toggle &amp;&amp;Word Wrap</source>
        <target state="translated">자동 줄 바꿈 설정/해제(&amp;&amp;W)</target>
        <note>&amp;&amp; denotes a mnemonic</note>
      </trans-unit>
    </body>
  </file>
  <file original="src/vs/workbench/contrib/codeEditor/browser/saveParticipants" source-language="en" target-language="ko" datatype="plaintext">
    <body>
      <trans-unit id="formatting">
        <source xml:lang="en">Running '{0}' Formatter ([configure](command:workbench.action.openSettings?%5B%22editor.formatOnSave%22%5D)).</source>
        <target state="translated">'{0}' 포맷터([구성](command:workbench.action.openSettings?%5B%22editor.formatOnSave%22%5D))를 실행하는 중입니다.</target>
      </trans-unit>
      <trans-unit id="codeaction">
        <source xml:lang="en">Quick Fixes</source>
        <target state="translated">빠른 수정</target>
      </trans-unit>
      <trans-unit id="codeaction.get">
        <source xml:lang="en">Getting code actions from '{0}' ([configure](command:workbench.action.openSettings?%5B%22editor.codeActionsOnSave%22%5D)).</source>
        <target state="translated">'{0}'([구성](command:workbench.action.openSettings?%5B%22editor.codeActionsOnSave%22%5D))에서 코드 작업을 가져오고 있습니다.</target>
      </trans-unit>
      <trans-unit id="codeAction.apply">
        <source xml:lang="en">Applying code action '{0}'.</source>
        <target state="translated">코드 작업 '{0}'을(를) 적용하는 중입니다.</target>
      </trans-unit>
    </body>
  </file>
  <file original="src/vs/workbench/contrib/codeEditor/browser/languageConfigurationExtensionPoint" source-language="en" target-language="ko" datatype="plaintext">
    <body>
      <trans-unit id="parseErrors">
        <source xml:lang="en">Errors parsing {0}: {1}</source>
        <target state="translated">{0}을(를) 구문 분석하는 동안 오류가 발생했습니다. {1}</target>
      </trans-unit>
      <trans-unit id="formatError">
        <source xml:lang="en">{0}: Invalid format, JSON object expected.</source>
        <target state="translated">{0}: 잘못된 형식입니다. JSON 개체가 필요합니다.</target>
      </trans-unit>
      <trans-unit id="schema.openBracket">
        <source xml:lang="en">The opening bracket character or string sequence.</source>
        <target state="translated">여는 대괄호 문자 또는 문자열 시퀀스입니다.</target>
      </trans-unit>
      <trans-unit id="schema.closeBracket">
        <source xml:lang="en">The closing bracket character or string sequence.</source>
        <target state="translated">닫는 대괄호 문자 또는 문자열 시퀀스입니다.</target>
      </trans-unit>
      <trans-unit id="schema.comments">
        <source xml:lang="en">Defines the comment symbols</source>
        <target state="translated">주석 기호를 정의합니다.</target>
      </trans-unit>
      <trans-unit id="schema.blockComments">
        <source xml:lang="en">Defines how block comments are marked.</source>
        <target state="translated">블록 주석이 표시되는 방법을 정의합니다.</target>
      </trans-unit>
      <trans-unit id="schema.blockComment.begin">
        <source xml:lang="en">The character sequence that starts a block comment.</source>
        <target state="translated">블록 주석을 시작하는 문자 시퀀스입니다.</target>
      </trans-unit>
      <trans-unit id="schema.blockComment.end">
        <source xml:lang="en">The character sequence that ends a block comment.</source>
        <target state="translated">블록 주석을 끝내는 문자 시퀀스입니다.</target>
      </trans-unit>
      <trans-unit id="schema.lineComment">
        <source xml:lang="en">The character sequence that starts a line comment.</source>
        <target state="translated">줄 주석을 시작하는 문자 시퀀스입니다.</target>
      </trans-unit>
      <trans-unit id="schema.brackets">
        <source xml:lang="en">Defines the bracket symbols that increase or decrease the indentation.</source>
        <target state="translated">들여쓰기를 늘리거나 줄이는 대괄호 기호를 정의합니다.</target>
      </trans-unit>
      <trans-unit id="schema.autoClosingPairs">
        <source xml:lang="en">Defines the bracket pairs. When a opening bracket is entered, the closing bracket is inserted automatically.</source>
        <target state="translated">대괄호 쌍을 정의합니다. 여는 대괄호를 입력하면 닫는 대괄호가 자동으로 삽입됩니다.</target>
      </trans-unit>
      <trans-unit id="schema.autoClosingPairs.notIn">
        <source xml:lang="en">Defines a list of scopes where the auto pairs are disabled.</source>
        <target state="translated">자동 쌍을 사용하지 않도록 설정된 범위 목록을 정의합니다.</target>
      </trans-unit>
      <trans-unit id="schema.autoCloseBefore">
        <source xml:lang="en">Defines what characters must be after the cursor in order for bracket or quote autoclosing to occur when using the 'languageDefined' autoclosing setting. This is typically the set of characters which can not start an expression.</source>
        <target state="translated">'languageDefined' 자동 닫기 설정을 사용할 때 대괄호 또는 따옴표 자동 닫기를 수행하기 위해 커서 뒤에 와야 하는 문자를 정의합니다. 이는 일반적으로 식을 시작할 수 없는 문자 집합입니다.</target>
      </trans-unit>
      <trans-unit id="schema.surroundingPairs">
        <source xml:lang="en">Defines the bracket pairs that can be used to surround a selected string.</source>
        <target state="translated">선택한 문자열을 둘러싸는 데 사용할 수 있는 대괄호 쌍을 정의합니다.</target>
      </trans-unit>
      <trans-unit id="schema.wordPattern">
        <source xml:lang="en">Defines what is considered to be a word in the programming language.</source>
        <target state="translated">프로그래밍 언어의 단어로 간주되는 항목을 정의합니다.</target>
      </trans-unit>
      <trans-unit id="schema.wordPattern.pattern">
        <source xml:lang="en">The RegExp pattern used to match words.</source>
        <target state="translated">단어 일치에 사용하는 RegEXP 패턴입니다.</target>
      </trans-unit>
      <trans-unit id="schema.wordPattern.flags">
        <source xml:lang="en">The RegExp flags used to match words.</source>
        <target state="translated">단어 일치에 사용하는 RegExp 플래그입니다.</target>
      </trans-unit>
      <trans-unit id="schema.wordPattern.flags.errorMessage">
        <source xml:lang="en">Must match the pattern `/^([gimuy]+)$/`.</source>
        <target state="translated">`/^([gimuy]+)$/` 패턴과 일치해야 합니다.</target>
      </trans-unit>
      <trans-unit id="schema.indentationRules">
        <source xml:lang="en">The language's indentation settings.</source>
        <target state="translated">해당 언어의 들여쓰기 설정입니다.</target>
      </trans-unit>
      <trans-unit id="schema.indentationRules.increaseIndentPattern">
        <source xml:lang="en">If a line matches this pattern, then all the lines after it should be indented once (until another rule matches).</source>
        <target state="translated">라인이 이 패턴과 일치할 경우 이후의 모든 행을 한 번 들여씁니다(다른 규칙이 일치할 때까지).</target>
      </trans-unit>
      <trans-unit id="schema.indentationRules.increaseIndentPattern.pattern">
        <source xml:lang="en">The RegExp pattern for increaseIndentPattern.</source>
        <target state="translated">increaseIndentPattern에 대한 RegExp 패턴입니다.</target>
      </trans-unit>
      <trans-unit id="schema.indentationRules.increaseIndentPattern.flags">
        <source xml:lang="en">The RegExp flags for increaseIndentPattern.</source>
        <target state="translated">increaseIndentPattern에 대한 RegExp 플래그입니다.</target>
      </trans-unit>
      <trans-unit id="schema.indentationRules.increaseIndentPattern.errorMessage">
        <source xml:lang="en">Must match the pattern `/^([gimuy]+)$/`.</source>
        <target state="translated">`/^([gimuy]+)$/` 패턴과 일치해야 합니다.</target>
      </trans-unit>
      <trans-unit id="schema.indentationRules.decreaseIndentPattern">
        <source xml:lang="en">If a line matches this pattern, then all the lines after it should be unindented once (until another rule matches).</source>
        <target state="translated">행이 이 패턴과 일치하면 이후의 모든 행은 한 번 들여쓰지 않습니다(다른 규칙이 일치할 때까지).</target>
      </trans-unit>
      <trans-unit id="schema.indentationRules.decreaseIndentPattern.pattern">
        <source xml:lang="en">The RegExp pattern for decreaseIndentPattern.</source>
        <target state="translated">decreaseIndentPattern에 대한 RegExp 패턴입니다.</target>
      </trans-unit>
      <trans-unit id="schema.indentationRules.decreaseIndentPattern.flags">
        <source xml:lang="en">The RegExp flags for decreaseIndentPattern.</source>
        <target state="translated">decreaseIndentPattern에 대한 RegExp 플래그입니다.</target>
      </trans-unit>
      <trans-unit id="schema.indentationRules.decreaseIndentPattern.errorMessage">
        <source xml:lang="en">Must match the pattern `/^([gimuy]+)$/`.</source>
        <target state="translated">`/^([gimuy]+)$/` 패턴과 일치해야 합니다.</target>
      </trans-unit>
      <trans-unit id="schema.indentationRules.indentNextLinePattern">
        <source xml:lang="en">If a line matches this pattern, then **only the next line** after it should be indented once.</source>
        <target state="translated">행이 이 패턴과 일치하면 **그 다음 행만** 한 번 들여쓰기합니다.</target>
      </trans-unit>
      <trans-unit id="schema.indentationRules.indentNextLinePattern.pattern">
        <source xml:lang="en">The RegExp pattern for indentNextLinePattern.</source>
        <target state="translated">indentNextLinePattern에 대한 RegExp 패턴입니다.</target>
      </trans-unit>
      <trans-unit id="schema.indentationRules.indentNextLinePattern.flags">
        <source xml:lang="en">The RegExp flags for indentNextLinePattern.</source>
        <target state="translated">indentNextLinePattern에 대한 RegExp 플래그입니다.</target>
      </trans-unit>
      <trans-unit id="schema.indentationRules.indentNextLinePattern.errorMessage">
        <source xml:lang="en">Must match the pattern `/^([gimuy]+)$/`.</source>
        <target state="translated">`/^([gimuy]+)$/` 패턴과 일치해야 합니다.</target>
      </trans-unit>
      <trans-unit id="schema.indentationRules.unIndentedLinePattern">
        <source xml:lang="en">If a line matches this pattern, then its indentation should not be changed and it should not be evaluated against the other rules.</source>
        <target state="translated">행이 이 패턴과 일치하면 들여쓰기를 수정하지 않고 다른 규칙에 대해서 평가하지도 않습니다.</target>
      </trans-unit>
      <trans-unit id="schema.indentationRules.unIndentedLinePattern.pattern">
        <source xml:lang="en">The RegExp pattern for unIndentedLinePattern.</source>
        <target state="translated">unIndentedLinePattern에 대한 RegExp 패턴입니다.</target>
      </trans-unit>
      <trans-unit id="schema.indentationRules.unIndentedLinePattern.flags">
        <source xml:lang="en">The RegExp flags for unIndentedLinePattern.</source>
        <target state="translated">unIndentedLinePattern에 대한 RegExp 플래그입니다.</target>
      </trans-unit>
      <trans-unit id="schema.indentationRules.unIndentedLinePattern.errorMessage">
        <source xml:lang="en">Must match the pattern `/^([gimuy]+)$/`.</source>
        <target state="translated">`/^([gimuy]+)$/` 패턴과 일치해야 합니다.</target>
      </trans-unit>
      <trans-unit id="schema.folding">
        <source xml:lang="en">The language's folding settings.</source>
        <target state="translated">해당 언어의 접기 설정입니다.</target>
      </trans-unit>
      <trans-unit id="schema.folding.offSide">
        <source xml:lang="en">A language adheres to the off-side rule if blocks in that language are expressed by their indentation. If set, empty lines belong to the subsequent block.</source>
        <target state="translated">해당 언어의 블록이 들여쓰기로 표현되는 경우 언어는 오프사이드 규칙을 준수합니다. 설정하는 경우 빈 줄은 후속 블록에 속합니다.</target>
      </trans-unit>
      <trans-unit id="schema.folding.markers">
        <source xml:lang="en">Language specific folding markers such as '#region' and '#endregion'. The start and end regexes will be tested against the contents of all lines and must be designed efficiently</source>
        <target state="translated">'#region' 및 '#endregion'처럼 언어별 접기 표식입니다. 시작 및 종료 regex는 모든 줄의 콘텐츠에 대해 테스트되며 효율적으로 설계되어야 합니다.</target>
      </trans-unit>
      <trans-unit id="schema.folding.markers.start">
        <source xml:lang="en">The RegExp pattern for the start marker. The regexp must start with '^'.</source>
        <target state="translated">시작 표식에 대한 RegExp 패턴입니다. regexp는 '^'으로 시작해야 합니다.</target>
      </trans-unit>
      <trans-unit id="schema.folding.markers.end">
        <source xml:lang="en">The RegExp pattern for the end marker. The regexp must start with '^'.</source>
        <target state="translated">끝 표식에 대한 RegExp 패턴입니다. regexp는 '^'으로 시작해야 합니다.</target>
      </trans-unit>
    </body>
  </file>
  <file original="src/vs/workbench/contrib/codeEditor/browser/inspectEditorTokens/inspectEditorTokens" source-language="en" target-language="ko" datatype="plaintext">
    <body>
      <trans-unit id="inspectEditorTokens">
        <source xml:lang="en">Developer: Inspect Editor Tokens and Scopes</source>
        <target state="translated">개발자: 편집기 토큰 및 범위 검사</target>
      </trans-unit>
      <trans-unit id="inspectTMScopesWidget.loading">
        <source xml:lang="en">Loading...</source>
        <target state="translated">로드 중...</target>
      </trans-unit>
    </body>
  </file>
  <file original="src/vs/workbench/contrib/codeEditor/browser/find/simpleFindWidget" source-language="en" target-language="ko" datatype="plaintext">
    <body>
      <trans-unit id="label.find">
        <source xml:lang="en">Find</source>
        <target state="translated">찾기</target>
      </trans-unit>
      <trans-unit id="placeholder.find">
        <source xml:lang="en">Find</source>
        <target state="translated">찾기</target>
      </trans-unit>
      <trans-unit id="label.previousMatchButton">
        <source xml:lang="en">Previous match</source>
        <target state="translated">이전 일치</target>
      </trans-unit>
      <trans-unit id="label.nextMatchButton">
        <source xml:lang="en">Next match</source>
        <target state="translated">다음 일치 항목</target>
      </trans-unit>
      <trans-unit id="label.closeButton">
        <source xml:lang="en">Close</source>
        <target state="translated">닫기</target>
      </trans-unit>
    </body>
  </file>
  <file original="src/vs/workbench/contrib/codeEditor/browser/find/simpleFindReplaceWidget" source-language="en" target-language="ko" datatype="plaintext">
    <body>
      <trans-unit id="label.find">
        <source xml:lang="en">Find</source>
        <target state="translated">찾기</target>
      </trans-unit>
      <trans-unit id="placeholder.find">
        <source xml:lang="en">Find</source>
        <target state="translated">찾기</target>
      </trans-unit>
      <trans-unit id="label.previousMatchButton">
        <source xml:lang="en">Previous match</source>
        <target state="translated">이전 일치</target>
      </trans-unit>
      <trans-unit id="label.nextMatchButton">
        <source xml:lang="en">Next match</source>
        <target state="translated">다음 일치 항목</target>
      </trans-unit>
      <trans-unit id="label.closeButton">
        <source xml:lang="en">Close</source>
        <target state="translated">닫기</target>
      </trans-unit>
      <trans-unit id="label.toggleReplaceButton">
        <source xml:lang="en">Toggle Replace mode</source>
        <target state="translated">바꾸기 모드 설정/해제</target>
      </trans-unit>
      <trans-unit id="label.replace">
        <source xml:lang="en">Replace</source>
        <target state="translated">바꾸기</target>
      </trans-unit>
      <trans-unit id="placeholder.replace">
        <source xml:lang="en">Replace</source>
        <target state="translated">바꾸기</target>
      </trans-unit>
      <trans-unit id="label.replaceButton">
        <source xml:lang="en">Replace</source>
        <target state="translated">바꾸기</target>
      </trans-unit>
      <trans-unit id="label.replaceAllButton">
        <source xml:lang="en">Replace All</source>
        <target state="translated">모두 바꾸기</target>
      </trans-unit>
    </body>
  </file>
</xliff>