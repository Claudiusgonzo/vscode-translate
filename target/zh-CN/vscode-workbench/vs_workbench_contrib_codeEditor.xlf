<?xml version="1.0" encoding="utf-8"?>
<xliff version="1.2" xmlns="urn:oasis:names:tc:xliff:document:1.2">
  <file original="src/vs/workbench/contrib/codeEditor/electron-browser/selectionClipboard" source-language="en" target-language="zh-Hans" datatype="plaintext">
    <body>
      <trans-unit id="actions.pasteSelectionClipboard">
        <source xml:lang="en">Paste Selection Clipboard</source>
        <target state="translated">粘贴选择剪贴板</target>
      </trans-unit>
    </body>
  </file>
  <file original="src/vs/workbench/contrib/codeEditor/browser/largeFileOptimizations" source-language="en" target-language="zh-Hans" datatype="plaintext">
    <body>
      <trans-unit id="largeFile">
        <source xml:lang="en">{0}: tokenization, wrapping and folding have been turned off for this large file in order to reduce memory usage and avoid freezing or crashing.</source>
        <target state="translated">{0}: 为减少内存使用并避免卡顿或崩溃，我们已关闭对此大型文件内容的标记、折行和折叠。</target>
        <note>Variable 0 will be a file name.</note>
      </trans-unit>
      <trans-unit id="removeOptimizations">
        <source xml:lang="en">Forcefully enable features</source>
        <target state="translated">强制启用功能</target>
      </trans-unit>
      <trans-unit id="reopenFilePrompt">
        <source xml:lang="en">Please reopen file in order for this setting to take effect.</source>
        <target state="translated">请重新打开文件以使此设置生效。</target>
      </trans-unit>
    </body>
  </file>
  <file original="src/vs/workbench/contrib/codeEditor/browser/diffEditorHelper" source-language="en" target-language="zh-Hans" datatype="plaintext">
    <body>
      <trans-unit id="hintTimeout">
        <source xml:lang="en">The diff algorithm was stopped early (after {0} ms.)</source>
        <target state="translated">差异算法已提前停止（在 {0} ms 之后）</target>
      </trans-unit>
      <trans-unit id="removeTimeout">
        <source xml:lang="en">Remove limit</source>
        <target state="translated">删除限制</target>
      </trans-unit>
      <trans-unit id="hintWhitespace">
        <source xml:lang="en">Show Whitespace Differences</source>
        <target state="translated">显示空白差异</target>
      </trans-unit>
    </body>
  </file>
  <file original="src/vs/workbench/contrib/codeEditor/browser/inspectKeybindings" source-language="en" target-language="zh-Hans" datatype="plaintext">
    <body>
      <trans-unit id="workbench.action.inspectKeyMap">
        <source xml:lang="en">Developer: Inspect Key Mappings</source>
        <target state="translated">开发人员: 检查按键映射</target>
      </trans-unit>
      <trans-unit id="workbench.action.inspectKeyMapJSON">
        <source xml:lang="en">Inspect Key Mappings (JSON)</source>
        <target state="translated">检查按键映射（JSON）</target>
      </trans-unit>
      <trans-unit id="developer">
        <source xml:lang="en">Developer</source>
        <target state="translated">开发人员</target>
      </trans-unit>
    </body>
  </file>
  <file original="src/vs/workbench/contrib/codeEditor/browser/toggleColumnSelection" source-language="en" target-language="zh-Hans" datatype="plaintext">
    <body>
      <trans-unit id="toggleColumnSelection">
        <source xml:lang="en">Toggle Column Selection Mode</source>
        <target state="translated">切换列选择模式</target>
      </trans-unit>
      <trans-unit id="miColumnSelection">
        <source xml:lang="en">Column &amp;&amp;Selection Mode</source>
        <target state="translated">列和选择模式(&amp;&amp;S)</target>
        <note>&amp;&amp; denotes a mnemonic</note>
      </trans-unit>
    </body>
  </file>
  <file original="src/vs/workbench/contrib/codeEditor/browser/toggleMinimap" source-language="en" target-language="zh-Hans" datatype="plaintext">
    <body>
      <trans-unit id="toggleMinimap">
        <source xml:lang="en">Toggle Minimap</source>
        <target state="translated">切换到迷你地图</target>
      </trans-unit>
      <trans-unit id="view">
        <source xml:lang="en">View</source>
        <target state="translated">视图</target>
      </trans-unit>
      <trans-unit id="miShowMinimap">
        <source xml:lang="en">Show &amp;&amp;Minimap</source>
        <target state="translated">显示迷你地图(&amp;&amp;M)</target>
        <note>&amp;&amp; denotes a mnemonic</note>
      </trans-unit>
    </body>
  </file>
  <file original="src/vs/workbench/contrib/codeEditor/browser/semanticTokensHelp" source-language="en" target-language="zh-Hans" datatype="plaintext">
    <body>
      <trans-unit id="semanticTokensHelp">
        <source xml:lang="en">Code coloring of '{0}' has been updated as the theme '{1}' has [semantic highlighting](https://go.microsoft.com/fwlink/?linkid=2122588) enabled.</source>
        <target state="translated">“{0}”的代码着色已更新，因为主题“{1}”已启用[语义高亮](https://go.microsoft.com/fwlink/?linkid=2122588)。</target>
        <note>Variable 0 will be a file name.
Variable 1 will be a theme name.</note>
      </trans-unit>
      <trans-unit id="learnMoreButton">
        <source xml:lang="en">Learn More</source>
        <target state="translated">了解详细信息</target>
      </trans-unit>
    </body>
  </file>
  <file original="src/vs/workbench/contrib/codeEditor/browser/toggleMultiCursorModifier" source-language="en" target-language="zh-Hans" datatype="plaintext">
    <body>
      <trans-unit id="toggleLocation">
        <source xml:lang="en">Toggle Multi-Cursor Modifier</source>
        <target state="translated">切换多行修改键</target>
      </trans-unit>
      <trans-unit id="miMultiCursorAlt">
        <source xml:lang="en">Switch to Alt+Click for Multi-Cursor</source>
        <target state="translated">切换为“Alt+单击”进行多光标功能</target>
      </trans-unit>
      <trans-unit id="miMultiCursorCmd">
        <source xml:lang="en">Switch to Cmd+Click for Multi-Cursor</source>
        <target state="translated">切换为“Cmd+单击”进行多光标功能</target>
      </trans-unit>
      <trans-unit id="miMultiCursorCtrl">
        <source xml:lang="en">Switch to Ctrl+Click for Multi-Cursor</source>
        <target state="translated">切换为“Ctrl+单击”进行多光标功能</target>
      </trans-unit>
    </body>
  </file>
  <file original="src/vs/workbench/contrib/codeEditor/browser/quickaccess/gotoLineQuickAccess" source-language="en" target-language="zh-Hans" datatype="plaintext">
    <body>
      <trans-unit id="gotoLineQuickAccessPlaceholder">
        <source xml:lang="en">Type the line number and optional column to go to (e.g. 42:5 for line 42 and column 5).</source>
        <target state="translated">键入要转到的行号和可选列（例如，42:5表示第 42 行和第 5 列）。</target>
      </trans-unit>
      <trans-unit id="gotoLineQuickAccess">
        <source xml:lang="en">Go to Line/Column</source>
        <target state="translated">转到行/列</target>
      </trans-unit>
      <trans-unit id="gotoLine">
        <source xml:lang="en">Go to Line/Column...</source>
        <target state="translated">转到行/列...</target>
      </trans-unit>
    </body>
  </file>
  <file original="src/vs/workbench/contrib/codeEditor/browser/toggleRenderControlCharacter" source-language="en" target-language="zh-Hans" datatype="plaintext">
    <body>
      <trans-unit id="toggleRenderControlCharacters">
        <source xml:lang="en">Toggle Control Characters</source>
        <target state="translated">切换控制字符</target>
      </trans-unit>
      <trans-unit id="view">
        <source xml:lang="en">View</source>
        <target state="translated">视图</target>
      </trans-unit>
      <trans-unit id="miToggleRenderControlCharacters">
        <source xml:lang="en">Render &amp;&amp;Control Characters</source>
        <target state="translated">呈现控制字符(&amp;&amp;C)</target>
        <note>&amp;&amp; denotes a mnemonic</note>
      </trans-unit>
    </body>
  </file>
  <file original="src/vs/workbench/contrib/codeEditor/browser/toggleRenderWhitespace" source-language="en" target-language="zh-Hans" datatype="plaintext">
    <body>
      <trans-unit id="toggleRenderWhitespace">
        <source xml:lang="en">Toggle Render Whitespace</source>
        <target state="translated">切换呈现空格</target>
      </trans-unit>
      <trans-unit id="view">
        <source xml:lang="en">View</source>
        <target state="translated">视图</target>
      </trans-unit>
      <trans-unit id="miToggleRenderWhitespace">
        <source xml:lang="en">&amp;&amp;Render Whitespace</source>
        <target state="translated">渲染空格(&amp;&amp;R)</target>
        <note>&amp;&amp; denotes a mnemonic</note>
      </trans-unit>
    </body>
  </file>
  <file original="src/vs/workbench/contrib/codeEditor/browser/quickaccess/gotoSymbolQuickAccess" source-language="en" target-language="zh-Hans" datatype="plaintext">
    <body>
      <trans-unit id="gotoSymbolQuickAccessPlaceholder">
        <source xml:lang="en">Type the name of a symbol to go to.</source>
        <target state="translated">键入要转到的符号的名称。</target>
      </trans-unit>
      <trans-unit id="gotoSymbolQuickAccess">
        <source xml:lang="en">Go to Symbol in Editor</source>
        <target state="translated">转到编辑器中的符号</target>
      </trans-unit>
      <trans-unit id="gotoSymbolByCategoryQuickAccess">
        <source xml:lang="en">Go to Symbol in Editor by Category</source>
        <target state="translated">按类别转到编辑器中的符号</target>
      </trans-unit>
      <trans-unit id="gotoSymbol">
        <source xml:lang="en">Go to Symbol in Editor...</source>
        <target state="translated">转到编辑器中的符号...</target>
      </trans-unit>
    </body>
  </file>
  <file original="src/vs/workbench/contrib/codeEditor/browser/accessibility/accessibility" source-language="en" target-language="zh-Hans" datatype="plaintext">
    <body>
      <trans-unit id="emergencyConfOn">
        <source xml:lang="en">Now changing the setting `editor.accessibilitySupport` to 'on'.</source>
        <target state="translated">现在将设置 "editor.accessibilitySupport" 更改为 "on"。</target>
      </trans-unit>
      <trans-unit id="openingDocs">
        <source xml:lang="en">Now opening the VS Code Accessibility documentation page.</source>
        <target state="translated">正在打开 VS Code 辅助功能文档页面。</target>
      </trans-unit>
      <trans-unit id="introMsg">
        <source xml:lang="en">Thank you for trying out VS Code's accessibility options.</source>
        <target state="translated">感谢试用 VS Code 的辅助功能选项。</target>
      </trans-unit>
      <trans-unit id="status">
        <source xml:lang="en">Status:</source>
        <target state="translated">状态:</target>
      </trans-unit>
      <trans-unit id="changeConfigToOnMac">
        <source xml:lang="en">To configure the editor to be permanently optimized for usage with a Screen Reader press Command+E now.</source>
        <target state="translated">要配置编辑器对屏幕阅读器进行永久优化，请按 Command+E。</target>
      </trans-unit>
      <trans-unit id="changeConfigToOnWinLinux">
        <source xml:lang="en">To configure the editor to be permanently optimized for usage with a Screen Reader press Control+E now.</source>
        <target state="translated">要配置编辑器对屏幕阅读器进行永久优化，请按 Ctrl+E。</target>
      </trans-unit>
      <trans-unit id="auto_unknown">
        <source xml:lang="en">The editor is configured to use platform APIs to detect when a Screen Reader is attached, but the current runtime does not support this.</source>
        <target state="translated">编辑器被配置为使用平台 API 以检测是否附加了屏幕阅读器，但当前运行时不支持此功能。</target>
      </trans-unit>
      <trans-unit id="auto_on">
        <source xml:lang="en">The editor has automatically detected a Screen Reader is attached.</source>
        <target state="translated">编辑器自动检测到已附加屏幕阅读器。</target>
      </trans-unit>
      <trans-unit id="auto_off">
        <source xml:lang="en">The editor is configured to automatically detect when a Screen Reader is attached, which is not the case at this time.</source>
        <target state="translated">编辑器被配置为自动检测是否附加了屏幕阅读器，当前未检测到。</target>
      </trans-unit>
      <trans-unit id="configuredOn">
        <source xml:lang="en">The editor is configured to be permanently optimized for usage with a Screen Reader - you can change this by editing the setting `editor.accessibilitySupport`.</source>
        <target state="translated">已配置编辑器对屏幕阅读器进行永久优化 — 您可以更改 "editor.accessibilitySupport" 设置进行调整。</target>
      </trans-unit>
      <trans-unit id="configuredOff">
        <source xml:lang="en">The editor is configured to never be optimized for usage with a Screen Reader.</source>
        <target state="translated">编辑器被配置为不对屏幕阅读器的使用进行优化。</target>
      </trans-unit>
      <trans-unit id="tabFocusModeOnMsg">
        <source xml:lang="en">Pressing Tab in the current editor will move focus to the next focusable element. Toggle this behavior by pressing {0}.</source>
        <target state="translated">在当前编辑器中按 Tab 会将焦点移动到下一个可聚焦的元素。通过按 {0} 切换此行为。</target>
      </trans-unit>
      <trans-unit id="tabFocusModeOnMsgNoKb">
        <source xml:lang="en">Pressing Tab in the current editor will move focus to the next focusable element. The command {0} is currently not triggerable by a keybinding.</source>
        <target state="translated">在当前编辑器中按 Tab 会将焦点移动到下一个可聚焦的元素。当前无法通过按键绑定触发命令 {0}。</target>
      </trans-unit>
      <trans-unit id="tabFocusModeOffMsg">
        <source xml:lang="en">Pressing Tab in the current editor will insert the tab character. Toggle this behavior by pressing {0}.</source>
        <target state="translated">在当前编辑器中按 Tab 将插入制表符。通过按 {0} 切换此行为。</target>
      </trans-unit>
      <trans-unit id="tabFocusModeOffMsgNoKb">
        <source xml:lang="en">Pressing Tab in the current editor will insert the tab character. The command {0} is currently not triggerable by a keybinding.</source>
        <target state="translated">在当前编辑器中按 Tab 会插入制表符。当前无法通过键绑定触发命令 {0}。</target>
      </trans-unit>
      <trans-unit id="openDocMac">
        <source xml:lang="en">Press Command+H now to open a browser window with more VS Code information related to Accessibility.</source>
        <target state="translated">按 Command+H 以打开浏览器窗口，其中包含更多有关 VS Code 辅助功能的信息。</target>
      </trans-unit>
      <trans-unit id="openDocWinLinux">
        <source xml:lang="en">Press Control+H now to open a browser window with more VS Code information related to Accessibility.</source>
        <target state="translated">按 Ctrl+H 以打开浏览器窗口，其中包含更多有关 VS Code 辅助功能的信息。</target>
      </trans-unit>
      <trans-unit id="outroMsg">
        <source xml:lang="en">You can dismiss this tooltip and return to the editor by pressing Escape or Shift+Escape.</source>
        <target state="translated">你可以按 Esc 或 Shift+Esc 消除此工具提示并返回到编辑器。</target>
      </trans-unit>
      <trans-unit id="ShowAccessibilityHelpAction">
        <source xml:lang="en">Show Accessibility Help</source>
        <target state="translated">显示辅助功能帮助</target>
      </trans-unit>
    </body>
  </file>
  <file original="src/vs/workbench/contrib/codeEditor/browser/toggleWordWrap" source-language="en" target-language="zh-Hans" datatype="plaintext">
    <body>
      <trans-unit id="toggle.wordwrap">
        <source xml:lang="en">View: Toggle Word Wrap</source>
        <target state="translated">查看: 切换自动换行</target>
      </trans-unit>
      <trans-unit id="wordWrap.notInDiffEditor">
        <source xml:lang="en">Cannot toggle word wrap in a diff editor.</source>
        <target state="translated">不能在差异编辑器中切换自动换行。</target>
      </trans-unit>
      <trans-unit id="unwrapMinified">
        <source xml:lang="en">Disable wrapping for this file</source>
        <target state="translated">在此文件禁用折行</target>
      </trans-unit>
      <trans-unit id="wrapMinified">
        <source xml:lang="en">Enable wrapping for this file</source>
        <target state="translated">在此文件启用折行</target>
      </trans-unit>
      <trans-unit id="miToggleWordWrap">
        <source xml:lang="en">Toggle &amp;&amp;Word Wrap</source>
        <target state="translated">切换自动换行(&amp;&amp;W)</target>
        <note>&amp;&amp; denotes a mnemonic</note>
      </trans-unit>
    </body>
  </file>
  <file original="src/vs/workbench/contrib/codeEditor/browser/saveParticipants" source-language="en" target-language="zh-Hans" datatype="plaintext">
    <body>
      <trans-unit id="formatting">
        <source xml:lang="en">Running '{0}' Formatter ([configure](command:workbench.action.openSettings?%5B%22editor.formatOnSave%22%5D)).</source>
        <target state="translated">正在运行“{0}”格式化程序([配置](command:workbench.action.openSettings?%5B%22editor.formatOnSave%22%5D))。</target>
      </trans-unit>
      <trans-unit id="codeaction">
        <source xml:lang="en">Quick Fixes</source>
        <target state="translated">快速修复</target>
      </trans-unit>
      <trans-unit id="codeaction.get">
        <source xml:lang="en">Getting code actions from '{0}' ([configure](command:workbench.action.openSettings?%5B%22editor.codeActionsOnSave%22%5D)).</source>
        <target state="translated">正在从“{0}”获取代码操作([配置](command:workbench.action.openSettings?%5B%22editor.codeActionsOnSave%22%5D))。</target>
      </trans-unit>
      <trans-unit id="codeAction.apply">
        <source xml:lang="en">Applying code action '{0}'.</source>
        <target state="translated">正在应用代码操作“{0}”。</target>
      </trans-unit>
    </body>
  </file>
  <file original="src/vs/workbench/contrib/codeEditor/browser/languageConfigurationExtensionPoint" source-language="en" target-language="zh-Hans" datatype="plaintext">
    <body>
      <trans-unit id="parseErrors">
        <source xml:lang="en">Errors parsing {0}: {1}</source>
        <target state="translated">错误分析 {0}: {1}</target>
      </trans-unit>
      <trans-unit id="formatError">
        <source xml:lang="en">{0}: Invalid format, JSON object expected.</source>
        <target state="translated">{0}: 格式无效，应为 JSON 对象。</target>
      </trans-unit>
      <trans-unit id="schema.openBracket">
        <source xml:lang="en">The opening bracket character or string sequence.</source>
        <target state="translated">左方括号字符或字符串序列。</target>
      </trans-unit>
      <trans-unit id="schema.closeBracket">
        <source xml:lang="en">The closing bracket character or string sequence.</source>
        <target state="translated">右方括号字符或字符串序列。</target>
      </trans-unit>
      <trans-unit id="schema.comments">
        <source xml:lang="en">Defines the comment symbols</source>
        <target state="translated">定义注释符号</target>
      </trans-unit>
      <trans-unit id="schema.blockComments">
        <source xml:lang="en">Defines how block comments are marked.</source>
        <target state="translated">定义块注释的标记方式。</target>
      </trans-unit>
      <trans-unit id="schema.blockComment.begin">
        <source xml:lang="en">The character sequence that starts a block comment.</source>
        <target state="translated">作为块注释开头的字符序列。</target>
      </trans-unit>
      <trans-unit id="schema.blockComment.end">
        <source xml:lang="en">The character sequence that ends a block comment.</source>
        <target state="translated">作为块注释结尾的字符序列。</target>
      </trans-unit>
      <trans-unit id="schema.lineComment">
        <source xml:lang="en">The character sequence that starts a line comment.</source>
        <target state="translated">作为行注释开头的字符序列。</target>
      </trans-unit>
      <trans-unit id="schema.brackets">
        <source xml:lang="en">Defines the bracket symbols that increase or decrease the indentation.</source>
        <target state="translated">定义增加和减少缩进的括号。</target>
      </trans-unit>
      <trans-unit id="schema.autoClosingPairs">
        <source xml:lang="en">Defines the bracket pairs. When a opening bracket is entered, the closing bracket is inserted automatically.</source>
        <target state="translated">定义括号对。当输入左方括号时，将自动插入右方括号。</target>
      </trans-unit>
      <trans-unit id="schema.autoClosingPairs.notIn">
        <source xml:lang="en">Defines a list of scopes where the auto pairs are disabled.</source>
        <target state="translated">定义禁用了自动配对的作用域列表。</target>
      </trans-unit>
      <trans-unit id="schema.autoCloseBefore">
        <source xml:lang="en">Defines what characters must be after the cursor in order for bracket or quote autoclosing to occur when using the 'languageDefined' autoclosing setting. This is typically the set of characters which can not start an expression.</source>
        <target state="translated">在自动闭合设置为 "languageDefined" 时，定义使括号或引号自动闭合的光标后面的字符。通常是不会成为表达式开头的一组字符。</target>
      </trans-unit>
      <trans-unit id="schema.surroundingPairs">
        <source xml:lang="en">Defines the bracket pairs that can be used to surround a selected string.</source>
        <target state="translated">定义可用于包围所选字符串的括号对。</target>
      </trans-unit>
      <trans-unit id="schema.wordPattern">
        <source xml:lang="en">Defines what is considered to be a word in the programming language.</source>
        <target state="translated">定义一下在编程语言里什么东西会被当做是一个单词。</target>
      </trans-unit>
      <trans-unit id="schema.wordPattern.pattern">
        <source xml:lang="en">The RegExp pattern used to match words.</source>
        <target state="translated">用于匹配文本的正则表达式模式。</target>
      </trans-unit>
      <trans-unit id="schema.wordPattern.flags">
        <source xml:lang="en">The RegExp flags used to match words.</source>
        <target state="translated">用于匹配文本的正则表达式标志。</target>
      </trans-unit>
      <trans-unit id="schema.wordPattern.flags.errorMessage">
        <source xml:lang="en">Must match the pattern `/^([gimuy]+)$/`.</source>
        <target state="translated">必须匹配模式“/^([gimuy]+)$/”。</target>
      </trans-unit>
      <trans-unit id="schema.indentationRules">
        <source xml:lang="en">The language's indentation settings.</source>
        <target state="translated">语言的缩进设置。</target>
      </trans-unit>
      <trans-unit id="schema.indentationRules.increaseIndentPattern">
        <source xml:lang="en">If a line matches this pattern, then all the lines after it should be indented once (until another rule matches).</source>
        <target state="translated">如果一行文本匹配此模式，则之后所有内容都应被缩进一次（直到匹配其他规则）。</target>
      </trans-unit>
      <trans-unit id="schema.indentationRules.increaseIndentPattern.pattern">
        <source xml:lang="en">The RegExp pattern for increaseIndentPattern.</source>
        <target state="translated">increaseIndentPattern 的正则表达式模式。</target>
      </trans-unit>
      <trans-unit id="schema.indentationRules.increaseIndentPattern.flags">
        <source xml:lang="en">The RegExp flags for increaseIndentPattern.</source>
        <target state="translated">increaseIndentPattern 的正则表达式标志。</target>
      </trans-unit>
      <trans-unit id="schema.indentationRules.increaseIndentPattern.errorMessage">
        <source xml:lang="en">Must match the pattern `/^([gimuy]+)$/`.</source>
        <target state="translated">必须匹配模式“/^([gimuy]+)$/”。</target>
      </trans-unit>
      <trans-unit id="schema.indentationRules.decreaseIndentPattern">
        <source xml:lang="en">If a line matches this pattern, then all the lines after it should be unindented once (until another rule matches).</source>
        <target state="translated">如果某行文本匹配此模式，则其后所有行都应被取消缩进一次 (直到匹配其他规则)。</target>
      </trans-unit>
      <trans-unit id="schema.indentationRules.decreaseIndentPattern.pattern">
        <source xml:lang="en">The RegExp pattern for decreaseIndentPattern.</source>
        <target state="translated">decreaseIndentPattern 的正则表达式模式。</target>
      </trans-unit>
      <trans-unit id="schema.indentationRules.decreaseIndentPattern.flags">
        <source xml:lang="en">The RegExp flags for decreaseIndentPattern.</source>
        <target state="translated">decreaseIndentPattern 的正则表达式标志。</target>
      </trans-unit>
      <trans-unit id="schema.indentationRules.decreaseIndentPattern.errorMessage">
        <source xml:lang="en">Must match the pattern `/^([gimuy]+)$/`.</source>
        <target state="translated">必须匹配模式“/^([gimuy]+)$/”。</target>
      </trans-unit>
      <trans-unit id="schema.indentationRules.indentNextLinePattern">
        <source xml:lang="en">If a line matches this pattern, then **only the next line** after it should be indented once.</source>
        <target state="translated">如果某一行匹配此模式，那么仅此行之后的**下一行**应缩进一次。</target>
      </trans-unit>
      <trans-unit id="schema.indentationRules.indentNextLinePattern.pattern">
        <source xml:lang="en">The RegExp pattern for indentNextLinePattern.</source>
        <target state="translated">indentNextLinePattern 的正则表达式模式。</target>
      </trans-unit>
      <trans-unit id="schema.indentationRules.indentNextLinePattern.flags">
        <source xml:lang="en">The RegExp flags for indentNextLinePattern.</source>
        <target state="translated">indentNextLinePattern 的正则表达式标志。</target>
      </trans-unit>
      <trans-unit id="schema.indentationRules.indentNextLinePattern.errorMessage">
        <source xml:lang="en">Must match the pattern `/^([gimuy]+)$/`.</source>
        <target state="translated">必须匹配模式“/^([gimuy]+)$/”。</target>
      </trans-unit>
      <trans-unit id="schema.indentationRules.unIndentedLinePattern">
        <source xml:lang="en">If a line matches this pattern, then its indentation should not be changed and it should not be evaluated against the other rules.</source>
        <target state="translated">如果某一行匹配此模式，那么不应更改此行的缩进，且不应针对其他规则对其进行计算。</target>
      </trans-unit>
      <trans-unit id="schema.indentationRules.unIndentedLinePattern.pattern">
        <source xml:lang="en">The RegExp pattern for unIndentedLinePattern.</source>
        <target state="translated">unIndentedLinePattern 的正则表达式模式。</target>
      </trans-unit>
      <trans-unit id="schema.indentationRules.unIndentedLinePattern.flags">
        <source xml:lang="en">The RegExp flags for unIndentedLinePattern.</source>
        <target state="translated">unIndentedLinePattern 的正则表达式标志。</target>
      </trans-unit>
      <trans-unit id="schema.indentationRules.unIndentedLinePattern.errorMessage">
        <source xml:lang="en">Must match the pattern `/^([gimuy]+)$/`.</source>
        <target state="translated">必须匹配模式“/^([gimuy]+)$/”。</target>
      </trans-unit>
      <trans-unit id="schema.folding">
        <source xml:lang="en">The language's folding settings.</source>
        <target state="translated">此语言的折叠设置。</target>
      </trans-unit>
      <trans-unit id="schema.folding.offSide">
        <source xml:lang="en">A language adheres to the off-side rule if blocks in that language are expressed by their indentation. If set, empty lines belong to the subsequent block.</source>
        <target state="translated">若一种语言使用缩进表示其代码块，它将遵循越位规则 (off-side rule)。若设置此项，空白行将属于其之后的代码块。</target>
      </trans-unit>
      <trans-unit id="schema.folding.markers">
        <source xml:lang="en">Language specific folding markers such as '#region' and '#endregion'. The start and end regexes will be tested against the contents of all lines and must be designed efficiently</source>
        <target state="translated">语言特定的折叠标记。例如，"#region" 与 "#endregion"。开始与结束标记的正则表达式需设计得效率高，因其将对每一行的内容进行测试。</target>
      </trans-unit>
      <trans-unit id="schema.folding.markers.start">
        <source xml:lang="en">The RegExp pattern for the start marker. The regexp must start with '^'.</source>
        <target state="translated">开始标记的正则表达式模式。其应以 "^" 开始。</target>
      </trans-unit>
      <trans-unit id="schema.folding.markers.end">
        <source xml:lang="en">The RegExp pattern for the end marker. The regexp must start with '^'.</source>
        <target state="translated">结束标记的正则表达式模式。其应以 "^" 开始。</target>
      </trans-unit>
    </body>
  </file>
  <file original="src/vs/workbench/contrib/codeEditor/browser/inspectEditorTokens/inspectEditorTokens" source-language="en" target-language="zh-Hans" datatype="plaintext">
    <body>
      <trans-unit id="inspectEditorTokens">
        <source xml:lang="en">Developer: Inspect Editor Tokens and Scopes</source>
        <target state="translated">开发人员：检查编辑器标记和作用域</target>
      </trans-unit>
      <trans-unit id="inspectTMScopesWidget.loading">
        <source xml:lang="en">Loading...</source>
        <target state="translated">正在加载...</target>
      </trans-unit>
    </body>
  </file>
  <file original="src/vs/workbench/contrib/codeEditor/browser/find/simpleFindWidget" source-language="en" target-language="zh-Hans" datatype="plaintext">
    <body>
      <trans-unit id="label.find">
        <source xml:lang="en">Find</source>
        <target state="translated">查找</target>
      </trans-unit>
      <trans-unit id="placeholder.find">
        <source xml:lang="en">Find</source>
        <target state="translated">查找</target>
      </trans-unit>
      <trans-unit id="label.previousMatchButton">
        <source xml:lang="en">Previous match</source>
        <target state="translated">上一个匹配项</target>
      </trans-unit>
      <trans-unit id="label.nextMatchButton">
        <source xml:lang="en">Next match</source>
        <target state="translated">下一个匹配项</target>
      </trans-unit>
      <trans-unit id="label.closeButton">
        <source xml:lang="en">Close</source>
        <target state="translated">关闭</target>
      </trans-unit>
    </body>
  </file>
  <file original="src/vs/workbench/contrib/codeEditor/browser/find/simpleFindReplaceWidget" source-language="en" target-language="zh-Hans" datatype="plaintext">
    <body>
      <trans-unit id="label.find">
        <source xml:lang="en">Find</source>
        <target state="translated">查找</target>
      </trans-unit>
      <trans-unit id="placeholder.find">
        <source xml:lang="en">Find</source>
        <target state="translated">查找</target>
      </trans-unit>
      <trans-unit id="label.previousMatchButton">
        <source xml:lang="en">Previous match</source>
        <target state="translated">上一个匹配项</target>
      </trans-unit>
      <trans-unit id="label.nextMatchButton">
        <source xml:lang="en">Next match</source>
        <target state="translated">下一个匹配项</target>
      </trans-unit>
      <trans-unit id="label.closeButton">
        <source xml:lang="en">Close</source>
        <target state="translated">关闭</target>
      </trans-unit>
      <trans-unit id="label.toggleReplaceButton">
        <source xml:lang="en">Toggle Replace mode</source>
        <target state="translated">切换替换模式</target>
      </trans-unit>
      <trans-unit id="label.replace">
        <source xml:lang="en">Replace</source>
        <target state="translated">替换</target>
      </trans-unit>
      <trans-unit id="placeholder.replace">
        <source xml:lang="en">Replace</source>
        <target state="translated">替换</target>
      </trans-unit>
      <trans-unit id="label.replaceButton">
        <source xml:lang="en">Replace</source>
        <target state="translated">替换</target>
      </trans-unit>
      <trans-unit id="label.replaceAllButton">
        <source xml:lang="en">Replace All</source>
        <target state="translated">全部替换</target>
      </trans-unit>
    </body>
  </file>
</xliff>