<?xml version="1.0" encoding="utf-8"?>
<xliff version="1.2" xmlns="urn:oasis:names:tc:xliff:document:1.2">
  <file original="package" source-language="en" target-language="ja" datatype="plaintext">
    <body>
      <trans-unit id="extension.description">
        <source xml:lang="en">Node.js debugging support</source>
        <target state="translated">Node.js デバッグ サポート</target>
      </trans-unit>
      <trans-unit id="node.label">
        <source xml:lang="en">Node.js v6.3+ via Inspector Protocol</source>
        <target state="translated">Node.js v6.3 以上のインスペクター プロトコルを介する</target>
      </trans-unit>
      <trans-unit id="node.sourceMaps.description">
        <source xml:lang="en">Use JavaScript source maps (if they exist).</source>
        <target state="translated">JavaScript ソース マップを使用します (存在する場合)。</target>
      </trans-unit>
      <trans-unit id="outDir.deprecationMessage">
        <source xml:lang="en">Attribute 'outDir' is deprecated, use 'outFiles' instead.</source>
        <target state="translated">属性 'outDir' は非推奨です。代わりに 'outFiles' を使用してください。</target>
      </trans-unit>
      <trans-unit id="node.outFiles.description">
        <source xml:lang="en">If source maps are enabled, these glob patterns specify the generated JavaScript files. If a pattern starts with `!` the files are excluded. If not specified, the generated code is expected in the same directory as its source.</source>
        <target state="translated">ソース マップを有効にすると、これらの glob パターンは生成した JavaScript ファイルを指定します。パターンが `!` で始まる場合は、ファイルは除外されます。指定しない場合は、生成されたコードはそのソースと同じディレクトリ内にあると想定されます。</target>
      </trans-unit>
      <trans-unit id="node.stopOnEntry.description">
        <source xml:lang="en">Automatically stop program after launch.</source>
        <target state="translated">起動後、プログラムを自動的に停止します。</target>
      </trans-unit>
      <trans-unit id="node.port.description">
        <source xml:lang="en">Debug port to attach to. Default is 9229.</source>
        <target state="translated">アタッチ先のデバッグ ポート。既定は 9229 です。</target>
      </trans-unit>
      <trans-unit id="node.address.description">
        <source xml:lang="en">TCP/IP address of debug port. Default is 'localhost'.</source>
        <target state="translated">デバッグ ポートの TCP/IP アドレス。既定は 'localhost' です。</target>
      </trans-unit>
      <trans-unit id="node.timeout.description">
        <source xml:lang="en">Retry for this number of milliseconds to connect to Node.js. Default is 10000 ms.</source>
        <target state="translated">このミリ秒の間、Node.js への接続を再試行します。既定値は 10000 ミリ秒です。</target>
      </trans-unit>
      <trans-unit id="node.smartStep.description">
        <source xml:lang="en">Automatically step through generated code that cannot be mapped back to the original source.</source>
        <target state="translated">元のソースにマップし直すことができない、生成されたコードを自動的にステップ スルーします。</target>
      </trans-unit>
      <trans-unit id="node.enableSourceMapCaching.description">
        <source xml:lang="en">When sourcemaps are downloaded from a URL, cache them to disk.</source>
        <target state="translated">ソースマップを URL からダウンロードした場合、ディスクにキャッシュします。</target>
      </trans-unit>
      <trans-unit id="node.diagnosticLogging.description">
        <source xml:lang="en">When true, the adapter logs its own diagnostic info to the console</source>
        <target state="translated">true の場合、アダプターはコンソールに診断情報を記録します</target>
      </trans-unit>
      <trans-unit id="node.diagnosticLogging.deprecationMessage">
        <source xml:lang="en">'diagnosticLogging' is deprecated. Use 'trace' instead.</source>
        <target state="translated">'diagnosticLogging' は非推奨です。代わりに 'trace' を使用してください。</target>
      </trans-unit>
      <trans-unit id="node.verboseDiagnosticLogging.description">
        <source xml:lang="en">When true, the adapter logs all traffic with the client and target (as well as the info logged by 'diagnosticLogging')</source>
        <target state="translated">True の場合、アダプターはクライアントとターゲット(および 'diagnosticLogging' によって記録された情報)とともにすべてのトラフィックを記録します</target>
      </trans-unit>
      <trans-unit id="node.verboseDiagnosticLogging.deprecationMessage">
        <source xml:lang="en">'verboseDiagnosticLogging' is deprecated. Use 'trace' instead.</source>
        <target state="translated">'verboseDiagnosticLogging' は非推奨です。代わりに 'trace' を使用してください。</target>
      </trans-unit>
      <trans-unit id="node.trace.description">
        <source xml:lang="en">When 'true', the debugger will log tracing info to a file. When 'verbose', it will also show logs in the console.</source>
        <target state="translated">'true' の場合、デバッガーはトレース情報をファイルに記録します。'verbose' の場合、コンソールにもログが表示されます。</target>
      </trans-unit>
      <trans-unit id="node.sourceMapPathOverrides.description">
        <source xml:lang="en">A set of mappings for rewriting the locations of source files from what the sourcemap says, to their locations on disk. See README for details.</source>
        <target state="translated">ソース ファイルの場所をソースマップが示している場所からディスク上の場所に書き換えるための一連のマッピングです。 詳細は README を参照してください。</target>
      </trans-unit>
      <trans-unit id="node.skipFiles.description">
        <source xml:lang="en">An array of file or folder names, or glob patterns, to skip when debugging.</source>
        <target state="translated">デバッグ時にスキップするファイル、またはフォルダー名、glob パターンの配列。</target>
      </trans-unit>
      <trans-unit id="node.restart.description">
        <source xml:lang="en">Restart session after Node.js has terminated.</source>
        <target state="translated">Node.js が終了した後、セッションを再開します。</target>
      </trans-unit>
      <trans-unit id="node.showAsyncStacks.description">
        <source xml:lang="en">Show the async calls that led to the current call stack.</source>
        <target state="translated">現在の呼び出し履歴の原因となった非同期呼び出しを表示します。</target>
      </trans-unit>
      <trans-unit id="node.disableOptimisticBPs.description">
        <source xml:lang="en">Don't set breakpoints in any file until a sourcemap has been loaded for that file.</source>
        <target state="translated">そのファイルのソースマップが読み込み終わるまで、ファイル内にブレークポイントを設定しません。</target>
      </trans-unit>
      <trans-unit id="node.launch.program.description">
        <source xml:lang="en">Absolute path to the program.</source>
        <target state="translated">プログラムへの絶対パス。</target>
      </trans-unit>
      <trans-unit id="node.launch.console.description">
        <source xml:lang="en">Where to launch the debug target: internal console, integrated terminal, or external terminal.</source>
        <target state="translated">デバッグ ターゲットを起動する場所: 内部コンソール、統合ターミナル、外部のターミナル。</target>
      </trans-unit>
      <trans-unit id="node.launch.args.description">
        <source xml:lang="en">Command line arguments passed to the program.</source>
        <target state="translated">プログラムに渡されるコマンド ライン引数。</target>
      </trans-unit>
      <trans-unit id="node.launch.cwd.description">
        <source xml:lang="en">Absolute path to the working directory of the program being debugged.</source>
        <target state="translated">デバッグされるプログラムの作業ディレクトリへの絶対パス。</target>
      </trans-unit>
      <trans-unit id="node.launch.runtimeExecutable.description">
        <source xml:lang="en">Runtime to use. Either an absolute path or the name of a runtime available on the PATH. If ommitted `node` is assumed.</source>
        <target state="translated">使用するランタイム。絶対パス、または PATH 上で使用可能なランタイムの名前のいずれかです。省略した場合は、`node` とみなされます。</target>
      </trans-unit>
      <trans-unit id="node.launch.runtimeArgs.description">
        <source xml:lang="en">Optional arguments passed to the runtime executable.</source>
        <target state="translated">ランタイム実行可能ファイルに渡される省略可能な引数。</target>
      </trans-unit>
      <trans-unit id="node.launch.env.description">
        <source xml:lang="en">Environment variables passed to the program. The value `null` removes the variable from the environment.</source>
        <target state="translated">プログラムに渡される環境変数。`null` 値は環境変数から変数を削除します。</target>
      </trans-unit>
      <trans-unit id="node.launch.envFile.description">
        <source xml:lang="en">Absolute path to a file containing environment variable definitions.</source>
        <target state="translated">環境変数の定義を含むファイルへの絶対パス。</target>
      </trans-unit>
      <trans-unit id="node.launch.outputCapture.description">
        <source xml:lang="en">From where to capture output messages: The debug API, or stdout/stderr streams.</source>
        <target state="translated">出力メッセージのキャプチャ場所: debug API, stdout/stderr ストリーム</target>
      </trans-unit>
      <trans-unit id="node.launch.config.name">
        <source xml:lang="en">Launch</source>
        <target state="translated">起動</target>
      </trans-unit>
      <trans-unit id="node.attach.processId.description">
        <source xml:lang="en">ID of process to attach to.</source>
        <target state="translated">アタッチ先のプロセスの ID。</target>
      </trans-unit>
      <trans-unit id="node.attach.localRoot.description">
        <source xml:lang="en">The local source root that corresponds to the 'remoteRoot'.</source>
        <target state="translated">'RemoteRoot' に対応するローカルのソース ルート。</target>
      </trans-unit>
      <trans-unit id="node.attach.remoteRoot.description">
        <source xml:lang="en">The source root of the remote host.</source>
        <target state="translated">リモート ホストのソース ルート。</target>
      </trans-unit>
      <trans-unit id="node.attach.config.name">
        <source xml:lang="en">Attach</source>
        <target state="translated">アタッチ</target>
      </trans-unit>
      <trans-unit id="node.processattach.config.name">
        <source xml:lang="en">Attach to Process</source>
        <target state="translated">プロセスにアタッチ</target>
      </trans-unit>
      <trans-unit id="toggle.skipping.this.file">
        <source xml:lang="en">Toggle Skipping this File</source>
        <target state="translated">このファイルをスキップする</target>
      </trans-unit>
      <trans-unit id="extensionHost.label">
        <source xml:lang="en">VS Code Extension Development</source>
        <target state="translated">VS Code 拡張機能の開発</target>
      </trans-unit>
      <trans-unit id="extensionHost.launch.runtimeExecutable.description">
        <source xml:lang="en">Absolute path to VS Code.</source>
        <target state="translated">VS Code への絶対パス。</target>
      </trans-unit>
      <trans-unit id="extensionHost.launch.stopOnEntry.description">
        <source xml:lang="en">Automatically stop the extension host after launch.</source>
        <target state="translated">起動後に拡張機能ホストを自動的に停止します。</target>
      </trans-unit>
      <trans-unit id="extensionHost.launch.env.description">
        <source xml:lang="en">Environment variables passed to the extension host.</source>
        <target state="translated">拡張機能ホストに渡された環境変数。</target>
      </trans-unit>
      <trans-unit id="extensionHost.snippet.launch.label">
        <source xml:lang="en">VS Code Extension Development</source>
        <target state="translated">VS Code 拡張機能の開発</target>
      </trans-unit>
      <trans-unit id="extensionHost.snippet.launch.description">
        <source xml:lang="en">Launch a VS Code extension in debug mode</source>
        <target state="translated">VS Code 拡張機能をデバッグ モードで起動します</target>
      </trans-unit>
      <trans-unit id="extensionHost.launch.config.name">
        <source xml:lang="en">Launch Extension</source>
        <target state="translated">拡張機能の起動</target>
      </trans-unit>
      <trans-unit id="debug.extensionHost.useV3.description">
        <source xml:lang="en">[Experimental] Controls whether to delegate "extensionHost"-type launch configs to the js-debug extension.</source>
        <target state="translated">[試験段階] "extensionHost" 型の起動構成ファイルを js-debug 拡張機能にデリゲートするかどうかを制御します。</target>
      </trans-unit>
    </body>
  </file>
  <file original="out/src/errors" source-language="en" target-language="ja" datatype="plaintext">
    <body>
      <trans-unit id="VSND2001">
        <source xml:lang="en">Cannot find runtime '{0}' on PATH. Is '{0}' installed?</source>
        <target state="translated">PATH 上で '{0}' のランタイムが見つかりません。'{0}' がインストールされていますか?</target>
      </trans-unit>
      <trans-unit id="VSND2011">
        <source xml:lang="en">Cannot launch debug target in terminal ({0}).</source>
        <target state="translated">ターミナル ({0}) でデバッグ ターゲットを起動できません。</target>
      </trans-unit>
      <trans-unit id="VSND2017">
        <source xml:lang="en">Cannot launch debug target ({0}).</source>
        <target state="translated">デバッグ ターゲット ({0}) を起動できません。</target>
      </trans-unit>
      <trans-unit id="VSND2035">
        <source xml:lang="en">Cannot debug extension ({0}).</source>
        <target state="translated">拡張機能 ({0}) をデバッグできません。</target>
      </trans-unit>
      <trans-unit id="VSND2028">
        <source xml:lang="en">Unknown console type '{0}'.</source>
        <target state="translated">不明なコンソールの種類 '{0}'.</target>
      </trans-unit>
      <trans-unit id="VSND2002">
        <source xml:lang="en">Cannot launch program '{0}'; configuring source maps might help.</source>
        <target state="translated">プログラム '{0}' を起動できません。ソース マップを構成すると役立つ場合があります。</target>
      </trans-unit>
      <trans-unit id="VSND2003">
        <source xml:lang="en">Cannot launch program '{0}'; setting the '{1}' attribute might help.</source>
        <target state="translated">プログラム '{0}' を起動できません。'{1}' 属性を設定すると役立つ可能性があります。</target>
      </trans-unit>
      <trans-unit id="VSND2009">
        <source xml:lang="en">Cannot launch program '{0}' because corresponding JavaScript cannot be found.</source>
        <target state="translated">対応する JavaScript が見つからないため、プログラム '{0}' を起動できません。</target>
      </trans-unit>
      <trans-unit id="VSND2029">
        <source xml:lang="en">Can't load environment variables from file ({0}).</source>
        <target state="translated">ファイル ({0}) から環境変数を読み込むことができません。</target>
      </trans-unit>
    </body>
  </file>
  <file original="out/src/nodeDebugAdapter" source-language="en" target-language="ja" datatype="plaintext">
    <body>
      <trans-unit id="attribute.wsl.not.exist">
        <source xml:lang="en">Cannot find Windows Subsystem for Linux installation.</source>
        <target state="translated">Windows Subsystem for Linux のインストールが見つかりません。</target>
      </trans-unit>
      <trans-unit id="program.path.case.mismatch.warning">
        <source xml:lang="en">Program path uses differently cased character as file on disk; this might result in breakpoints not being hit.</source>
        <target state="translated">プログラム パスで使用されている文字と、ディスク上のファイルの文字の間で大文字と小文字が異なっています。ブレークポイントがヒットしない可能性があります。</target>
      </trans-unit>
      <trans-unit id="node.console.title">
        <source xml:lang="en">Node Debug Console</source>
        <target state="translated">Node デバッグ コンソール</target>
      </trans-unit>
      <trans-unit id="attribute.path.not.exist">
        <source xml:lang="en">Attribute '{0}' does not exist ('{1}').</source>
        <target state="translated">属性 '{0}' が存在しません ('{1}')。</target>
      </trans-unit>
      <trans-unit id="attribute.path.not.absolute">
        <source xml:lang="en">Attribute '{0}' is not absolute ('{1}'); consider adding '{2}' as a prefix to make it absolute.</source>
        <target state="translated">属性 '{0}' が絶対 ('{1}') ではありません。絶対的なものにするには、プレフィックスとして '{2}' を追加することを考慮してください。</target>
      </trans-unit>
      <trans-unit id="VSND2001">
        <source xml:lang="en">Cannot find runtime '{0}' on PATH. Make sure to have '{0}' installed.</source>
        <target state="translated">PATH 上で '{0}' のランタイムが見つかりません。'{0}' がインストールされていることを確認してください。</target>
      </trans-unit>
      <trans-unit id="more.information">
        <source xml:lang="en">More Information</source>
        <target state="translated">詳細情報</target>
      </trans-unit>
      <trans-unit id="origin.from.node">
        <source xml:lang="en">read-only content from Node.js</source>
        <target state="translated">Node.js からの読み取り専用コンテンツ</target>
      </trans-unit>
      <trans-unit id="origin.core.module">
        <source xml:lang="en">read-only core module</source>
        <target state="translated">読み取り専用のコア モジュール</target>
      </trans-unit>
    </body>
  </file>
</xliff>